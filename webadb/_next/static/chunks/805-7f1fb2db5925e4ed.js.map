{"version":3,"file":"static/chunks/805-7f1fb2db5925e4ed.js","mappings":"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AGrU,EAAG,EAAGsoB,EAAG,EAAGhiB,EAAG,IAC7B,IAAK,CAAC,CAAE+N,EAAG,EAAGrU,EAAG,EAAGsoB,EAAG,EAAGhiB,EAAG,IAC7B,IAAK,CAAC,CAAE+N,EAAG,EAAGrU,EAAG,EAAGsoB,EAAG,EAAGhiB,EAAG,IAC7B,IAAK,CAAC,CAAE+N,EAAG,EAAGrU,EAAG,EAAGsoB,EAAG,EAAGhiB,EAAG,IAC7B,IAAK,CAAC,CAAE+N,EAAG,EAAGrU,EAAG,EAAGsoB,EAAG,EAAGhiB,EAAG,IAC7B,IAAK,CAAC,CAAE+N,EAAG,EAAGrU,EAAG,EAAGsoB,EAAG,EAAGhiB,EAAG,IAC7B,IAAK,CAAC,CAAE+N,EAAG,EAAGrU,EAAG,EAAGsoB,EAAG,EAAGhiB,EAAG,IAC7B,IAAK,CAAC,CAAE+N,EAAG,EAAGrU,EAAG,EAAGsoB,EAAG,EAAGhiB,EAAG,IAC7B,IAAK,CAAC,CAAE+N,EAAG,EAAGrU,EAAG,EAAGsoB,EAAG,EAAGhiB,EAAG,IAC7B,IAAK,CAAC,CAAE+N,EAAG,EAAGrU,EAAG,EAAGsoB,EAAG,EAAGhiB,EAAG,IAC7B,IAAK,CAAC,CAAE+N,EAAG,EAAGrU,EAAG,EAAGsoB,EAAG,EAAGhiB,EAAG,IAC7B,IAAK,CAAC,CAAE+N,EAAG,EAAGrU,EAAG,EAAGsoB,EAAG,EAAGhiB,EAAG,IAC7B,IAAK,CAAC,CAAE+N,EAAG,EAAGrU,EAAG,EAAGsoB,EAAG,EAAGhiB,EAAG,IAC7B,IAAK,CAAC,CAAE+N,EAAG,EAAGrU,EAAG,EAAGsoB,EAAG,EAAGhiB,EAAG,IAC7B,IAAK,CAAC,CAAE+N,EAAG,EAAGrU,EAAG,EAAGsoB,EAAG,EAAGhiB,EAAG,IAG7B,IAAK,CAAC,CAAE+N,EAAG,EAAGrU,EAAG,EAAGsoB,EAAG,EAAGhiB,EAAG,IAC7B,IAAK,CAAC,CAAE+N,EAAG,EAAGrU,EAAG,EAAGsoB,EAAG,EAAGhiB,EAAG,IAG7B,IAAK,CAAC,CAAE+N,EAAG,EAAGrU,EAAG,EAAGsoB,EAAG,EAAGhiB,EAAG,IAC7B,IAAK,CAAC,CAAE+N,EAAG,EAAGrU,EAAG,EA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","sources":["webpack://_N_E/../../common/temp/node_modules/.pnpm/xterm@5.1.0/node_modules/xterm/css/xterm.css","webpack://_N_E/../../common/temp/node_modules/.pnpm/@fluentui+react@8.106.1_5ndqzdd6t4rivxsukjv3i3ak2q/node_modules/@fluentui/react/lib/components/src/components/SearchBox/SearchBox.base.tsx","webpack://_N_E/../../common/temp/node_modules/.pnpm/@fluentui+react@8.106.1_5ndqzdd6t4rivxsukjv3i3ak2q/node_modules/@fluentui/react/lib/components/src/components/SearchBox/SearchBox.styles.tsx","webpack://_N_E/../../common/temp/node_modules/.pnpm/@fluentui+react@8.106.1_5ndqzdd6t4rivxsukjv3i3ak2q/node_modules/@fluentui/react/lib/components/src/components/SearchBox/SearchBox.tsx","webpack://_N_E/FitAddon/webpack/universalModuleDefinition","webpack://_N_E/FitAddon/./src/FitAddon.ts","webpack://_N_E/SearchAddon/webpack/universalModuleDefinition","webpack://_N_E/SearchAddon/../../src/common/EventEmitter.ts","webpack://_N_E/SearchAddon/../../src/common/Lifecycle.ts","webpack://_N_E/SearchAddon/webpack/bootstrap","webpack://_N_E/SearchAddon/./src/SearchAddon.ts","webpack://_N_E/WebglAddon/webpack/universalModuleDefinition","webpack://_N_E/WebglAddon/./src/GlyphRenderer.ts","webpack://_N_E/WebglAddon/./src/RectangleRenderer.ts","webpack://_N_E/WebglAddon/./src/RenderModel.ts","webpack://_N_E/WebglAddon/./src/WebglRenderer.ts","webpack://_N_E/WebglAddon/./src/WebglUtils.ts","webpack://_N_E/WebglAddon/./src/renderLayer/BaseRenderLayer.ts","webpack://_N_E/WebglAddon/./src/renderLayer/CursorRenderLayer.ts","webpack://_N_E/WebglAddon/./src/renderLayer/LinkRenderLayer.ts","webpack://_N_E/WebglAddon/../../src/browser/Lifecycle.ts","webpack://_N_E/WebglAddon/../../src/browser/renderer/shared/CellColorResolver.ts","webpack://_N_E/WebglAddon/../../src/browser/renderer/shared/CharAtlasCache.ts","webpack://_N_E/WebglAddon/../../src/browser/renderer/shared/CharAtlasUtils.ts","webpack://_N_E/WebglAddon/../../src/browser/renderer/shared/Constants.ts","webpack://_N_E/WebglAddon/../../src/browser/renderer/shared/CustomGlyphs.ts","webpack://_N_E/WebglAddon/../../src/browser/renderer/shared/DevicePixelObserver.ts","webpack://_N_E/WebglAddon/../../src/browser/renderer/shared/RendererUtils.ts","webpack://_N_E/WebglAddon/../../src/browser/renderer/shared/SelectionRenderModel.ts","webpack://_N_E/WebglAddon/../../src/browser/renderer/shared/TextureAtlas.ts","webpack://_N_E/WebglAddon/../../src/common/Color.ts","webpack://_N_E/WebglAddon/../../src/common/EventEmitter.ts","webpack://_N_E/WebglAddon/../../src/common/Lifecycle.ts","webpack://_N_E/WebglAddon/../../src/common/MultiKeyMap.ts","webpack://_N_E/WebglAddon/../../src/common/Platform.ts","webpack://_N_E/WebglAddon/../../src/common/TaskQueue.ts","webpack://_N_E/WebglAddon/../../src/common/buffer/AttributeData.ts","webpack://_N_E/WebglAddon/../../src/common/buffer/CellData.ts","webpack://_N_E/WebglAddon/../../src/common/buffer/Constants.ts","webpack://_N_E/WebglAddon/../../src/common/input/TextDecoder.ts","webpack://_N_E/WebglAddon/webpack/bootstrap","webpack://_N_E/WebglAddon/./src/WebglAddon.ts","webpack://_N_E/<anon>"],"sourcesContent":["// extracted by mini-css-extract-plugin","import * as React from 'react';\nimport { KeyCodes, classNamesFunction, getNativeProps, inputProperties } from '../../Utilities';\nimport { useControllableValue, useId, useMergedRefs, useWarnings } from '@fluentui/react-hooks';\nimport { IconButton } from '../../Button';\nimport { Icon } from '../../Icon';\nimport type { ISearchBoxProps, ISearchBoxStyleProps, ISearchBoxStyles, ISearchBox } from './SearchBox.types';\nimport type { IButtonProps, IButtonStyles } from '../../Button';\nimport type { IIconProps } from '../../Icon';\n\nconst COMPONENT_NAME = 'SearchBox';\nconst iconButtonStyles: Partial<IButtonStyles> = { root: { height: 'auto' }, icon: { fontSize: '12px' } };\nconst iconButtonProps: IIconProps = { iconName: 'Clear' };\nconst defaultClearButtonProps: IButtonProps = { ariaLabel: 'Clear text' };\n\nconst getClassNames = classNamesFunction<ISearchBoxStyleProps, ISearchBoxStyles>();\n\nconst useComponentRef = (\n  componentRef: React.Ref<ISearchBox> | undefined,\n  inputElementRef: React.RefObject<HTMLInputElement>,\n  hasFocus: boolean,\n) => {\n  React.useImperativeHandle(\n    componentRef,\n    () => ({\n      focus: () => inputElementRef.current?.focus(),\n      hasFocus: () => hasFocus,\n    }),\n    [inputElementRef, hasFocus],\n  );\n};\n\nexport const SearchBoxBase: React.FunctionComponent<ISearchBoxProps> = React.forwardRef<\n  HTMLDivElement,\n  ISearchBoxProps\n>((props, forwardedRef) => {\n  const {\n    ariaLabel,\n    className,\n    defaultValue = '',\n    disabled,\n    underlined,\n    styles,\n    // eslint-disable-next-line deprecation/deprecation\n    labelText,\n    // eslint-disable-next-line deprecation/deprecation\n    placeholder = labelText,\n    theme,\n    clearButtonProps = defaultClearButtonProps,\n    disableAnimation = false,\n    showIcon = false,\n    onClear: customOnClear,\n    onBlur: customOnBlur,\n    onEscape: customOnEscape,\n    onSearch: customOnSearch,\n    onKeyDown: customOnKeyDown,\n    iconProps,\n    role,\n    onChange,\n    // eslint-disable-next-line deprecation/deprecation\n    onChanged,\n  } = props;\n\n  const [hasFocus, setHasFocus] = React.useState(false);\n\n  const prevChangeTimestamp = React.useRef<number | undefined>();\n  const [uncastValue, setValue] = useControllableValue(\n    props.value,\n    defaultValue,\n    (ev: React.ChangeEvent<HTMLInputElement> | undefined, newValue: string) => {\n      if (ev && ev.timeStamp === prevChangeTimestamp.current) {\n        // For historical reasons, SearchBox handles both onInput and onChange (we can't modify this\n        // outside a major version due to potential to break partners' tests and possibly apps).\n        // Only call props.onChange for one of the events.\n        return;\n      }\n      prevChangeTimestamp.current = ev?.timeStamp;\n      onChange?.(ev, newValue);\n      onChanged?.(newValue);\n    },\n  );\n  const value = String(uncastValue);\n\n  const rootElementRef = React.useRef<HTMLDivElement>(null);\n  const inputElementRef = React.useRef<HTMLInputElement>(null);\n  const mergedRootRef = useMergedRefs(rootElementRef, forwardedRef);\n  const id = useId(COMPONENT_NAME, props.id);\n\n  const { onClick: customOnClearClick } = clearButtonProps;\n\n  const classNames = getClassNames(styles!, {\n    theme: theme!,\n    className,\n    underlined,\n    hasFocus,\n    disabled,\n    hasInput: value.length > 0,\n    disableAnimation,\n    showIcon,\n  });\n\n  const nativeProps = getNativeProps<React.InputHTMLAttributes<HTMLInputElement>>(props, inputProperties, [\n    'className',\n    'placeholder',\n    'onFocus',\n    'onBlur',\n    'value',\n    'role',\n  ]);\n\n  const onClear = React.useCallback(\n    (ev: React.MouseEvent<HTMLAnchorElement | HTMLButtonElement> | React.KeyboardEvent<HTMLElement>) => {\n      customOnClear?.(ev);\n      if (!ev.defaultPrevented) {\n        setValue('');\n        inputElementRef.current?.focus();\n        ev.stopPropagation();\n        ev.preventDefault();\n      }\n    },\n    [customOnClear, setValue],\n  );\n\n  const onClearClick = React.useCallback(\n    (ev: React.MouseEvent<HTMLAnchorElement | HTMLButtonElement>) => {\n      customOnClearClick?.(ev);\n      if (!ev.defaultPrevented) {\n        onClear(ev);\n      }\n    },\n    [customOnClearClick, onClear],\n  );\n\n  const onFocusCapture = (ev: React.FocusEvent<HTMLElement>) => {\n    setHasFocus(true);\n    props.onFocus?.(ev as React.FocusEvent<HTMLInputElement>);\n  };\n\n  const onClickFocus = () => {\n    if (inputElementRef.current) {\n      inputElementRef.current.focus();\n      inputElementRef.current.selectionStart = inputElementRef.current.selectionEnd = 0;\n    }\n  };\n\n  const onBlur = React.useCallback(\n    (ev: React.FocusEvent<HTMLInputElement>): void => {\n      setHasFocus(false);\n      customOnBlur?.(ev);\n    },\n    [customOnBlur],\n  );\n\n  const onInputChange = (ev: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(ev.target.value, ev);\n  };\n\n  const onKeyDown = (ev: React.KeyboardEvent<HTMLInputElement>) => {\n    // eslint-disable-next-line deprecation/deprecation\n    switch (ev.which) {\n      case KeyCodes.escape:\n        customOnEscape?.(ev);\n        // Only call onClear if the search box has a value to clear. Otherwise, allow the Esc key\n        // to propagate from the empty search box to a parent element such as a dialog, etc.\n        if (value && !ev.defaultPrevented) {\n          onClear(ev);\n        }\n        break;\n\n      case KeyCodes.enter:\n        if (customOnSearch) {\n          customOnSearch(value);\n          ev.preventDefault();\n          ev.stopPropagation();\n        }\n        break;\n\n      default:\n        // REVIEW: Why aren't we calling customOnKeyDown for Escape or Enter?\n        customOnKeyDown?.(ev);\n        // REVIEW: Why are we calling stopPropagation if customOnKeyDown called preventDefault?\n        // customOnKeyDown should call stopPropagation if it needs it.\n        if (ev.defaultPrevented) {\n          ev.stopPropagation();\n        }\n        break;\n    }\n  };\n\n  useDebugWarning(props);\n  useComponentRef(props.componentRef, inputElementRef, hasFocus);\n\n  return (\n    <div role={role} ref={mergedRootRef} className={classNames.root} onFocusCapture={onFocusCapture}>\n      <div className={classNames.iconContainer} onClick={onClickFocus} aria-hidden>\n        <Icon iconName=\"Search\" {...iconProps} className={classNames.icon} />\n      </div>\n      <input\n        {...nativeProps}\n        id={id}\n        className={classNames.field}\n        placeholder={placeholder}\n        onChange={onInputChange}\n        onInput={onInputChange}\n        onBlur={onBlur}\n        onKeyDown={onKeyDown}\n        value={value}\n        disabled={disabled}\n        role=\"searchbox\"\n        aria-label={ariaLabel}\n        ref={inputElementRef}\n      />\n      {value!.length > 0 && (\n        <div className={classNames.clearButton}>\n          <IconButton\n            onBlur={onBlur}\n            styles={iconButtonStyles}\n            iconProps={iconButtonProps}\n            {...clearButtonProps}\n            onClick={onClearClick}\n          />\n        </div>\n      )}\n    </div>\n  );\n});\nSearchBoxBase.displayName = COMPONENT_NAME;\n\nfunction useDebugWarning(props: ISearchBoxProps) {\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks -- build-time conditional\n    useWarnings({\n      name: COMPONENT_NAME,\n      props,\n      deprecations: { labelText: 'placeholder' },\n    });\n  }\n}\n","import {\n  HighContrastSelector,\n  AnimationVariables,\n  normalize,\n  getPlaceholderStyles,\n  getGlobalClassNames,\n  getInputFocusStyle,\n} from '../../Styling';\nimport { getRTL } from '../../Utilities';\nimport type { IStyle } from '../../Styling';\nimport type { ISearchBoxStyleProps, ISearchBoxStyles } from './SearchBox.types';\n\nconst GlobalClassNames = {\n  root: 'ms-SearchBox',\n  iconContainer: 'ms-SearchBox-iconContainer',\n  icon: 'ms-SearchBox-icon',\n  clearButton: 'ms-SearchBox-clearButton',\n  field: 'ms-SearchBox-field',\n};\n\nexport function getStyles(props: ISearchBoxStyleProps): ISearchBoxStyles {\n  const { theme, underlined, disabled, hasFocus, className, hasInput, disableAnimation, showIcon } = props;\n  const { palette, fonts, semanticColors, effects } = theme;\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  // placeholder style constants\n  const placeholderStyles: IStyle = {\n    color: semanticColors.inputPlaceholderText,\n    opacity: 1,\n  };\n\n  const inputIconAlt = palette.neutralSecondary;\n  const inputIconAltHovered = palette.neutralPrimary;\n  const inputBorderDisabled = palette.neutralLighter;\n  const inputBackgroundHovered = palette.neutralLighter;\n  const inputBackgroundDisabled = palette.neutralLighter;\n\n  return {\n    root: [\n      classNames.root,\n      fonts.medium,\n      normalize,\n      {\n        color: semanticColors.inputText,\n        backgroundColor: semanticColors.inputBackground,\n        display: 'flex',\n        flexDirection: 'row',\n        flexWrap: 'nowrap',\n        alignItems: 'stretch',\n        // The 1px top and bottom padding ensure the input field does not overlap the border\n        padding: '1px 0 1px 4px',\n        borderRadius: effects.roundedCorner2,\n        border: `1px solid ${semanticColors.inputBorder}`,\n        height: 32,\n        selectors: {\n          [HighContrastSelector]: {\n            borderColor: 'WindowText',\n          },\n          ':hover': {\n            borderColor: semanticColors.inputBorderHovered,\n            selectors: {\n              [HighContrastSelector]: {\n                borderColor: 'Highlight',\n              },\n            },\n          },\n          [`:hover .${classNames.iconContainer}`]: {\n            color: semanticColors.inputIconHovered,\n          },\n        },\n      },\n      !hasFocus &&\n        hasInput && {\n          selectors: {\n            [`:hover .${classNames.iconContainer}`]: {\n              width: 4,\n            },\n            [`:hover .${classNames.icon}`]: {\n              opacity: 0,\n              pointerEvents: 'none',\n            },\n          },\n        },\n      hasFocus && [\n        'is-active',\n        {\n          position: 'relative',\n        },\n        getInputFocusStyle(\n          semanticColors.inputFocusBorderAlt,\n          underlined ? 0 : effects.roundedCorner2,\n          underlined ? 'borderBottom' : 'border',\n        ),\n      ],\n      showIcon && [\n        {\n          selectors: {\n            [`:hover .${classNames.iconContainer}`]: {\n              width: 32,\n            },\n            [`:hover .${classNames.icon}`]: {\n              opacity: 1,\n            },\n          },\n        },\n      ],\n      disabled && [\n        'is-disabled',\n        {\n          borderColor: inputBorderDisabled,\n          backgroundColor: inputBackgroundDisabled,\n          pointerEvents: 'none',\n          cursor: 'default',\n          selectors: {\n            [HighContrastSelector]: {\n              borderColor: 'GrayText',\n            },\n          },\n        },\n      ],\n      underlined && [\n        'is-underlined',\n        {\n          borderWidth: '0 0 1px 0',\n          borderRadius: 0,\n          // Underlined SearchBox has a larger padding left to vertically align with the waffle in product\n          padding: '1px 0 1px 8px',\n        },\n      ],\n      underlined &&\n        disabled && {\n          backgroundColor: 'transparent',\n        },\n      hasInput && 'can-clear',\n      className,\n    ],\n    iconContainer: [\n      classNames.iconContainer,\n      {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        flexShrink: 0,\n        fontSize: 16,\n        width: 32,\n        textAlign: 'center',\n        color: semanticColors.inputIcon,\n        cursor: 'text',\n      },\n      hasFocus && {\n        width: 4,\n      },\n      disabled && {\n        color: semanticColors.inputIconDisabled,\n      },\n      !disableAnimation && {\n        transition: `width ${AnimationVariables.durationValue1}`,\n      },\n      showIcon &&\n        hasFocus && {\n          width: 32,\n        },\n    ],\n    icon: [\n      classNames.icon,\n      {\n        opacity: 1,\n      },\n      hasFocus && {\n        opacity: 0,\n        pointerEvents: 'none',\n      },\n      !disableAnimation && {\n        transition: `opacity ${AnimationVariables.durationValue1} 0s`,\n      },\n      showIcon &&\n        hasFocus && {\n          opacity: 1,\n        },\n    ],\n    clearButton: [\n      classNames.clearButton,\n      {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'stretch',\n        cursor: 'pointer',\n        flexBasis: '32px',\n        flexShrink: 0,\n        padding: 0,\n        margin: '-1px 0px',\n        selectors: {\n          '&:hover .ms-Button': {\n            backgroundColor: inputBackgroundHovered,\n          },\n          '&:hover .ms-Button-icon': {\n            color: inputIconAltHovered,\n          },\n          '.ms-Button': {\n            borderRadius: getRTL(theme) ? '1px 0 0 1px' : '0 1px 1px 0',\n          },\n          '.ms-Button-icon': {\n            color: inputIconAlt,\n          },\n        },\n      },\n    ],\n    field: [\n      classNames.field,\n      normalize,\n      getPlaceholderStyles(placeholderStyles),\n      {\n        backgroundColor: 'transparent',\n        border: 'none',\n        outline: 'none',\n        fontWeight: 'inherit',\n        fontFamily: 'inherit',\n        fontSize: 'inherit',\n        color: semanticColors.inputText,\n        flex: '1 1 0px',\n        // The default implicit value of 'auto' prevents the input from shrinking. Setting min-width to\n        // 0px allows the input element to shrink to fit the container.\n        minWidth: '0px',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        // This padding forces the text placement to round up.\n        paddingBottom: 0.5,\n        // This removes the IE specific clear button in the input since we implemented our own\n        selectors: {\n          '::-ms-clear': {\n            display: 'none',\n          },\n        },\n      },\n      disabled && {\n        color: semanticColors.disabledText,\n      },\n    ],\n  };\n}\n","import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { SearchBoxBase } from './SearchBox.base';\nimport { getStyles } from './SearchBox.styles';\nimport type { ISearchBoxProps, ISearchBoxStyleProps, ISearchBoxStyles } from './SearchBox.types';\n\nexport const SearchBox: React.FunctionComponent<ISearchBoxProps> = styled<\n  ISearchBoxProps,\n  ISearchBoxStyleProps,\n  ISearchBoxStyles\n>(SearchBoxBase, getStyles, undefined, { scope: 'SearchBox' });\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"FitAddon\"] = factory();\n\telse\n\t\troot[\"FitAddon\"] = factory();\n})(self, function() {\nreturn ","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal, ITerminalAddon } from 'xterm';\nimport { IRenderDimensions } from 'browser/renderer/shared/Types';\n\ninterface ITerminalDimensions {\n  /**\n   * The number of rows in the terminal.\n   */\n  rows: number;\n\n  /**\n   * The number of columns in the terminal.\n   */\n  cols: number;\n}\n\nconst MINIMUM_COLS = 2;\nconst MINIMUM_ROWS = 1;\n\nexport class FitAddon implements ITerminalAddon {\n  private _terminal: Terminal | undefined;\n\n  constructor() {}\n\n  public activate(terminal: Terminal): void {\n    this._terminal = terminal;\n  }\n\n  public dispose(): void {}\n\n  public fit(): void {\n    const dims = this.proposeDimensions();\n    if (!dims || !this._terminal || isNaN(dims.cols) || isNaN(dims.rows)) {\n      return;\n    }\n\n    // TODO: Remove reliance on private API\n    const core = (this._terminal as any)._core;\n\n    // Force a full render\n    if (this._terminal.rows !== dims.rows || this._terminal.cols !== dims.cols) {\n      core._renderService.clear();\n      this._terminal.resize(dims.cols, dims.rows);\n    }\n  }\n\n  public proposeDimensions(): ITerminalDimensions | undefined {\n    if (!this._terminal) {\n      return undefined;\n    }\n\n    if (!this._terminal.element || !this._terminal.element.parentElement) {\n      return undefined;\n    }\n\n    // TODO: Remove reliance on private API\n    const core = (this._terminal as any)._core;\n    const dims: IRenderDimensions = core._renderService.dimensions;\n\n    if (dims.css.cell.width === 0 || dims.css.cell.height === 0) {\n      return undefined;\n    }\n\n    const scrollbarWidth = this._terminal.options.scrollback === 0 ?\n      0 : core.viewport.scrollBarWidth;\n\n    const parentElementStyle = window.getComputedStyle(this._terminal.element.parentElement);\n    const parentElementHeight = parseInt(parentElementStyle.getPropertyValue('height'));\n    const parentElementWidth = Math.max(0, parseInt(parentElementStyle.getPropertyValue('width')));\n    const elementStyle = window.getComputedStyle(this._terminal.element);\n    const elementPadding = {\n      top: parseInt(elementStyle.getPropertyValue('padding-top')),\n      bottom: parseInt(elementStyle.getPropertyValue('padding-bottom')),\n      right: parseInt(elementStyle.getPropertyValue('padding-right')),\n      left: parseInt(elementStyle.getPropertyValue('padding-left'))\n    };\n    const elementPaddingVer = elementPadding.top + elementPadding.bottom;\n    const elementPaddingHor = elementPadding.right + elementPadding.left;\n    const availableHeight = parentElementHeight - elementPaddingVer;\n    const availableWidth = parentElementWidth - elementPaddingHor - scrollbarWidth;\n    const geometry = {\n      cols: Math.max(MINIMUM_COLS, Math.floor(availableWidth / dims.css.cell.width)),\n      rows: Math.max(MINIMUM_ROWS, Math.floor(availableHeight / dims.css.cell.height))\n    };\n    return geometry;\n  }\n}\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SearchAddon\"] = factory();\n\telse\n\t\troot[\"SearchAddon\"] = factory();\n})(self, function() {\nreturn ","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n    this._disposed = true;\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  constructor() {\n  }\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    for (const d of this._disposables) {\n      d.dispose();\n    }\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   * @returns The disposable.\n   */\n  public register<T extends IDisposable>(d: T): T {\n    this._disposables.push(d);\n    return d;\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n\n/**\n * Wrap a function in a disposable.\n */\nexport function toDisposable(f: () => void): IDisposable {\n  return { dispose: f };\n}\n\n/**\n * Dispose of all disposables in an array and set its length to 0.\n */\nexport function disposeArray(disposables: IDisposable[]): void {\n  for (const d of disposables) {\n    d.dispose();\n  }\n  disposables.length = 0;\n}\n\n/**\n * Creates a disposable that will dispose of an array of disposables when disposed.\n */\nexport function getDisposeArrayDisposable(array: IDisposable[]): IDisposable {\n  return { dispose: () => disposeArray(array) };\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal, IDisposable, ITerminalAddon, IBufferRange, IDecoration } from 'xterm';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\n\nexport interface ISearchOptions {\n  regex?: boolean;\n  wholeWord?: boolean;\n  caseSensitive?: boolean;\n  incremental?: boolean;\n  decorations?: ISearchDecorationOptions;\n  noScroll?: boolean;\n}\n\ninterface ISearchDecorationOptions {\n  matchBackground?: string;\n  matchBorder?: string;\n  matchOverviewRuler: string;\n  activeMatchBackground?: string;\n  activeMatchBorder?: string;\n  activeMatchColorOverviewRuler: string;\n}\n\nexport interface ISearchPosition {\n  startCol: number;\n  startRow: number;\n}\n\nexport interface ISearchResult {\n  term: string;\n  col: number;\n  row: number;\n  size: number;\n}\n\ntype LineCacheEntry = [\n  /**\n   * The string representation of a line (as opposed to the buffer cell representation).\n   */\n  lineAsString: string,\n  /**\n   * The offsets where each line starts when the entry describes a wrapped line.\n   */\n  lineOffsets: number[]\n];\n\nconst NON_WORD_CHARACTERS = ' ~!@#$%^&*()+`-=[]{}|\\\\;:\"\\',./<>?';\nconst LINES_CACHE_TIME_TO_LIVE = 15 * 1000; // 15 secs\n\nexport class SearchAddon extends Disposable implements ITerminalAddon {\n  private _terminal: Terminal | undefined;\n  private _cachedSearchTerm: string | undefined;\n  private _selectedDecoration: IDecoration | undefined;\n  private _resultDecorations: Map<number, IDecoration[]> | undefined;\n  private _searchResults: Map<string, ISearchResult> | undefined;\n  private _onDataDisposable: IDisposable | undefined;\n  private _onResizeDisposable: IDisposable | undefined;\n  private _lastSearchOptions: ISearchOptions | undefined;\n  private _highlightTimeout: number | undefined;\n  /**\n   * translateBufferLineToStringWithWrap is a fairly expensive call.\n   * We memoize the calls into an array that has a time based ttl.\n   * _linesCache is also invalidated when the terminal cursor moves.\n   */\n  private _linesCache: LineCacheEntry[] | undefined;\n  private _linesCacheTimeoutId = 0;\n  private _cursorMoveListener: IDisposable | undefined;\n  private _resizeListener: IDisposable | undefined;\n\n  private _resultIndex: number | undefined;\n\n  private readonly _onDidChangeResults = this.register(new EventEmitter<{ resultIndex: number, resultCount: number } | undefined>());\n  public readonly onDidChangeResults = this._onDidChangeResults.event;\n\n  public activate(terminal: Terminal): void {\n    this._terminal = terminal;\n    this._onDataDisposable = this.register(this._terminal.onWriteParsed(() => this._updateMatches()));\n    this._onResizeDisposable = this.register(this._terminal.onResize(() => this._updateMatches()));\n    this.register(toDisposable(() => {\n      this.clearDecorations();\n      this._onDataDisposable?.dispose();\n      this._onResizeDisposable?.dispose();\n    }));\n  }\n\n  private _updateMatches(): void {\n    if (this._highlightTimeout) {\n      window.clearTimeout(this._highlightTimeout);\n    }\n    if (this._cachedSearchTerm && this._lastSearchOptions?.decorations) {\n      this._highlightTimeout = setTimeout(() => {\n        this.findPrevious(this._cachedSearchTerm!, { ...this._lastSearchOptions, incremental: true, noScroll: true });\n        this._resultIndex = this._searchResults ? this._searchResults.size - 1 : -1;\n        this._onDidChangeResults.fire({ resultIndex: this._resultIndex, resultCount: this._searchResults?.size ?? -1 });\n      }, 200);\n    }\n  }\n\n  public clearDecorations(retainCachedSearchTerm?: boolean): void {\n    this._selectedDecoration?.dispose();\n    this._searchResults?.clear();\n    this._resultDecorations?.forEach(decorations => {\n      for (const d of decorations) {\n        d.dispose();\n      }\n    });\n    this._resultDecorations?.clear();\n    this._searchResults = undefined;\n    this._resultDecorations = undefined;\n    if (!retainCachedSearchTerm) {\n      this._cachedSearchTerm = undefined;\n    }\n  }\n\n  public clearActiveDecoration(): void {\n    this._selectedDecoration?.dispose();\n    this._selectedDecoration = undefined;\n  }\n\n  /**\n   * Find the next instance of the term, then scroll to and select it. If it\n   * doesn't exist, do nothing.\n   * @param term The search term.\n   * @param searchOptions Search options.\n   * @returns Whether a result was found.\n   */\n  public findNext(term: string, searchOptions?: ISearchOptions): boolean {\n    if (!this._terminal) {\n      throw new Error('Cannot use addon until it has been loaded');\n    }\n    this._lastSearchOptions = searchOptions;\n    if (searchOptions?.decorations) {\n      if (this._resultIndex !== undefined || this._cachedSearchTerm === undefined || term !== this._cachedSearchTerm) {\n        this._highlightAllMatches(term, searchOptions);\n      }\n    }\n    return this._fireResults(term, this._findNextAndSelect(term, searchOptions), searchOptions);\n  }\n\n  private _highlightAllMatches(term: string, searchOptions: ISearchOptions): void {\n    if (!this._terminal) {\n      throw new Error('Cannot use addon until it has been loaded');\n    }\n    if (!term || term.length === 0) {\n      this.clearDecorations();\n      return;\n    }\n    searchOptions = searchOptions || {};\n\n    // new search, clear out the old decorations\n    this.clearDecorations(true);\n    this._searchResults = new Map<string, ISearchResult>();\n    this._resultDecorations = new Map<number, IDecoration[]>();\n    const resultDecorations = this._resultDecorations;\n    let result = this._find(term, 0, 0, searchOptions);\n    while (result && !this._searchResults.get(`${result.row}-${result.col}`)) {\n      this._searchResults.set(`${result.row}-${result.col}`, result);\n      result = this._find(\n        term,\n        result.col + result.term.length >= this._terminal.cols ? result.row + 1 : result.row,\n        result.col + result.term.length >= this._terminal.cols ? 0 : result.col + 1,\n        searchOptions\n      );\n      if (this._searchResults.size > 1000) {\n        this.clearDecorations();\n        this._resultIndex = undefined;\n        return;\n      }\n    }\n    this._searchResults.forEach(result => {\n      const resultDecoration = this._createResultDecoration(result, searchOptions.decorations!);\n      if (resultDecoration) {\n        const decorationsForLine = resultDecorations.get(resultDecoration.marker.line) || [];\n        decorationsForLine.push(resultDecoration);\n        resultDecorations.set(resultDecoration.marker.line, decorationsForLine);\n      }\n    });\n  }\n\n  private _find(term: string, startRow: number, startCol: number, searchOptions?: ISearchOptions): ISearchResult | undefined {\n    if (!this._terminal || !term || term.length === 0) {\n      this._terminal?.clearSelection();\n      this.clearDecorations();\n      return undefined;\n    }\n    if (startCol > this._terminal.cols) {\n      throw new Error(`Invalid col: ${startCol} to search in terminal of ${this._terminal.cols} cols`);\n    }\n\n    let result: ISearchResult | undefined = undefined;\n\n    this._initLinesCache();\n\n    const searchPosition: ISearchPosition = {\n      startRow,\n      startCol\n    };\n\n    // Search startRow\n    result = this._findInLine(term, searchPosition, searchOptions);\n    // Search from startRow + 1 to end\n    if (!result) {\n\n      for (let y = startRow + 1; y < this._terminal.buffer.active.baseY + this._terminal.rows; y++) {\n        searchPosition.startRow = y;\n        searchPosition.startCol = 0;\n        // If the current line is wrapped line, increase index of column to ignore the previous scan\n        // Otherwise, reset beginning column index to zero with set new unwrapped line index\n        result = this._findInLine(term, searchPosition, searchOptions);\n        if (result) {\n          break;\n        }\n      }\n    }\n    return result;\n  }\n\n  private _findNextAndSelect(term: string, searchOptions?: ISearchOptions): boolean {\n    if (!this._terminal || !term || term.length === 0) {\n      this._terminal?.clearSelection();\n      this.clearDecorations();\n      this._cachedSearchTerm = undefined;\n      this._resultIndex = -1;\n      return false;\n    }\n\n    if (this._cachedSearchTerm !== term) {\n      this._resultIndex = undefined;\n      this._terminal.clearSelection();\n    }\n\n    let startCol = 0;\n    let startRow = 0;\n    let currentSelection: IBufferRange | undefined;\n    if (this._terminal.hasSelection()) {\n      const incremental = searchOptions ? searchOptions.incremental : false;\n      // Start from the selection end if there is a selection\n      // For incremental search, use existing row\n      currentSelection = this._terminal.getSelectionPosition()!;\n      startRow = incremental ? currentSelection.start.y : currentSelection.end.y;\n      startCol = incremental ? currentSelection.start.x : currentSelection.end.x;\n    }\n\n    this._initLinesCache();\n\n    const searchPosition: ISearchPosition = {\n      startRow,\n      startCol\n    };\n\n    // Search startRow\n    let result = this._findInLine(term, searchPosition, searchOptions);\n    // Search from startRow + 1 to end\n    if (!result) {\n\n      for (let y = startRow + 1; y < this._terminal.buffer.active.baseY + this._terminal.rows; y++) {\n        searchPosition.startRow = y;\n        searchPosition.startCol = 0;\n        // If the current line is wrapped line, increase index of column to ignore the previous scan\n        // Otherwise, reset beginning column index to zero with set new unwrapped line index\n        result = this._findInLine(term, searchPosition, searchOptions);\n        if (result) {\n          break;\n        }\n      }\n    }\n    // If we hit the bottom and didn't search from the very top wrap back up\n    if (!result && startRow !== 0) {\n      for (let y = 0; y < startRow; y++) {\n        searchPosition.startRow = y;\n        searchPosition.startCol = 0;\n        result = this._findInLine(term, searchPosition, searchOptions);\n        if (result) {\n          break;\n        }\n      }\n    }\n\n    // If there is only one result, wrap back and return selection if it exists.\n    if (!result && currentSelection) {\n      searchPosition.startRow = currentSelection.start.y;\n      searchPosition.startCol = 0;\n      result = this._findInLine(term, searchPosition, searchOptions);\n    }\n\n    if (this._searchResults) {\n      if (this._searchResults.size === 0) {\n        this._resultIndex = -1;\n      } else if (this._resultIndex === undefined) {\n        this._resultIndex = 0;\n      } else {\n        this._resultIndex++;\n        if (this._resultIndex >= this._searchResults.size) {\n          this._resultIndex = 0;\n        }\n      }\n    }\n    // Set selection and scroll if a result was found\n    return this._selectResult(result, searchOptions?.decorations, searchOptions?.noScroll);\n  }\n  /**\n   * Find the previous instance of the term, then scroll to and select it. If it\n   * doesn't exist, do nothing.\n   * @param term The search term.\n   * @param searchOptions Search options.\n   * @returns Whether a result was found.\n   */\n  public findPrevious(term: string, searchOptions?: ISearchOptions): boolean {\n    if (!this._terminal) {\n      throw new Error('Cannot use addon until it has been loaded');\n    }\n    this._lastSearchOptions = searchOptions;\n    if (searchOptions?.decorations) {\n      if (this._resultIndex !== undefined || this._cachedSearchTerm === undefined || term !== this._cachedSearchTerm) {\n        this._highlightAllMatches(term, searchOptions);\n      }\n    }\n    return this._fireResults(term, this._findPreviousAndSelect(term, searchOptions), searchOptions);\n  }\n\n  private _fireResults(term: string, found: boolean, searchOptions?: ISearchOptions): boolean {\n    if (searchOptions?.decorations) {\n      if (this._resultIndex !== undefined && this._searchResults?.size !== undefined) {\n        this._onDidChangeResults.fire({ resultIndex: this._resultIndex, resultCount: this._searchResults.size });\n      } else {\n        this._onDidChangeResults.fire(undefined);\n      }\n    }\n    this._cachedSearchTerm = term;\n    return found;\n  }\n\n  private _findPreviousAndSelect(term: string, searchOptions?: ISearchOptions): boolean {\n    if (!this._terminal) {\n      throw new Error('Cannot use addon until it has been loaded');\n    }\n    let result: ISearchResult | undefined;\n    if (!this._terminal || !term || term.length === 0) {\n      result = undefined;\n      this._terminal?.clearSelection();\n      this.clearDecorations();\n      this._resultIndex = -1;\n      return false;\n    }\n\n    if (this._cachedSearchTerm !== term) {\n      this._resultIndex = undefined;\n      this._terminal.clearSelection();\n    }\n\n    let startRow = this._terminal.buffer.active.baseY + this._terminal.rows;\n    let startCol = this._terminal.cols;\n    const isReverseSearch = true;\n\n    const incremental = searchOptions ? searchOptions.incremental : false;\n    let currentSelection: IBufferRange | undefined;\n    if (this._terminal.hasSelection()) {\n      currentSelection = this._terminal.getSelectionPosition()!;\n      // Start from selection start if there is a selection\n      startRow = currentSelection.start.y;\n      startCol = currentSelection.start.x;\n    }\n\n    this._initLinesCache();\n    const searchPosition: ISearchPosition = {\n      startRow,\n      startCol\n    };\n\n    if (incremental) {\n      // Try to expand selection to right first.\n      result = this._findInLine(term, searchPosition, searchOptions, false);\n      const isOldResultHighlighted = result && result.row === startRow && result.col === startCol;\n      if (!isOldResultHighlighted) {\n        // If selection was not able to be expanded to the right, then try reverse search\n        if (currentSelection) {\n          searchPosition.startRow = currentSelection.end.y;\n          searchPosition.startCol = currentSelection.end.x;\n        }\n        result = this._findInLine(term, searchPosition, searchOptions, true);\n      }\n    } else {\n      result = this._findInLine(term, searchPosition, searchOptions, isReverseSearch);\n    }\n\n    // Search from startRow - 1 to top\n    if (!result) {\n      searchPosition.startCol = Math.max(searchPosition.startCol, this._terminal.cols);\n      for (let y = startRow - 1; y >= 0; y--) {\n        searchPosition.startRow = y;\n        result = this._findInLine(term, searchPosition, searchOptions, isReverseSearch);\n        if (result) {\n          break;\n        }\n      }\n    }\n    // If we hit the top and didn't search from the very bottom wrap back down\n    if (!result && startRow !== (this._terminal.buffer.active.baseY + this._terminal.rows)) {\n      for (let y = (this._terminal.buffer.active.baseY + this._terminal.rows); y >= startRow; y--) {\n        searchPosition.startRow = y;\n        result = this._findInLine(term, searchPosition, searchOptions, isReverseSearch);\n        if (result) {\n          break;\n        }\n      }\n    }\n\n    if (this._searchResults) {\n      if (this._searchResults.size === 0) {\n        this._resultIndex = -1;\n      } else if (this._resultIndex === undefined || this._resultIndex < 0) {\n        this._resultIndex = this._searchResults.size - 1;\n      } else {\n        this._resultIndex--;\n        if (this._resultIndex === -1) {\n          this._resultIndex = this._searchResults.size - 1;\n        }\n      }\n    }\n\n    // If there is only one result, return true.\n    if (!result && currentSelection) return true;\n\n    // Set selection and scroll if a result was found\n    return this._selectResult(result, searchOptions?.decorations, searchOptions?.noScroll);\n  }\n\n  /**\n   * Sets up a line cache with a ttl\n   */\n  private _initLinesCache(): void {\n    const terminal = this._terminal!;\n    if (!this._linesCache) {\n      this._linesCache = new Array(terminal.buffer.active.length);\n      this._cursorMoveListener = terminal.onCursorMove(() => this._destroyLinesCache());\n      this._resizeListener = terminal.onResize(() => this._destroyLinesCache());\n    }\n\n    window.clearTimeout(this._linesCacheTimeoutId);\n    this._linesCacheTimeoutId = window.setTimeout(() => this._destroyLinesCache(), LINES_CACHE_TIME_TO_LIVE);\n  }\n\n  private _destroyLinesCache(): void {\n    this._linesCache = undefined;\n    if (this._cursorMoveListener) {\n      this._cursorMoveListener.dispose();\n      this._cursorMoveListener = undefined;\n    }\n    if (this._resizeListener) {\n      this._resizeListener.dispose();\n      this._resizeListener = undefined;\n    }\n    if (this._linesCacheTimeoutId) {\n      window.clearTimeout(this._linesCacheTimeoutId);\n      this._linesCacheTimeoutId = 0;\n    }\n  }\n\n  /**\n   * A found substring is a whole word if it doesn't have an alphanumeric character directly adjacent to it.\n   * @param searchIndex starting indext of the potential whole word substring\n   * @param line entire string in which the potential whole word was found\n   * @param term the substring that starts at searchIndex\n   */\n  private _isWholeWord(searchIndex: number, line: string, term: string): boolean {\n    return ((searchIndex === 0) || (NON_WORD_CHARACTERS.includes(line[searchIndex - 1]))) &&\n      (((searchIndex + term.length) === line.length) || (NON_WORD_CHARACTERS.includes(line[searchIndex + term.length])));\n  }\n\n  /**\n   * Searches a line for a search term. Takes the provided terminal line and searches the text line, which may contain\n   * subsequent terminal lines if the text is wrapped. If the provided line number is part of a wrapped text line that\n   * started on an earlier line then it is skipped since it will be properly searched when the terminal line that the\n   * text starts on is searched.\n   * @param term The search term.\n   * @param searchPosition The position to start the search.\n   * @param searchOptions Search options.\n   * @param isReverseSearch Whether the search should start from the right side of the terminal and search to the left.\n   * @returns The search result if it was found.\n   */\n  protected _findInLine(term: string, searchPosition: ISearchPosition, searchOptions: ISearchOptions = {}, isReverseSearch: boolean = false): ISearchResult | undefined {\n    const terminal = this._terminal!;\n    const row = searchPosition.startRow;\n    const col = searchPosition.startCol;\n\n    // Ignore wrapped lines, only consider on unwrapped line (first row of command string).\n    const firstLine = terminal.buffer.active.getLine(row);\n    if (firstLine?.isWrapped) {\n      if (isReverseSearch) {\n        searchPosition.startCol += terminal.cols;\n        return;\n      }\n\n      // This will iterate until we find the line start.\n      // When we find it, we will search using the calculated start column.\n      searchPosition.startRow--;\n      searchPosition.startCol += terminal.cols;\n      return this._findInLine(term, searchPosition, searchOptions);\n    }\n    let cache = this._linesCache?.[row];\n    if (!cache) {\n      cache = this._translateBufferLineToStringWithWrap(row, true);\n      if (this._linesCache) {\n        this._linesCache[row] = cache;\n      }\n    }\n    const [stringLine, offsets] = cache;\n\n    const offset = this._bufferColsToStringOffset(row, col);\n    const searchTerm = searchOptions.caseSensitive ? term : term.toLowerCase();\n    const searchStringLine = searchOptions.caseSensitive ? stringLine : stringLine.toLowerCase();\n\n    let resultIndex = -1;\n    if (searchOptions.regex) {\n      const searchRegex = RegExp(searchTerm, 'g');\n      let foundTerm: RegExpExecArray | null;\n      if (isReverseSearch) {\n        // This loop will get the resultIndex of the _last_ regex match in the range 0..offset\n        while (foundTerm = searchRegex.exec(searchStringLine.slice(0, offset))) {\n          resultIndex = searchRegex.lastIndex - foundTerm[0].length;\n          term = foundTerm[0];\n          searchRegex.lastIndex -= (term.length - 1);\n        }\n      } else {\n        foundTerm = searchRegex.exec(searchStringLine.slice(offset));\n        if (foundTerm && foundTerm[0].length > 0) {\n          resultIndex = offset + (searchRegex.lastIndex - foundTerm[0].length);\n          term = foundTerm[0];\n        }\n      }\n    } else {\n      if (isReverseSearch) {\n        if (offset - searchTerm.length >= 0) {\n          resultIndex = searchStringLine.lastIndexOf(searchTerm, offset - searchTerm.length);\n        }\n      } else {\n        resultIndex = searchStringLine.indexOf(searchTerm, offset);\n      }\n    }\n\n    if (resultIndex >= 0) {\n      if (searchOptions.wholeWord && !this._isWholeWord(resultIndex, searchStringLine, term)) {\n        return;\n      }\n\n      // Adjust the row number and search index if needed since a \"line\" of text can span multiple rows\n      let startRowOffset = 0;\n      while (startRowOffset < offsets.length - 1 && resultIndex >= offsets[startRowOffset + 1]) {\n        startRowOffset++;\n      }\n      let endRowOffset = startRowOffset;\n      while (endRowOffset < offsets.length - 1 && resultIndex + term.length >= offsets[endRowOffset + 1]) {\n        endRowOffset++;\n      }\n      const startColOffset = resultIndex - offsets[startRowOffset];\n      const endColOffset = resultIndex + term.length - offsets[endRowOffset];\n      const startColIndex = this._stringLengthToBufferSize(row + startRowOffset, startColOffset);\n      const endColIndex = this._stringLengthToBufferSize(row + endRowOffset, endColOffset);\n      const size = endColIndex - startColIndex + terminal.cols * (endRowOffset - startRowOffset);\n\n      return {\n        term,\n        col: startColIndex,\n        row: row + startRowOffset,\n        size\n      };\n    }\n  }\n\n  private _stringLengthToBufferSize(row: number, offset: number): number {\n    const line = this._terminal!.buffer.active.getLine(row);\n    if (!line) {\n      return 0;\n    }\n    for (let i = 0; i < offset; i++) {\n      const cell = line.getCell(i);\n      if (!cell) {\n        break;\n      }\n      // Adjust the searchIndex to normalize emoji into single chars\n      const char = cell.getChars();\n      if (char.length > 1) {\n        offset -= char.length - 1;\n      }\n      // Adjust the searchIndex for empty characters following wide unicode\n      // chars (eg. CJK)\n      const nextCell = line.getCell(i + 1);\n      if (nextCell && nextCell.getWidth() === 0) {\n        offset++;\n      }\n    }\n    return offset;\n  }\n\n  private _bufferColsToStringOffset(startRow: number, cols: number): number {\n    const terminal = this._terminal!;\n    let lineIndex = startRow;\n    let offset = 0;\n    let line = terminal.buffer.active.getLine(lineIndex);\n    while (cols > 0 && line) {\n      for (let i = 0; i < cols && i < terminal.cols; i++) {\n        const cell = line.getCell(i);\n        if (!cell) {\n          break;\n        }\n        if (cell.getWidth()) {\n          // Treat null characters as whitespace to align with the translateToString API\n          offset += cell.getCode() === 0 ? 1 : cell.getChars().length;\n        }\n      }\n      lineIndex++;\n      line = terminal.buffer.active.getLine(lineIndex);\n      if (line && !line.isWrapped) {\n        break;\n      }\n      cols -= terminal.cols;\n    }\n    return offset;\n  }\n\n  /**\n   * Translates a buffer line to a string, including subsequent lines if they are wraps.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param lineIndex The index of the line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   */\n  private _translateBufferLineToStringWithWrap(lineIndex: number, trimRight: boolean): LineCacheEntry {\n    const terminal = this._terminal!;\n    const strings = [];\n    const lineOffsets = [0];\n    let line = terminal.buffer.active.getLine(lineIndex);\n    while (line) {\n      const nextLine = terminal.buffer.active.getLine(lineIndex + 1);\n      const lineWrapsToNext = nextLine ? nextLine.isWrapped : false;\n      let string = line.translateToString(!lineWrapsToNext && trimRight);\n      if (lineWrapsToNext && nextLine) {\n        const lastCell = line.getCell(line.length - 1);\n        const lastCellIsNull = lastCell && lastCell.getCode() === 0 && lastCell.getWidth() === 1;\n        // a wide character wrapped to the next line\n        if (lastCellIsNull && nextLine.getCell(0)?.getWidth() === 2) {\n          string = string.slice(0, -1);\n        }\n      }\n      strings.push(string);\n      if (lineWrapsToNext) {\n        lineOffsets.push(lineOffsets[lineOffsets.length - 1] + string.length);\n      } else {\n        break;\n      }\n      lineIndex++;\n      line = nextLine;\n    }\n    return [strings.join(''), lineOffsets];\n  }\n\n  /**\n   * Selects and scrolls to a result.\n   * @param result The result to select.\n   * @returns Whether a result was selected.\n   */\n  private _selectResult(result: ISearchResult | undefined, options?: ISearchDecorationOptions, noScroll?: boolean): boolean {\n    const terminal = this._terminal!;\n    this.clearActiveDecoration();\n    if (!result) {\n      terminal.clearSelection();\n      return false;\n    }\n    terminal.select(result.col, result.row, result.size);\n    if (options) {\n      const marker = terminal.registerMarker(-terminal.buffer.active.baseY - terminal.buffer.active.cursorY + result.row);\n      if (marker) {\n        this._selectedDecoration = terminal.registerDecoration({\n          marker,\n          x: result.col,\n          width: result.size,\n          backgroundColor: options.activeMatchBackground,\n          layer: 'top',\n          overviewRulerOptions: {\n            color: options.activeMatchColorOverviewRuler\n          }\n        });\n        this._selectedDecoration?.onRender((e) => this._applyStyles(e, options.activeMatchBorder, true));\n        this._selectedDecoration?.onDispose(() => marker.dispose());\n      }\n    }\n\n    if (!noScroll) {\n      // If it is not in the viewport then we scroll else it just gets selected\n      if (result.row >= (terminal.buffer.active.viewportY + terminal.rows) || result.row < terminal.buffer.active.viewportY) {\n        let scroll = result.row - terminal.buffer.active.viewportY;\n        scroll -= Math.floor(terminal.rows / 2);\n        terminal.scrollLines(scroll);\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Applies styles to the decoration when it is rendered.\n   * @param element The decoration's element.\n   * @param borderColor The border color to apply.\n   * @param isActiveResult Whether the element is part of the active search result.\n   * @returns\n   */\n  private _applyStyles(element: HTMLElement, borderColor: string | undefined, isActiveResult: boolean): void {\n    if (element.clientWidth <= 0) {\n      return;\n    }\n    if (!element.classList.contains('xterm-find-result-decoration')) {\n      element.classList.add('xterm-find-result-decoration');\n      if (borderColor) {\n        element.style.outline = `1px solid ${borderColor}`;\n      }\n    }\n    if (isActiveResult) {\n      element.classList.add('xterm-find-active-result-decoration');\n    }\n  }\n\n  /**\n   * Creates a decoration for the result and applies styles\n   * @param result the search result for which to create the decoration\n   * @param options the options for the decoration\n   * @returns the {@link IDecoration} or undefined if the marker has already been disposed of\n   */\n  private _createResultDecoration(result: ISearchResult, options: ISearchDecorationOptions): IDecoration | undefined {\n    const terminal = this._terminal!;\n    const marker = terminal.registerMarker(-terminal.buffer.active.baseY - terminal.buffer.active.cursorY + result.row);\n    if (!marker) {\n      return undefined;\n    }\n    const findResultDecoration = terminal.registerDecoration({\n      marker,\n      x: result.col,\n      width: result.size,\n      backgroundColor: options.matchBackground,\n      overviewRulerOptions: this._resultDecorations?.get(marker.line) ? undefined : {\n        color: options.matchOverviewRuler,\n        position: 'center'\n      }\n    });\n    findResultDecoration?.onRender((e) => this._applyStyles(e, options.matchBorder, false));\n    findResultDecoration?.onDispose(() => marker.dispose());\n    return findResultDecoration;\n  }\n}\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WebglAddon\"] = factory();\n\telse\n\t\troot[\"WebglAddon\"] = factory();\n})(self, function() {\nreturn ","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { createProgram, GLTexture, PROJECTION_MATRIX } from './WebglUtils';\nimport { IWebGL2RenderingContext, IWebGLVertexArrayObject, IRenderModel } from './Types';\nimport { NULL_CELL_CODE } from 'common/buffer/Constants';\nimport { Terminal } from 'xterm';\nimport { IRasterizedGlyph, IRenderDimensions, ITextureAtlas } from 'browser/renderer/shared/Types';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { throwIfFalsy } from 'browser/renderer/shared/RendererUtils';\nimport { TextureAtlas } from 'browser/renderer/shared/TextureAtlas';\n\ninterface IVertices {\n  attributes: Float32Array;\n  /**\n   * These buffers are the ones used to bind to WebGL, the reason there are\n   * multiple is to allow double buffering to work as you cannot modify the\n   * buffer while it's being used by the GPU. Having multiple lets us start\n   * working on the next frame.\n   */\n  attributesBuffers: Float32Array[];\n  count: number;\n}\n\nconst enum VertexAttribLocations {\n  UNIT_QUAD = 0,\n  CELL_POSITION = 1,\n  OFFSET = 2,\n  SIZE = 3,\n  TEXPAGE = 4,\n  TEXCOORD = 5,\n  TEXSIZE = 6\n}\n\nconst vertexShaderSource = `#version 300 es\nlayout (location = ${VertexAttribLocations.UNIT_QUAD}) in vec2 a_unitquad;\nlayout (location = ${VertexAttribLocations.CELL_POSITION}) in vec2 a_cellpos;\nlayout (location = ${VertexAttribLocations.OFFSET}) in vec2 a_offset;\nlayout (location = ${VertexAttribLocations.SIZE}) in vec2 a_size;\nlayout (location = ${VertexAttribLocations.TEXPAGE}) in float a_texpage;\nlayout (location = ${VertexAttribLocations.TEXCOORD}) in vec2 a_texcoord;\nlayout (location = ${VertexAttribLocations.TEXSIZE}) in vec2 a_texsize;\n\nuniform mat4 u_projection;\nuniform vec2 u_resolution;\n\nout vec2 v_texcoord;\nflat out int v_texpage;\n\nvoid main() {\n  vec2 zeroToOne = (a_offset / u_resolution) + a_cellpos + (a_unitquad * a_size);\n  gl_Position = u_projection * vec4(zeroToOne, 0.0, 1.0);\n  v_texpage = int(a_texpage);\n  v_texcoord = a_texcoord + a_unitquad * a_texsize;\n}`;\n\nfunction createFragmentShaderSource(maxFragmentShaderTextureUnits: number): string {\n  let textureConditionals = '';\n  for (let i = 1; i < maxFragmentShaderTextureUnits; i++) {\n    textureConditionals += ` else if (v_texpage == ${i}) { outColor = texture(u_texture[${i}], v_texcoord); }`;\n  }\n  return (`#version 300 es\nprecision lowp float;\n\nin vec2 v_texcoord;\nflat in int v_texpage;\n\nuniform sampler2D u_texture[${maxFragmentShaderTextureUnits}];\n\nout vec4 outColor;\n\nvoid main() {\n  if (v_texpage == 0) {\n    outColor = texture(u_texture[0], v_texcoord);\n  } ${textureConditionals}\n}`);\n}\n\nconst INDICES_PER_CELL = 11;\nconst BYTES_PER_CELL = INDICES_PER_CELL * Float32Array.BYTES_PER_ELEMENT;\nconst CELL_POSITION_INDICES = 2;\n\n// Work variables to avoid garbage collection\nlet $i = 0;\nlet $glyph: IRasterizedGlyph | undefined = undefined;\nlet $leftCellPadding = 0;\nlet $clippedPixels = 0;\n\nexport class GlyphRenderer extends Disposable {\n  private readonly _program: WebGLProgram;\n  private readonly _vertexArrayObject: IWebGLVertexArrayObject;\n  private readonly _projectionLocation: WebGLUniformLocation;\n  private readonly _resolutionLocation: WebGLUniformLocation;\n  private readonly _textureLocation: WebGLUniformLocation;\n  private readonly _atlasTextures: GLTexture[];\n  private readonly _attributesBuffer: WebGLBuffer;\n\n  private _atlas: ITextureAtlas | undefined;\n  private _activeBuffer: number = 0;\n  private readonly _vertices: IVertices = {\n    count: 0,\n    attributes: new Float32Array(0),\n    attributesBuffers: [\n      new Float32Array(0),\n      new Float32Array(0)\n    ]\n  };\n\n  constructor(\n    private readonly _terminal: Terminal,\n    private readonly _gl: IWebGL2RenderingContext,\n    private _dimensions: IRenderDimensions\n  ) {\n    super();\n\n    const gl = this._gl;\n\n    if (TextureAtlas.maxAtlasPages === undefined) {\n      // Typically 8 or 16\n      TextureAtlas.maxAtlasPages = Math.min(32, throwIfFalsy(gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS) as number | null));\n      // Almost all clients will support >= 4096\n      TextureAtlas.maxTextureSize = throwIfFalsy(gl.getParameter(gl.MAX_TEXTURE_SIZE) as number | null);\n    }\n\n    this._program = throwIfFalsy(createProgram(gl, vertexShaderSource, createFragmentShaderSource(TextureAtlas.maxAtlasPages)));\n    this.register(toDisposable(() => gl.deleteProgram(this._program)));\n\n    // Uniform locations\n    this._projectionLocation = throwIfFalsy(gl.getUniformLocation(this._program, 'u_projection'));\n    this._resolutionLocation = throwIfFalsy(gl.getUniformLocation(this._program, 'u_resolution'));\n    this._textureLocation = throwIfFalsy(gl.getUniformLocation(this._program, 'u_texture'));\n\n    // Create and set the vertex array object\n    this._vertexArrayObject = gl.createVertexArray();\n    gl.bindVertexArray(this._vertexArrayObject);\n\n    // Setup a_unitquad, this defines the 4 vertices of a rectangle\n    const unitQuadVertices = new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]);\n    const unitQuadVerticesBuffer = gl.createBuffer();\n    this.register(toDisposable(() => gl.deleteBuffer(unitQuadVerticesBuffer)));\n    gl.bindBuffer(gl.ARRAY_BUFFER, unitQuadVerticesBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, unitQuadVertices, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(VertexAttribLocations.UNIT_QUAD);\n    gl.vertexAttribPointer(VertexAttribLocations.UNIT_QUAD, 2, this._gl.FLOAT, false, 0, 0);\n\n    // Setup the unit quad element array buffer, this points to indices in\n    // unitQuadVertices to allow is to draw 2 triangles from the vertices via a\n    // triangle strip\n    const unitQuadElementIndices = new Uint8Array([0, 1, 2, 3]);\n    const elementIndicesBuffer = gl.createBuffer();\n    this.register(toDisposable(() => gl.deleteBuffer(elementIndicesBuffer)));\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementIndicesBuffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, unitQuadElementIndices, gl.STATIC_DRAW);\n\n    // Setup attributes\n    this._attributesBuffer = throwIfFalsy(gl.createBuffer());\n    this.register(toDisposable(() => gl.deleteBuffer(this._attributesBuffer)));\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._attributesBuffer);\n    gl.enableVertexAttribArray(VertexAttribLocations.OFFSET);\n    gl.vertexAttribPointer(VertexAttribLocations.OFFSET, 2, gl.FLOAT, false, BYTES_PER_CELL, 0);\n    gl.vertexAttribDivisor(VertexAttribLocations.OFFSET, 1);\n    gl.enableVertexAttribArray(VertexAttribLocations.SIZE);\n    gl.vertexAttribPointer(VertexAttribLocations.SIZE, 2, gl.FLOAT, false, BYTES_PER_CELL, 2 * Float32Array.BYTES_PER_ELEMENT);\n    gl.vertexAttribDivisor(VertexAttribLocations.SIZE, 1);\n    gl.enableVertexAttribArray(VertexAttribLocations.TEXPAGE);\n    gl.vertexAttribPointer(VertexAttribLocations.TEXPAGE, 1, gl.FLOAT, false, BYTES_PER_CELL, 4 * Float32Array.BYTES_PER_ELEMENT);\n    gl.vertexAttribDivisor(VertexAttribLocations.TEXPAGE, 1);\n    gl.enableVertexAttribArray(VertexAttribLocations.TEXCOORD);\n    gl.vertexAttribPointer(VertexAttribLocations.TEXCOORD, 2, gl.FLOAT, false, BYTES_PER_CELL, 5 * Float32Array.BYTES_PER_ELEMENT);\n    gl.vertexAttribDivisor(VertexAttribLocations.TEXCOORD, 1);\n    gl.enableVertexAttribArray(VertexAttribLocations.TEXSIZE);\n    gl.vertexAttribPointer(VertexAttribLocations.TEXSIZE, 2, gl.FLOAT, false, BYTES_PER_CELL, 7 * Float32Array.BYTES_PER_ELEMENT);\n    gl.vertexAttribDivisor(VertexAttribLocations.TEXSIZE, 1);\n    gl.enableVertexAttribArray(VertexAttribLocations.CELL_POSITION);\n    gl.vertexAttribPointer(VertexAttribLocations.CELL_POSITION, 2, gl.FLOAT, false, BYTES_PER_CELL, 9 * Float32Array.BYTES_PER_ELEMENT);\n    gl.vertexAttribDivisor(VertexAttribLocations.CELL_POSITION, 1);\n\n    // Setup static uniforms\n    gl.useProgram(this._program);\n    const textureUnits = new Int32Array(TextureAtlas.maxAtlasPages);\n    for (let i = 0; i < TextureAtlas.maxAtlasPages; i++) {\n      textureUnits[i] = i;\n    }\n    gl.uniform1iv(this._textureLocation, textureUnits);\n    gl.uniformMatrix4fv(this._projectionLocation, false, PROJECTION_MATRIX);\n\n    // Setup 1x1 red pixel textures for all potential atlas pages, if one of these invalid textures\n    // is ever drawn it will show characters as red rectangles.\n    this._atlasTextures = [];\n    for (let i = 0; i < TextureAtlas.maxAtlasPages; i++) {\n      const glTexture = new GLTexture(throwIfFalsy(gl.createTexture()));\n      this.register(toDisposable(() => gl.deleteTexture(glTexture.texture)));\n      gl.activeTexture(gl.TEXTURE0 + i);\n      gl.bindTexture(gl.TEXTURE_2D, glTexture.texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, new Uint8Array([255, 0, 0, 255]));\n      this._atlasTextures[i] = glTexture;\n    }\n\n    // Allow drawing of transparent texture\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n    // Set viewport\n    this.handleResize();\n  }\n\n  public beginFrame(): boolean {\n    return this._atlas ? this._atlas.beginFrame() : true;\n  }\n\n  public updateCell(x: number, y: number, code: number, bg: number, fg: number, ext: number, chars: string, lastBg: number): void {\n    // Since this function is called for every cell (`rows*cols`), it must be very optimized. It\n    // should not instantiate any variables unless a new glyph is drawn to the cache where the\n    // slight slowdown is acceptable for the developer ergonomics provided as it's a once of for\n    // each glyph.\n    this._updateCell(this._vertices.attributes, x, y, code, bg, fg, ext, chars, lastBg);\n  }\n\n  private _updateCell(array: Float32Array, x: number, y: number, code: number | undefined, bg: number, fg: number, ext: number, chars: string, lastBg: number): void {\n    $i = (y * this._terminal.cols + x) * INDICES_PER_CELL;\n\n    // Exit early if this is a null character, allow space character to continue as it may have\n    // underline/strikethrough styles\n    if (code === NULL_CELL_CODE || code === undefined/* This is used for the right side of wide chars */) {\n      array.fill(0, $i, $i + INDICES_PER_CELL - 1 - CELL_POSITION_INDICES);\n      return;\n    }\n\n    if (!this._atlas) {\n      return;\n    }\n\n    // Get the glyph\n    if (chars && chars.length > 1) {\n      $glyph = this._atlas.getRasterizedGlyphCombinedChar(chars, bg, fg, ext);\n    } else {\n      $glyph = this._atlas.getRasterizedGlyph(code, bg, fg, ext);\n    }\n\n    $leftCellPadding = Math.floor((this._dimensions.device.cell.width - this._dimensions.device.char.width) / 2);\n    if (bg !== lastBg && $glyph.offset.x > $leftCellPadding) {\n      $clippedPixels = $glyph.offset.x - $leftCellPadding;\n      // a_origin\n      array[$i    ] = -($glyph.offset.x - $clippedPixels) + this._dimensions.device.char.left;\n      array[$i + 1] = -$glyph.offset.y + this._dimensions.device.char.top;\n      // a_size\n      array[$i + 2] = ($glyph.size.x - $clippedPixels) / this._dimensions.device.canvas.width;\n      array[$i + 3] = $glyph.size.y / this._dimensions.device.canvas.height;\n      // a_texpage\n      array[$i + 4] = $glyph.texturePage;\n      // a_texcoord\n      array[$i + 5] = $glyph.texturePositionClipSpace.x + $clippedPixels / this._atlas.pages[$glyph.texturePage].canvas.width;\n      array[$i + 6] = $glyph.texturePositionClipSpace.y;\n      // a_texsize\n      array[$i + 7] = $glyph.sizeClipSpace.x - $clippedPixels / this._atlas.pages[$glyph.texturePage].canvas.width;\n      array[$i + 8] = $glyph.sizeClipSpace.y;\n    } else {\n      // a_origin\n      array[$i    ] = -$glyph.offset.x + this._dimensions.device.char.left;\n      array[$i + 1] = -$glyph.offset.y + this._dimensions.device.char.top;\n      // a_size\n      array[$i + 2] = $glyph.size.x / this._dimensions.device.canvas.width;\n      array[$i + 3] = $glyph.size.y / this._dimensions.device.canvas.height;\n      // a_texpage\n      array[$i + 4] = $glyph.texturePage;\n      // a_texcoord\n      array[$i + 5] = $glyph.texturePositionClipSpace.x;\n      array[$i + 6] = $glyph.texturePositionClipSpace.y;\n      // a_texsize\n      array[$i + 7] = $glyph.sizeClipSpace.x;\n      array[$i + 8] = $glyph.sizeClipSpace.y;\n    }\n    // a_cellpos only changes on resize\n  }\n\n  public clear(): void {\n    const terminal = this._terminal;\n    const newCount = terminal.cols * terminal.rows * INDICES_PER_CELL;\n\n    // Clear vertices\n    if (this._vertices.count !== newCount) {\n      this._vertices.attributes = new Float32Array(newCount);\n    } else {\n      this._vertices.attributes.fill(0);\n    }\n    let i = 0;\n    for (; i < this._vertices.attributesBuffers.length; i++) {\n      if (this._vertices.count !== newCount) {\n        this._vertices.attributesBuffers[i] = new Float32Array(newCount);\n      } else {\n        this._vertices.attributesBuffers[i].fill(0);\n      }\n    }\n    this._vertices.count = newCount;\n    i = 0;\n    for (let y = 0; y < terminal.rows; y++) {\n      for (let x = 0; x < terminal.cols; x++) {\n        this._vertices.attributes[i + 9] = x / terminal.cols;\n        this._vertices.attributes[i + 10] = y / terminal.rows;\n        i += INDICES_PER_CELL;\n      }\n    }\n  }\n\n  public handleResize(): void {\n    const gl = this._gl;\n    gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n    gl.uniform2f(this._resolutionLocation, gl.canvas.width, gl.canvas.height);\n    this.clear();\n  }\n\n  public render(renderModel: IRenderModel): void {\n    if (!this._atlas) {\n      return;\n    }\n\n    const gl = this._gl;\n\n    gl.useProgram(this._program);\n    gl.bindVertexArray(this._vertexArrayObject);\n\n    // Alternate buffers each frame as the active buffer gets locked while it's in use by the GPU\n    this._activeBuffer = (this._activeBuffer + 1) % 2;\n    const activeBuffer = this._vertices.attributesBuffers[this._activeBuffer];\n\n    // Copy data for each cell of each line up to its line length (the last non-whitespace cell)\n    // from the attributes buffer into activeBuffer, which is the one that gets bound to the GPU.\n    // The reasons for this are as follows:\n    // - So the active buffer can be alternated so we don't get blocked on rendering finishing\n    // - To copy either the normal attributes buffer or the selection attributes buffer when there\n    //   is a selection\n    // - So we don't send vertices for all the line-ending whitespace to the GPU\n    let bufferLength = 0;\n    for (let y = 0; y < renderModel.lineLengths.length; y++) {\n      const si = y * this._terminal.cols * INDICES_PER_CELL;\n      const sub = this._vertices.attributes.subarray(si, si + renderModel.lineLengths[y] * INDICES_PER_CELL);\n      activeBuffer.set(sub, bufferLength);\n      bufferLength += sub.length;\n    }\n\n    // Bind the attributes buffer\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._attributesBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, activeBuffer.subarray(0, bufferLength), gl.STREAM_DRAW);\n\n    // Bind the atlas page texture if they have changed\n    for (let i = 0; i < this._atlas.pages.length; i++) {\n      if (this._atlas.pages[i].version !== this._atlasTextures[i].version) {\n        this._bindAtlasPageTexture(gl, this._atlas, i);\n      }\n    }\n\n    // Draw the viewport\n    gl.drawElementsInstanced(gl.TRIANGLE_STRIP, 4, gl.UNSIGNED_BYTE, 0, bufferLength / INDICES_PER_CELL);\n  }\n\n  public setAtlas(atlas: ITextureAtlas): void {\n    this._atlas = atlas;\n    for (const glTexture of this._atlasTextures) {\n      glTexture.version = -1;\n    }\n  }\n\n  private _bindAtlasPageTexture(gl: IWebGL2RenderingContext, atlas: ITextureAtlas, i: number): void {\n    gl.activeTexture(gl.TEXTURE0 + i);\n    gl.bindTexture(gl.TEXTURE_2D, this._atlasTextures[i].texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, atlas.pages[i].canvas);\n    gl.generateMipmap(gl.TEXTURE_2D);\n    this._atlasTextures[i].version = atlas.pages[i].version;\n  }\n\n  public setDimensions(dimensions: IRenderDimensions): void {\n    this._dimensions = dimensions;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { createProgram, expandFloat32Array, PROJECTION_MATRIX } from './WebglUtils';\nimport { IRenderModel, IWebGLVertexArrayObject, IWebGL2RenderingContext } from './Types';\nimport { Attributes, BgFlags, FgFlags } from 'common/buffer/Constants';\nimport { Terminal } from 'xterm';\nimport { IColor } from 'common/Types';\nimport { IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { IRenderDimensions } from 'browser/renderer/shared/Types';\nimport { RENDER_MODEL_BG_OFFSET, RENDER_MODEL_FG_OFFSET, RENDER_MODEL_INDICIES_PER_CELL } from './RenderModel';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { DIM_OPACITY } from 'browser/renderer/shared/Constants';\nimport { throwIfFalsy } from 'browser/renderer/shared/RendererUtils';\nimport { IThemeService } from 'browser/services/Services';\n\nconst enum VertexAttribLocations {\n  POSITION = 0,\n  SIZE = 1,\n  COLOR = 2,\n  UNIT_QUAD = 3\n}\n\nconst vertexShaderSource = `#version 300 es\nlayout (location = ${VertexAttribLocations.POSITION}) in vec2 a_position;\nlayout (location = ${VertexAttribLocations.SIZE}) in vec2 a_size;\nlayout (location = ${VertexAttribLocations.COLOR}) in vec4 a_color;\nlayout (location = ${VertexAttribLocations.UNIT_QUAD}) in vec2 a_unitquad;\n\nuniform mat4 u_projection;\n\nout vec4 v_color;\n\nvoid main() {\n  vec2 zeroToOne = a_position + (a_unitquad * a_size);\n  gl_Position = u_projection * vec4(zeroToOne, 0.0, 1.0);\n  v_color = a_color;\n}`;\n\nconst fragmentShaderSource = `#version 300 es\nprecision lowp float;\n\nin vec4 v_color;\n\nout vec4 outColor;\n\nvoid main() {\n  outColor = v_color;\n}`;\n\ninterface IVertices {\n  attributes: Float32Array;\n  count: number;\n}\n\nconst INDICES_PER_RECTANGLE = 8;\nconst BYTES_PER_RECTANGLE = INDICES_PER_RECTANGLE * Float32Array.BYTES_PER_ELEMENT;\n\nconst INITIAL_BUFFER_RECTANGLE_CAPACITY = 20 * INDICES_PER_RECTANGLE;\n\n// Work variables to avoid garbage collection\nlet $rgba = 0;\nlet $isDefault = false;\nlet $x1 = 0;\nlet $y1 = 0;\nlet $r = 0;\nlet $g = 0;\nlet $b = 0;\nlet $a = 0;\n\nexport class RectangleRenderer extends Disposable {\n\n  private _program: WebGLProgram;\n  private _vertexArrayObject: IWebGLVertexArrayObject;\n  private _attributesBuffer: WebGLBuffer;\n  private _projectionLocation: WebGLUniformLocation;\n  private _bgFloat!: Float32Array;\n\n  private _vertices: IVertices = {\n    count: 0,\n    attributes: new Float32Array(INITIAL_BUFFER_RECTANGLE_CAPACITY)\n  };\n\n  constructor(\n    private _terminal: Terminal,\n    private _gl: IWebGL2RenderingContext,\n    private _dimensions: IRenderDimensions,\n    private readonly _themeService: IThemeService\n  ) {\n    super();\n\n    const gl = this._gl;\n\n    this._program = throwIfFalsy(createProgram(gl, vertexShaderSource, fragmentShaderSource));\n    this.register(toDisposable(() => gl.deleteProgram(this._program)));\n\n    // Uniform locations\n    this._projectionLocation = throwIfFalsy(gl.getUniformLocation(this._program, 'u_projection'));\n\n    // Create and set the vertex array object\n    this._vertexArrayObject = gl.createVertexArray();\n    gl.bindVertexArray(this._vertexArrayObject);\n\n    // Setup a_unitquad, this defines the 4 vertices of a rectangle\n    const unitQuadVertices = new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]);\n    const unitQuadVerticesBuffer = gl.createBuffer();\n    this.register(toDisposable(() => gl.deleteBuffer(unitQuadVerticesBuffer)));\n    gl.bindBuffer(gl.ARRAY_BUFFER, unitQuadVerticesBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, unitQuadVertices, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(VertexAttribLocations.UNIT_QUAD);\n    gl.vertexAttribPointer(VertexAttribLocations.UNIT_QUAD, 2, this._gl.FLOAT, false, 0, 0);\n\n    // Setup the unit quad element array buffer, this points to indices in\n    // unitQuadVertices to allow is to draw 2 triangles from the vertices via a\n    // triangle strip\n    const unitQuadElementIndices = new Uint8Array([0, 1, 2, 3]);\n    const elementIndicesBuffer = gl.createBuffer();\n    this.register(toDisposable(() => gl.deleteBuffer(elementIndicesBuffer)));\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementIndicesBuffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, unitQuadElementIndices, gl.STATIC_DRAW);\n\n    // Setup attributes\n    this._attributesBuffer = throwIfFalsy(gl.createBuffer());\n    this.register(toDisposable(() => gl.deleteBuffer(this._attributesBuffer)));\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._attributesBuffer);\n    gl.enableVertexAttribArray(VertexAttribLocations.POSITION);\n    gl.vertexAttribPointer(VertexAttribLocations.POSITION, 2, gl.FLOAT, false, BYTES_PER_RECTANGLE, 0);\n    gl.vertexAttribDivisor(VertexAttribLocations.POSITION, 1);\n    gl.enableVertexAttribArray(VertexAttribLocations.SIZE);\n    gl.vertexAttribPointer(VertexAttribLocations.SIZE, 2, gl.FLOAT, false, BYTES_PER_RECTANGLE, 2 * Float32Array.BYTES_PER_ELEMENT);\n    gl.vertexAttribDivisor(VertexAttribLocations.SIZE, 1);\n    gl.enableVertexAttribArray(VertexAttribLocations.COLOR);\n    gl.vertexAttribPointer(VertexAttribLocations.COLOR, 4, gl.FLOAT, false, BYTES_PER_RECTANGLE, 4 * Float32Array.BYTES_PER_ELEMENT);\n    gl.vertexAttribDivisor(VertexAttribLocations.COLOR, 1);\n\n    this._updateCachedColors(_themeService.colors);\n    this.register(this._themeService.onChangeColors(e => {\n      this._updateCachedColors(e);\n      this._updateViewportRectangle();\n    }));\n  }\n\n  public render(): void {\n    const gl = this._gl;\n\n    gl.useProgram(this._program);\n\n    gl.bindVertexArray(this._vertexArrayObject);\n\n    gl.uniformMatrix4fv(this._projectionLocation, false, PROJECTION_MATRIX);\n\n    // Bind attributes buffer and draw\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._attributesBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, this._vertices.attributes, gl.DYNAMIC_DRAW);\n    gl.drawElementsInstanced(this._gl.TRIANGLE_STRIP, 4, gl.UNSIGNED_BYTE, 0, this._vertices.count);\n  }\n\n  public handleResize(): void {\n    this._updateViewportRectangle();\n  }\n\n  public setDimensions(dimensions: IRenderDimensions): void {\n    this._dimensions = dimensions;\n  }\n\n  private _updateCachedColors(colors: ReadonlyColorSet): void {\n    this._bgFloat = this._colorToFloat32Array(colors.background);\n  }\n\n  private _updateViewportRectangle(): void {\n    // Set first rectangle that clears the screen\n    this._addRectangleFloat(\n      this._vertices.attributes,\n      0,\n      0,\n      0,\n      this._terminal.cols * this._dimensions.device.cell.width,\n      this._terminal.rows * this._dimensions.device.cell.height,\n      this._bgFloat\n    );\n  }\n\n  public updateBackgrounds(model: IRenderModel): void {\n    const terminal = this._terminal;\n    const vertices = this._vertices;\n\n    // Declare variable ahead of time to avoid garbage collection\n    let rectangleCount = 1;\n    let y: number;\n    let x: number;\n    let currentStartX: number;\n    let currentBg: number;\n    let currentFg: number;\n    let currentInverse: boolean;\n    let modelIndex: number;\n    let bg: number;\n    let fg: number;\n    let inverse: boolean;\n    let offset: number;\n\n    for (y = 0; y < terminal.rows; y++) {\n      currentStartX = -1;\n      currentBg = 0;\n      currentFg = 0;\n      currentInverse = false;\n      for (x = 0; x < terminal.cols; x++) {\n        modelIndex = ((y * terminal.cols) + x) * RENDER_MODEL_INDICIES_PER_CELL;\n        bg = model.cells[modelIndex + RENDER_MODEL_BG_OFFSET];\n        fg = model.cells[modelIndex + RENDER_MODEL_FG_OFFSET];\n        inverse = !!(fg & FgFlags.INVERSE);\n        if (bg !== currentBg || (fg !== currentFg && (currentInverse || inverse))) {\n          // A rectangle needs to be drawn if going from non-default to another color\n          if (currentBg !== 0 || (currentInverse && currentFg !== 0)) {\n            offset = rectangleCount++ * INDICES_PER_RECTANGLE;\n            this._updateRectangle(vertices, offset, currentFg, currentBg, currentStartX, x, y);\n          }\n          currentStartX = x;\n          currentBg = bg;\n          currentFg = fg;\n          currentInverse = inverse;\n        }\n      }\n      // Finish rectangle if it's still going\n      if (currentBg !== 0 || (currentInverse && currentFg !== 0)) {\n        offset = rectangleCount++ * INDICES_PER_RECTANGLE;\n        this._updateRectangle(vertices, offset, currentFg, currentBg, currentStartX, terminal.cols, y);\n      }\n    }\n    vertices.count = rectangleCount;\n  }\n\n  private _updateRectangle(vertices: IVertices, offset: number, fg: number, bg: number, startX: number, endX: number, y: number): void {\n    $isDefault = false;\n    if (fg & FgFlags.INVERSE) {\n      switch (fg & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          $rgba = this._themeService.colors.ansi[fg & Attributes.PCOLOR_MASK].rgba;\n          break;\n        case Attributes.CM_RGB:\n          $rgba = (fg & Attributes.RGB_MASK) << 8;\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          $rgba = this._themeService.colors.foreground.rgba;\n      }\n    } else {\n      switch (bg & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          $rgba = this._themeService.colors.ansi[bg & Attributes.PCOLOR_MASK].rgba;\n          break;\n        case Attributes.CM_RGB:\n          $rgba = (bg & Attributes.RGB_MASK) << 8;\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          $rgba = this._themeService.colors.background.rgba;\n          $isDefault = true;\n      }\n    }\n\n    if (vertices.attributes.length < offset + 4) {\n      vertices.attributes = expandFloat32Array(vertices.attributes, this._terminal.rows * this._terminal.cols * INDICES_PER_RECTANGLE);\n    }\n    $x1 = startX * this._dimensions.device.cell.width;\n    $y1 = y * this._dimensions.device.cell.height;\n    $r = (($rgba >> 24) & 0xFF) / 255;\n    $g = (($rgba >> 16) & 0xFF) / 255;\n    $b = (($rgba >> 8 ) & 0xFF) / 255;\n    $a = (!$isDefault && bg & BgFlags.DIM) ? DIM_OPACITY : 1;\n\n    this._addRectangle(vertices.attributes, offset, $x1, $y1, (endX - startX) * this._dimensions.device.cell.width, this._dimensions.device.cell.height, $r, $g, $b, $a);\n  }\n\n  private _addRectangle(array: Float32Array, offset: number, x1: number, y1: number, width: number, height: number, r: number, g: number, b: number, a: number): void {\n    array[offset    ] = x1 / this._dimensions.device.canvas.width;\n    array[offset + 1] = y1 / this._dimensions.device.canvas.height;\n    array[offset + 2] = width / this._dimensions.device.canvas.width;\n    array[offset + 3] = height / this._dimensions.device.canvas.height;\n    array[offset + 4] = r;\n    array[offset + 5] = g;\n    array[offset + 6] = b;\n    array[offset + 7] = a;\n  }\n\n  private _addRectangleFloat(array: Float32Array, offset: number, x1: number, y1: number, width: number, height: number, color: Float32Array): void {\n    array[offset    ] = x1 / this._dimensions.device.canvas.width;\n    array[offset + 1] = y1 / this._dimensions.device.canvas.height;\n    array[offset + 2] = width / this._dimensions.device.canvas.width;\n    array[offset + 3] = height / this._dimensions.device.canvas.height;\n    array[offset + 4] = color[0];\n    array[offset + 5] = color[1];\n    array[offset + 6] = color[2];\n    array[offset + 7] = color[3];\n  }\n\n  private _colorToFloat32Array(color: IColor): Float32Array {\n    return new Float32Array([\n      ((color.rgba >> 24) & 0xFF) / 255,\n      ((color.rgba >> 16) & 0xFF) / 255,\n      ((color.rgba >> 8 ) & 0xFF) / 255,\n      ((color.rgba      ) & 0xFF) / 255\n    ]);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderModel } from './Types';\nimport { ISelectionRenderModel } from 'browser/renderer/shared/Types';\nimport { createSelectionRenderModel } from 'browser/renderer/shared/SelectionRenderModel';\n\nexport const RENDER_MODEL_INDICIES_PER_CELL = 4;\nexport const RENDER_MODEL_BG_OFFSET = 1;\nexport const RENDER_MODEL_FG_OFFSET = 2;\nexport const RENDER_MODEL_EXT_OFFSET = 3;\n\nexport const COMBINED_CHAR_BIT_MASK = 0x80000000;\n\nexport class RenderModel implements IRenderModel {\n  public cells: Uint32Array;\n  public lineLengths: Uint32Array;\n  public selection: ISelectionRenderModel;\n\n  constructor() {\n    this.cells = new Uint32Array(0);\n    this.lineLengths = new Uint32Array(0);\n    this.selection = createSelectionRenderModel();\n  }\n\n  public resize(cols: number, rows: number): void {\n    const indexCount = cols * rows * RENDER_MODEL_INDICIES_PER_CELL;\n    if (indexCount !== this.cells.length) {\n      this.cells = new Uint32Array(indexCount);\n      this.lineLengths = new Uint32Array(rows);\n    }\n  }\n\n  public clear(): void {\n    this.cells.fill(0, 0);\n    this.lineLengths.fill(0, 0);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { CellColorResolver } from 'browser/renderer/shared/CellColorResolver';\nimport { acquireTextureAtlas, removeTerminalFromCache } from 'browser/renderer/shared/CharAtlasCache';\nimport { observeDevicePixelDimensions } from 'browser/renderer/shared/DevicePixelObserver';\nimport { createRenderDimensions, throwIfFalsy } from 'browser/renderer/shared/RendererUtils';\nimport { TextureAtlas } from 'browser/renderer/shared/TextureAtlas';\nimport { IRenderDimensions, IRenderer, IRequestRedrawEvent, ITextureAtlas } from 'browser/renderer/shared/Types';\nimport { ICharacterJoinerService, ICharSizeService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { ITerminal } from 'browser/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { CellData } from 'common/buffer/CellData';\nimport { Content, NULL_CELL_CHAR, NULL_CELL_CODE } from 'common/buffer/Constants';\nimport { EventEmitter, forwardEvent } from 'common/EventEmitter';\nimport { Disposable, getDisposeArrayDisposable, toDisposable } from 'common/Lifecycle';\nimport { ICoreService, IDecorationService, IOptionsService } from 'common/services/Services';\nimport { CharData, IBufferLine, ICellData } from 'common/Types';\nimport { IDisposable, Terminal } from 'xterm';\nimport { GlyphRenderer } from './GlyphRenderer';\nimport { RectangleRenderer } from './RectangleRenderer';\nimport { CursorRenderLayer } from './renderLayer/CursorRenderLayer';\nimport { LinkRenderLayer } from './renderLayer/LinkRenderLayer';\nimport { IRenderLayer } from './renderLayer/Types';\nimport { COMBINED_CHAR_BIT_MASK, RenderModel, RENDER_MODEL_BG_OFFSET, RENDER_MODEL_EXT_OFFSET, RENDER_MODEL_FG_OFFSET, RENDER_MODEL_INDICIES_PER_CELL } from './RenderModel';\nimport { IWebGL2RenderingContext } from './Types';\n\nexport class WebglRenderer extends Disposable implements IRenderer {\n  private _renderLayers: IRenderLayer[];\n  private _charAtlasDisposable: IDisposable | undefined;\n  private _charAtlas: ITextureAtlas | undefined;\n  private _devicePixelRatio: number;\n\n  private _model: RenderModel = new RenderModel();\n  private _workCell: CellData = new CellData();\n  private _cellColorResolver: CellColorResolver;\n\n  private _canvas: HTMLCanvasElement;\n  private _gl: IWebGL2RenderingContext;\n  private _rectangleRenderer: RectangleRenderer;\n  private _glyphRenderer: GlyphRenderer;\n\n  public readonly dimensions: IRenderDimensions;\n\n  private _core: ITerminal;\n  private _isAttached: boolean;\n  private _contextRestorationTimeout: number | undefined;\n\n  private readonly _onChangeTextureAtlas = this.register(new EventEmitter<HTMLCanvasElement>());\n  public readonly onChangeTextureAtlas = this._onChangeTextureAtlas.event;\n  private readonly _onAddTextureAtlasCanvas = this.register(new EventEmitter<HTMLCanvasElement>());\n  public readonly onAddTextureAtlasCanvas = this._onAddTextureAtlasCanvas.event;\n  private readonly _onRemoveTextureAtlasCanvas = this.register(new EventEmitter<HTMLCanvasElement>());\n  public readonly onRemoveTextureAtlasCanvas = this._onRemoveTextureAtlasCanvas.event;\n  private readonly _onRequestRedraw = this.register(new EventEmitter<IRequestRedrawEvent>());\n  public readonly onRequestRedraw = this._onRequestRedraw.event;\n  private readonly _onContextLoss = this.register(new EventEmitter<void>());\n  public readonly onContextLoss = this._onContextLoss.event;\n\n  constructor(\n    private _terminal: Terminal,\n    private readonly _characterJoinerService: ICharacterJoinerService,\n    private readonly _charSizeService: ICharSizeService,\n    private readonly _coreBrowserService: ICoreBrowserService,\n    coreService: ICoreService,\n    private readonly _decorationService: IDecorationService,\n    private readonly _optionsService: IOptionsService,\n    private readonly _themeService: IThemeService,\n    preserveDrawingBuffer?: boolean\n  ) {\n    super();\n\n    this.register(this._themeService.onChangeColors(() => this._handleColorChange()));\n\n    this._cellColorResolver = new CellColorResolver(this._terminal, this._model.selection, this._decorationService, this._coreBrowserService, this._themeService);\n\n    this._core = (this._terminal as any)._core;\n\n    this._renderLayers = [\n      new LinkRenderLayer(this._core.screenElement!, 2, this._terminal, this._core.linkifier2, this._coreBrowserService, _optionsService, this._themeService),\n      new CursorRenderLayer(_terminal, this._core.screenElement!, 3, this._onRequestRedraw, this._coreBrowserService, coreService, _optionsService, this._themeService)\n    ];\n    this.dimensions = createRenderDimensions();\n    this._devicePixelRatio = this._coreBrowserService.dpr;\n    this._updateDimensions();\n    this.register(_optionsService.onOptionChange(() => this._handleOptionsChanged()));\n\n    this._canvas = document.createElement('canvas');\n\n    const contextAttributes = {\n      antialias: false,\n      depth: false,\n      preserveDrawingBuffer\n    };\n    this._gl = this._canvas.getContext('webgl2', contextAttributes) as IWebGL2RenderingContext;\n    if (!this._gl) {\n      throw new Error('WebGL2 not supported ' + this._gl);\n    }\n\n    this.register(addDisposableDomListener(this._canvas, 'webglcontextlost', (e) => {\n      console.log('webglcontextlost event received');\n      // Prevent the default behavior in order to enable WebGL context restoration.\n      e.preventDefault();\n      // Wait a few seconds to see if the 'webglcontextrestored' event is fired.\n      // If not, dispatch the onContextLoss notification to observers.\n      this._contextRestorationTimeout = setTimeout(() => {\n        this._contextRestorationTimeout = undefined;\n        console.warn('webgl context not restored; firing onContextLoss');\n        this._onContextLoss.fire(e);\n      }, 3000 /* ms */);\n    }));\n    this.register(addDisposableDomListener(this._canvas, 'webglcontextrestored', (e) => {\n      console.warn('webglcontextrestored event received');\n      clearTimeout(this._contextRestorationTimeout);\n      this._contextRestorationTimeout = undefined;\n      // The texture atlas and glyph renderer must be fully reinitialized\n      // because their contents have been lost.\n      removeTerminalFromCache(this._terminal);\n      this._initializeWebGLState();\n      this._requestRedrawViewport();\n    }));\n\n    this.register(observeDevicePixelDimensions(this._canvas, this._coreBrowserService.window, (w, h) => this._setCanvasDevicePixelDimensions(w, h)));\n\n    this._core.screenElement!.appendChild(this._canvas);\n\n    [this._rectangleRenderer, this._glyphRenderer] = this._initializeWebGLState();\n\n    this._isAttached = this._coreBrowserService.window.document.body.contains(this._core.screenElement!);\n\n    this.register(toDisposable(() => {\n      for (const l of this._renderLayers) {\n        l.dispose();\n      }\n      this._canvas.parentElement?.removeChild(this._canvas);\n      removeTerminalFromCache(this._terminal);\n    }));\n  }\n\n  public get textureAtlas(): HTMLCanvasElement | undefined {\n    return this._charAtlas?.pages[0].canvas;\n  }\n\n  private _handleColorChange(): void {\n    this._refreshCharAtlas();\n\n    // Force a full refresh\n    this._clearModel(true);\n  }\n\n  public handleDevicePixelRatioChange(): void {\n    // If the device pixel ratio changed, the char atlas needs to be regenerated\n    // and the terminal needs to refreshed\n    if (this._devicePixelRatio !== this._coreBrowserService.dpr) {\n      this._devicePixelRatio = this._coreBrowserService.dpr;\n      this.handleResize(this._terminal.cols, this._terminal.rows);\n    }\n  }\n\n  public handleResize(cols: number, rows: number): void {\n    // Update character and canvas dimensions\n    this._updateDimensions();\n\n    this._model.resize(this._terminal.cols, this._terminal.rows);\n\n    // Resize all render layers\n    for (const l of this._renderLayers) {\n      l.resize(this._terminal, this.dimensions);\n    }\n\n    // Resize the canvas\n    this._canvas.width = this.dimensions.device.canvas.width;\n    this._canvas.height = this.dimensions.device.canvas.height;\n    this._canvas.style.width = `${this.dimensions.css.canvas.width}px`;\n    this._canvas.style.height = `${this.dimensions.css.canvas.height}px`;\n\n    // Resize the screen\n    this._core.screenElement!.style.width = `${this.dimensions.css.canvas.width}px`;\n    this._core.screenElement!.style.height = `${this.dimensions.css.canvas.height}px`;\n\n    this._rectangleRenderer.setDimensions(this.dimensions);\n    this._rectangleRenderer.handleResize();\n    this._glyphRenderer.setDimensions(this.dimensions);\n    this._glyphRenderer.handleResize();\n\n    this._refreshCharAtlas();\n\n    // Force a full refresh. Resizing `_glyphRenderer` should clear it already,\n    // so there is no need to clear it again here.\n    this._clearModel(false);\n  }\n\n  public handleCharSizeChanged(): void {\n    this.handleResize(this._terminal.cols, this._terminal.rows);\n  }\n\n  public handleBlur(): void {\n    for (const l of this._renderLayers) {\n      l.handleBlur(this._terminal);\n    }\n    // Request a redraw for active/inactive selection background\n    this._requestRedrawViewport();\n  }\n\n  public handleFocus(): void {\n    for (const l of this._renderLayers) {\n      l.handleFocus(this._terminal);\n    }\n    // Request a redraw for active/inactive selection background\n    this._requestRedrawViewport();\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    for (const l of this._renderLayers) {\n      l.handleSelectionChanged(this._terminal, start, end, columnSelectMode);\n    }\n    this._model.selection.update(this._terminal, start, end, columnSelectMode);\n    this._requestRedrawViewport();\n  }\n\n  public handleCursorMove(): void {\n    for (const l of this._renderLayers) {\n      l.handleCursorMove(this._terminal);\n    }\n  }\n\n  private _handleOptionsChanged(): void {\n    this._updateDimensions();\n    this._refreshCharAtlas();\n  }\n\n  /**\n   * Initializes members dependent on WebGL context state.\n   */\n  private _initializeWebGLState(): [RectangleRenderer, GlyphRenderer] {\n    // Dispose any previous rectangle and glyph renderers before creating new ones.\n    this._rectangleRenderer?.dispose();\n    this._glyphRenderer?.dispose();\n\n    this._rectangleRenderer = this.register(new RectangleRenderer(this._terminal, this._gl, this.dimensions, this._themeService));\n    this._glyphRenderer = this.register(new GlyphRenderer(this._terminal, this._gl, this.dimensions));\n\n    // Update dimensions and acquire char atlas\n    this.handleCharSizeChanged();\n\n    return [this._rectangleRenderer, this._glyphRenderer];\n  }\n\n  /**\n   * Refreshes the char atlas, aquiring a new one if necessary.\n   */\n  private _refreshCharAtlas(): void {\n    if (this.dimensions.device.char.width <= 0 && this.dimensions.device.char.height <= 0) {\n      // Mark as not attached so char atlas gets refreshed on next render\n      this._isAttached = false;\n      return;\n    }\n\n    const atlas = acquireTextureAtlas(\n      this._terminal,\n      this._optionsService.rawOptions,\n      this._themeService.colors,\n      this.dimensions.device.cell.width,\n      this.dimensions.device.cell.height,\n      this.dimensions.device.char.width,\n      this.dimensions.device.char.height,\n      this._coreBrowserService.dpr\n    );\n    if (this._charAtlas !== atlas) {\n      this._charAtlasDisposable?.dispose();\n      this._onChangeTextureAtlas.fire(atlas.pages[0].canvas);\n      this._charAtlasDisposable = getDisposeArrayDisposable([\n        forwardEvent(atlas.onAddTextureAtlasCanvas, this._onAddTextureAtlasCanvas),\n        forwardEvent(atlas.onRemoveTextureAtlasCanvas, this._onRemoveTextureAtlasCanvas)\n      ]);\n    }\n    this._charAtlas = atlas;\n    this._charAtlas.warmUp();\n    this._glyphRenderer.setAtlas(this._charAtlas);\n  }\n\n  /**\n   * Clear the model.\n   * @param clearGlyphRenderer Whether to also clear the glyph renderer. This\n   * should be true generally to make sure it is in the same state as the model.\n   */\n  private _clearModel(clearGlyphRenderer: boolean): void {\n    this._model.clear();\n    if (clearGlyphRenderer) {\n      this._glyphRenderer.clear();\n    }\n  }\n\n  public clearTextureAtlas(): void {\n    this._charAtlas?.clearTexture();\n    this._clearModel(true);\n    this._requestRedrawViewport();\n  }\n\n  public clear(): void {\n    this._clearModel(true);\n    for (const l of this._renderLayers) {\n      l.reset(this._terminal);\n    }\n  }\n\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    return -1;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): boolean {\n    return false;\n  }\n\n  public renderRows(start: number, end: number): void {\n    if (!this._isAttached) {\n      if (this._coreBrowserService.window.document.body.contains(this._core.screenElement!) && this._charSizeService.width && this._charSizeService.height) {\n        this._updateDimensions();\n        this._refreshCharAtlas();\n        this._isAttached = true;\n      } else {\n        return;\n      }\n    }\n\n    // Update render layers\n    for (const l of this._renderLayers) {\n      l.handleGridChanged(this._terminal, start, end);\n    }\n\n    // Tell renderer the frame is beginning\n    if (this._glyphRenderer.beginFrame()) {\n      this._clearModel(true);\n    }\n\n    // Update model to reflect what's drawn\n    this._updateModel(start, end);\n\n    // Render\n    this._rectangleRenderer.render();\n    this._glyphRenderer.render(this._model);\n  }\n\n  private _updateModel(start: number, end: number): void {\n    const terminal = this._core;\n    let cell: ICellData = this._workCell;\n\n    // Declare variable ahead of time to avoid garbage collection\n    let lastBg: number;\n    let y: number;\n    let row: number;\n    let line: IBufferLine | undefined;\n    let joinedRanges: [number, number][];\n    let isJoined: boolean;\n    let lastCharX: number;\n    let range: [number, number];\n    let chars: string;\n    let code: number;\n    let i: number;\n    let x: number;\n    let j: number;\n\n    for (y = start; y <= end; y++) {\n      row = y + terminal.buffer.ydisp;\n      line = terminal.buffer.lines.get(row);\n      if (!line) {\n        break;\n      }\n      this._model.lineLengths[y] = 0;\n      joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n      for (x = 0; x < terminal.cols; x++) {\n        lastBg = this._cellColorResolver.result.bg;\n        line.loadCell(x, cell);\n\n        if (x === 0) {\n          lastBg = this._cellColorResolver.result.bg;\n        }\n\n        // If true, indicates that the current character(s) to draw were joined.\n        isJoined = false;\n        lastCharX = x;\n\n        // Process any joined character ranges as needed. Because of how the\n        // ranges are produced, we know that they are valid for the characters\n        // and attributes of our input.\n        if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n          isJoined = true;\n          range = joinedRanges.shift()!;\n\n          // We already know the exact start and end column of the joined range,\n          // so we get the string and width representing it directly.\n          cell = new JoinedCellData(\n            cell,\n            line!.translateToString(true, range[0], range[1]),\n            range[1] - range[0]\n          );\n\n          // Skip over the cells occupied by this range in the loop\n          lastCharX = range[1] - 1;\n        }\n\n        chars = cell.getChars();\n        code = cell.getCode();\n        i = ((y * terminal.cols) + x) * RENDER_MODEL_INDICIES_PER_CELL;\n\n        // Load colors/resolve overrides into work colors\n        this._cellColorResolver.resolve(cell, x, row);\n\n        if (code !== NULL_CELL_CODE) {\n          this._model.lineLengths[y] = x + 1;\n        }\n\n        // Nothing has changed, no updates needed\n        if (this._model.cells[i] === code &&\n            this._model.cells[i + RENDER_MODEL_BG_OFFSET] === this._cellColorResolver.result.bg &&\n            this._model.cells[i + RENDER_MODEL_FG_OFFSET] === this._cellColorResolver.result.fg &&\n            this._model.cells[i + RENDER_MODEL_EXT_OFFSET] === this._cellColorResolver.result.ext) {\n          continue;\n        }\n\n        // Flag combined chars with a bit mask so they're easily identifiable\n        if (chars.length > 1) {\n          code |= COMBINED_CHAR_BIT_MASK;\n        }\n\n        // Cache the results in the model\n        this._model.cells[i] = code;\n        this._model.cells[i + RENDER_MODEL_BG_OFFSET] = this._cellColorResolver.result.bg;\n        this._model.cells[i + RENDER_MODEL_FG_OFFSET] = this._cellColorResolver.result.fg;\n        this._model.cells[i + RENDER_MODEL_EXT_OFFSET] = this._cellColorResolver.result.ext;\n\n        this._glyphRenderer.updateCell(x, y, code, this._cellColorResolver.result.bg, this._cellColorResolver.result.fg, this._cellColorResolver.result.ext, chars, lastBg);\n\n        if (isJoined) {\n          // Restore work cell\n          cell = this._workCell;\n\n          // Null out non-first cells\n          for (x++; x < lastCharX; x++) {\n            j = ((y * terminal.cols) + x) * RENDER_MODEL_INDICIES_PER_CELL;\n            this._glyphRenderer.updateCell(x, y, NULL_CELL_CODE, 0, 0, 0, NULL_CELL_CHAR, 0);\n            this._model.cells[j] = NULL_CELL_CODE;\n            this._model.cells[j + RENDER_MODEL_BG_OFFSET] = this._cellColorResolver.result.bg;\n            this._model.cells[j + RENDER_MODEL_FG_OFFSET] = this._cellColorResolver.result.fg;\n            this._model.cells[j + RENDER_MODEL_EXT_OFFSET] = this._cellColorResolver.result.ext;\n          }\n        }\n      }\n    }\n    this._rectangleRenderer.updateBackgrounds(this._model);\n  }\n\n  /**\n   * Recalculates the character and canvas dimensions.\n   */\n  private _updateDimensions(): void {\n    // Perform a new measure if the CharMeasure dimensions are not yet available\n    if (!this._charSizeService.width || !this._charSizeService.height) {\n      return;\n    }\n\n    // Calculate the device character width. Width is floored as it must be drawn to an integer grid\n    // in order for the char atlas glyphs to not be blurry.\n    this.dimensions.device.char.width = Math.floor(this._charSizeService.width * this._devicePixelRatio);\n\n    // Calculate the device character height. Height is ceiled in case devicePixelRatio is a\n    // floating point number in order to ensure there is enough space to draw the character to the\n    // cell.\n    this.dimensions.device.char.height = Math.ceil(this._charSizeService.height * this._devicePixelRatio);\n\n    // Calculate the device cell height, if lineHeight is _not_ 1, the resulting value will be\n    // floored since lineHeight can never be lower then 1, this guarentees the device cell height\n    // will always be larger than device char height.\n    this.dimensions.device.cell.height = Math.floor(this.dimensions.device.char.height * this._optionsService.rawOptions.lineHeight);\n\n    // Calculate the y offset within a cell that glyph should draw at in order for it to be centered\n    // correctly within the cell.\n    this.dimensions.device.char.top = this._optionsService.rawOptions.lineHeight === 1 ? 0 : Math.round((this.dimensions.device.cell.height - this.dimensions.device.char.height) / 2);\n\n    // Calculate the device cell width, taking the letterSpacing into account.\n    this.dimensions.device.cell.width = this.dimensions.device.char.width + Math.round(this._optionsService.rawOptions.letterSpacing);\n\n    // Calculate the x offset with a cell that text should draw from in order for it to be centered\n    // correctly within the cell.\n    this.dimensions.device.char.left = Math.floor(this._optionsService.rawOptions.letterSpacing / 2);\n\n    // Recalculate the canvas dimensions, the device dimensions define the actual number of pixel in\n    // the canvas\n    this.dimensions.device.canvas.height = this._terminal.rows * this.dimensions.device.cell.height;\n    this.dimensions.device.canvas.width = this._terminal.cols * this.dimensions.device.cell.width;\n\n    // The the size of the canvas on the page. It's important that this rounds to nearest integer\n    // and not ceils as browsers often have floating point precision issues where\n    // `window.devicePixelRatio` ends up being something like `1.100000023841858` for example, when\n    // it's actually 1.1. Ceiling may causes blurriness as the backing canvas image is 1 pixel too\n    // large for the canvas element size.\n    this.dimensions.css.canvas.height = Math.round(this.dimensions.device.canvas.height / this._devicePixelRatio);\n    this.dimensions.css.canvas.width = Math.round(this.dimensions.device.canvas.width / this._devicePixelRatio);\n\n    // Get the CSS dimensions of an individual cell. This needs to be derived from the calculated\n    // device pixel canvas value above. CharMeasure.width/height by itself is insufficient when the\n    // page is not at 100% zoom level as CharMeasure is measured in CSS pixels, but the actual char\n    // size on the canvas can differ.\n    this.dimensions.css.cell.height = this.dimensions.device.cell.height / this._devicePixelRatio;\n    this.dimensions.css.cell.width = this.dimensions.device.cell.width / this._devicePixelRatio;\n  }\n\n  private _setCanvasDevicePixelDimensions(width: number, height: number): void {\n    if (this._canvas.width === width && this._canvas.height === height) {\n      return;\n    }\n    // While the actual canvas size has changed, keep device canvas dimensions as the value before\n    // the change as it's an exact multiple of the cell sizes.\n    this._canvas.width = width;\n    this._canvas.height = height;\n    this._requestRedrawViewport();\n  }\n\n  private _requestRedrawViewport(): void {\n    this._onRequestRedraw.fire({ start: 0, end: this._terminal.rows - 1 });\n  }\n}\n\n// TODO: Share impl with core\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { throwIfFalsy } from 'browser/renderer/shared/RendererUtils';\n\n/**\n * A matrix that when multiplies will translate 0-1 coordinates (left to right,\n * top to bottom) to clip space.\n */\nexport const PROJECTION_MATRIX = new Float32Array([\n  2, 0, 0, 0,\n  0, -2, 0, 0,\n  0, 0, 1, 0,\n  -1, 1, 0, 1\n]);\n\nexport function createProgram(gl: WebGLRenderingContext, vertexSource: string, fragmentSource: string): WebGLProgram | undefined {\n  const program = throwIfFalsy(gl.createProgram());\n  gl.attachShader(program, throwIfFalsy(createShader(gl, gl.VERTEX_SHADER, vertexSource)));\n  gl.attachShader(program, throwIfFalsy(createShader(gl, gl.FRAGMENT_SHADER, fragmentSource)));\n  gl.linkProgram(program);\n  const success = gl.getProgramParameter(program, gl.LINK_STATUS);\n  if (success) {\n    return program;\n  }\n\n  console.error(gl.getProgramInfoLog(program));\n  gl.deleteProgram(program);\n}\n\nexport function createShader(gl: WebGLRenderingContext, type: number, source: string): WebGLShader | undefined {\n  const shader = throwIfFalsy(gl.createShader(type));\n  gl.shaderSource(shader, source);\n  gl.compileShader(shader);\n  const success = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n  if (success) {\n    return shader;\n  }\n\n  console.error(gl.getShaderInfoLog(shader));\n  gl.deleteShader(shader);\n}\n\nexport function expandFloat32Array(source: Float32Array, max: number): Float32Array {\n  const newLength = Math.min(source.length * 2, max);\n  const newArray = new Float32Array(newLength);\n  for (let i = 0; i < source.length; i++) {\n    newArray[i] = source[i];\n  }\n  return newArray;\n}\n\nexport class GLTexture {\n  public texture: WebGLTexture;\n  public version: number;\n\n  constructor(texture: WebGLTexture) {\n    this.texture = texture;\n    this.version = -1;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderLayer } from './Types';\nimport { acquireTextureAtlas } from 'browser/renderer/shared/CharAtlasCache';\nimport { Terminal } from 'xterm';\nimport { IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { TEXT_BASELINE } from 'browser/renderer/shared/Constants';\nimport { ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { IRenderDimensions, ITextureAtlas } from 'browser/renderer/shared/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { throwIfFalsy } from 'browser/renderer/shared/RendererUtils';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IOptionsService } from 'common/services/Services';\n\nexport abstract class BaseRenderLayer extends Disposable implements IRenderLayer {\n  private _canvas: HTMLCanvasElement;\n  protected _ctx!: CanvasRenderingContext2D;\n  private _deviceCharWidth: number = 0;\n  private _deviceCharHeight: number = 0;\n  private _deviceCellWidth: number = 0;\n  private _deviceCellHeight: number = 0;\n  private _deviceCharLeft: number = 0;\n  private _deviceCharTop: number = 0;\n\n  protected _charAtlas: ITextureAtlas | undefined;\n\n  constructor(\n    terminal: Terminal,\n    private _container: HTMLElement,\n    id: string,\n    zIndex: number,\n    private _alpha: boolean,\n    protected readonly _coreBrowserService: ICoreBrowserService,\n    protected readonly _optionsService: IOptionsService,\n    protected readonly _themeService: IThemeService\n  ) {\n    super();\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add(`xterm-${id}-layer`);\n    this._canvas.style.zIndex = zIndex.toString();\n    this._initCanvas();\n    this._container.appendChild(this._canvas);\n    this.register(this._themeService.onChangeColors(e => {\n      this._refreshCharAtlas(terminal, e);\n      this.reset(terminal);\n    }));\n    this.register(toDisposable(() => {\n      this._canvas.remove();\n      this._charAtlas?.dispose();\n    }));\n  }\n\n  private _initCanvas(): void {\n    this._ctx = throwIfFalsy(this._canvas.getContext('2d', { alpha: this._alpha }));\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n  }\n\n  public handleBlur(terminal: Terminal): void {}\n  public handleFocus(terminal: Terminal): void {}\n  public handleCursorMove(terminal: Terminal): void {}\n  public handleGridChanged(terminal: Terminal, startRow: number, endRow: number): void {}\n  public handleSelectionChanged(terminal: Terminal, start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean = false): void {}\n\n  protected _setTransparency(terminal: Terminal, alpha: boolean): void {\n    // Do nothing when alpha doesn't change\n    if (alpha === this._alpha) {\n      return;\n    }\n\n    // Create new canvas and replace old one\n    const oldCanvas = this._canvas;\n    this._alpha = alpha;\n    // Cloning preserves properties\n    this._canvas = this._canvas.cloneNode() as HTMLCanvasElement;\n    this._initCanvas();\n    this._container.replaceChild(this._canvas, oldCanvas);\n\n    // Regenerate char atlas and force a full redraw\n    this._refreshCharAtlas(terminal, this._themeService.colors);\n    this.handleGridChanged(terminal, 0, terminal.rows - 1);\n  }\n\n  /**\n   * Refreshes the char atlas, aquiring a new one if necessary.\n   * @param terminal The terminal.\n   * @param colorSet The color set to use for the char atlas.\n   */\n  private _refreshCharAtlas(terminal: Terminal, colorSet: ReadonlyColorSet): void {\n    if (this._deviceCharWidth <= 0 && this._deviceCharHeight <= 0) {\n      return;\n    }\n    this._charAtlas = acquireTextureAtlas(terminal, this._optionsService.rawOptions, colorSet, this._deviceCellWidth, this._deviceCellHeight, this._deviceCharWidth, this._deviceCharHeight, this._coreBrowserService.dpr);\n    this._charAtlas.warmUp();\n  }\n\n  public resize(terminal: Terminal, dim: IRenderDimensions): void {\n    this._deviceCellWidth = dim.device.cell.width;\n    this._deviceCellHeight = dim.device.cell.height;\n    this._deviceCharWidth = dim.device.char.width;\n    this._deviceCharHeight = dim.device.char.height;\n    this._deviceCharLeft = dim.device.char.left;\n    this._deviceCharTop = dim.device.char.top;\n    this._canvas.width = dim.device.canvas.width;\n    this._canvas.height = dim.device.canvas.height;\n    this._canvas.style.width = `${dim.css.canvas.width}px`;\n    this._canvas.style.height = `${dim.css.canvas.height}px`;\n\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n\n    this._refreshCharAtlas(terminal, this._themeService.colors);\n  }\n\n  public abstract reset(terminal: Terminal): void;\n\n  /**\n   * Fills 1+ cells completely. This uses the existing fillStyle on the context.\n   * @param x The column to start at.\n   * @param y The row to start at\n   * @param width The number of columns to fill.\n   * @param height The number of rows to fill.\n   */\n  protected _fillCells(x: number, y: number, width: number, height: number): void {\n    this._ctx.fillRect(\n      x * this._deviceCellWidth,\n      y * this._deviceCellHeight,\n      width * this._deviceCellWidth,\n      height * this._deviceCellHeight);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the bottom of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillBottomLineAtCells(x: number, y: number, width: number = 1): void {\n    this._ctx.fillRect(\n      x * this._deviceCellWidth,\n      (y + 1) * this._deviceCellHeight - this._coreBrowserService.dpr - 1 /* Ensure it's drawn within the cell */,\n      width * this._deviceCellWidth,\n      this._coreBrowserService.dpr);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the left of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillLeftLineAtCell(x: number, y: number, width: number): void {\n    this._ctx.fillRect(\n      x * this._deviceCellWidth,\n      y * this._deviceCellHeight,\n      this._coreBrowserService.dpr * width,\n      this._deviceCellHeight);\n  }\n\n  /**\n   * Strokes a 1px rectangle (2px on HDPI) around a cell. This uses the existing\n   * strokeStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _strokeRectAtCell(x: number, y: number, width: number, height: number): void {\n    this._ctx.lineWidth = this._coreBrowserService.dpr;\n    this._ctx.strokeRect(\n      x * this._deviceCellWidth + this._coreBrowserService.dpr / 2,\n      y * this._deviceCellHeight + (this._coreBrowserService.dpr / 2),\n      width * this._deviceCellWidth - this._coreBrowserService.dpr,\n      (height * this._deviceCellHeight) - this._coreBrowserService.dpr);\n  }\n\n  /**\n   * Clears the entire canvas.\n   */\n  protected _clearAll(): void {\n    if (this._alpha) {\n      this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    } else {\n      this._ctx.fillStyle = this._themeService.colors.background.css;\n      this._ctx.fillRect(0, 0, this._canvas.width, this._canvas.height);\n    }\n  }\n\n  /**\n   * Clears 1+ cells completely.\n   * @param x The column to start at.\n   * @param y The row to start at.\n   * @param width The number of columns to clear.\n   * @param height The number of rows to clear.\n   */\n  protected _clearCells(x: number, y: number, width: number, height: number): void {\n    if (this._alpha) {\n      this._ctx.clearRect(\n        x * this._deviceCellWidth,\n        y * this._deviceCellHeight,\n        width * this._deviceCellWidth,\n        height * this._deviceCellHeight);\n    } else {\n      this._ctx.fillStyle = this._themeService.colors.background.css;\n      this._ctx.fillRect(\n        x * this._deviceCellWidth,\n        y * this._deviceCellHeight,\n        width * this._deviceCellWidth,\n        height * this._deviceCellHeight);\n    }\n  }\n\n  /**\n   * Draws a truecolor character at the cell. The character will be clipped to\n   * ensure that it fits with the cell, including the cell to the right if it's\n   * a wide character. This uses the existing fillStyle on the context.\n   * @param terminal The terminal.\n   * @param cell The cell data for the character to draw.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   */\n  protected _fillCharTrueColor(terminal: Terminal, cell: CellData, x: number, y: number): void {\n    this._ctx.font = this._getFont(terminal, false, false);\n    this._ctx.textBaseline = TEXT_BASELINE;\n    this._clipCell(x, y, cell.getWidth());\n    this._ctx.fillText(\n      cell.getChars(),\n      x * this._deviceCellWidth + this._deviceCharLeft,\n      y * this._deviceCellHeight + this._deviceCharTop + this._deviceCharHeight);\n  }\n\n  /**\n   * Clips a cell to ensure no pixels will be drawn outside of it.\n   * @param x The column to clip.\n   * @param y The row to clip.\n   * @param width The number of columns to clip.\n   */\n  private _clipCell(x: number, y: number, width: number): void {\n    this._ctx.beginPath();\n    this._ctx.rect(\n      x * this._deviceCellWidth,\n      y * this._deviceCellHeight,\n      width * this._deviceCellWidth,\n      this._deviceCellHeight);\n    this._ctx.clip();\n  }\n\n  /**\n   * Gets the current font.\n   * @param terminal The terminal.\n   * @param isBold If we should use the bold fontWeight.\n   */\n  protected _getFont(terminal: Terminal, isBold: boolean, isItalic: boolean): string {\n    const fontWeight = isBold ? terminal.options.fontWeightBold : terminal.options.fontWeight;\n    const fontStyle = isItalic ? 'italic' : '';\n\n    return `${fontStyle} ${fontWeight} ${terminal.options.fontSize! * this._coreBrowserService.dpr}px ${terminal.options.fontFamily}`;\n  }\n}\n\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal } from 'xterm';\nimport { BaseRenderLayer } from './BaseRenderLayer';\nimport { ICellData } from 'common/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IRenderDimensions, IRequestRedrawEvent } from 'browser/renderer/shared/Types';\nimport { IEventEmitter } from 'common/EventEmitter';\nimport { ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { ICoreService, IOptionsService } from 'common/services/Services';\nimport { toDisposable } from 'common/Lifecycle';\n\ninterface ICursorState {\n  x: number;\n  y: number;\n  isFocused: boolean;\n  style: string;\n  width: number;\n}\n\n/**\n * The time between cursor blinks.\n */\nconst BLINK_INTERVAL = 600;\n\nexport class CursorRenderLayer extends BaseRenderLayer {\n  private _state: ICursorState;\n  private _cursorRenderers: {[key: string]: (terminal: Terminal, x: number, y: number, cell: ICellData) => void};\n  private _cursorBlinkStateManager: CursorBlinkStateManager | undefined;\n  private _cell: ICellData = new CellData();\n\n  constructor(\n    terminal: Terminal,\n    container: HTMLElement,\n    zIndex: number,\n    private _onRequestRefreshRowsEvent: IEventEmitter<IRequestRedrawEvent>,\n    coreBrowserService: ICoreBrowserService,\n    private readonly _coreService: ICoreService,\n    optionsService: IOptionsService,\n    themeService: IThemeService\n  ) {\n    super(terminal, container, 'cursor', zIndex, true, coreBrowserService, optionsService, themeService);\n    this._state = {\n      x: 0,\n      y: 0,\n      isFocused: false,\n      style: '',\n      width: 0\n    };\n    this._cursorRenderers = {\n      'bar': this._renderBarCursor.bind(this),\n      'block': this._renderBlockCursor.bind(this),\n      'underline': this._renderUnderlineCursor.bind(this)\n    };\n    this._handleOptionsChanged(terminal);\n    this.register(optionsService.onOptionChange(() => this._handleOptionsChanged(terminal)));\n    this.register(toDisposable(() => {\n      this._cursorBlinkStateManager?.dispose();\n      this._cursorBlinkStateManager = undefined;\n    }));\n  }\n\n  public resize(terminal: Terminal, dim: IRenderDimensions): void {\n    super.resize(terminal, dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = {\n      x: 0,\n      y: 0,\n      isFocused: false,\n      style: '',\n      width: 0\n    };\n  }\n\n  public reset(terminal: Terminal): void {\n    this._clearCursor();\n    this._cursorBlinkStateManager?.restartBlinkAnimation(terminal);\n    this._handleOptionsChanged(terminal);\n  }\n\n  public handleBlur(terminal: Terminal): void {\n    this._cursorBlinkStateManager?.pause();\n    this._onRequestRefreshRowsEvent.fire({ start: terminal.buffer.active.cursorY, end: terminal.buffer.active.cursorY });\n  }\n\n  public handleFocus(terminal: Terminal): void {\n    this._cursorBlinkStateManager?.resume(terminal);\n    this._onRequestRefreshRowsEvent.fire({ start: terminal.buffer.active.cursorY, end: terminal.buffer.active.cursorY });\n  }\n\n  private _handleOptionsChanged(terminal: Terminal): void {\n    if (terminal.options.cursorBlink) {\n      if (!this._cursorBlinkStateManager) {\n        this._cursorBlinkStateManager = new CursorBlinkStateManager(() => {\n          this._render(terminal, true);\n        }, this._coreBrowserService);\n      }\n    } else {\n      this._cursorBlinkStateManager?.dispose();\n      this._cursorBlinkStateManager = undefined;\n    }\n    // Request a refresh from the terminal as management of rendering is being\n    // moved back to the terminal\n    this._onRequestRefreshRowsEvent.fire({ start: terminal.buffer.active.cursorY, end: terminal.buffer.active.cursorY });\n  }\n\n  public handleCursorMove(terminal: Terminal): void {\n    this._cursorBlinkStateManager?.restartBlinkAnimation(terminal);\n  }\n\n  public handleGridChanged(terminal: Terminal, startRow: number, endRow: number): void {\n    if (!this._cursorBlinkStateManager || this._cursorBlinkStateManager.isPaused) {\n      this._render(terminal, false);\n    } else {\n      this._cursorBlinkStateManager.restartBlinkAnimation(terminal);\n    }\n  }\n\n  private _render(terminal: Terminal, triggeredByAnimationFrame: boolean): void {\n    // Don't draw the cursor if it's hidden\n    if (!this._coreService.isCursorInitialized || this._coreService.isCursorHidden) {\n      this._clearCursor();\n      return;\n    }\n\n    const cursorY = terminal.buffer.active.baseY + terminal.buffer.active.cursorY;\n    const viewportRelativeCursorY = cursorY - terminal.buffer.active.viewportY;\n\n    // in case cursor.x == cols adjust visual cursor to cols - 1\n    const cursorX = Math.min(terminal.buffer.active.cursorX, terminal.cols - 1);\n\n    // Don't draw the cursor if it's off-screen\n    if (viewportRelativeCursorY < 0 || viewportRelativeCursorY >= terminal.rows) {\n      this._clearCursor();\n      return;\n    }\n\n    // TODO: Need fast buffer API for loading cell\n    (terminal as any)._core.buffer.lines.get(cursorY).loadCell(cursorX, this._cell);\n    if (this._cell.content === undefined) {\n      return;\n    }\n\n    if (!this._coreBrowserService.isFocused) {\n      this._clearCursor();\n      this._ctx.save();\n      this._ctx.fillStyle = this._themeService.colors.cursor.css;\n      const cursorStyle = terminal.options.cursorStyle;\n      if (cursorStyle && cursorStyle !== 'block') {\n        this._cursorRenderers[cursorStyle](terminal, cursorX, viewportRelativeCursorY, this._cell);\n      } else {\n        this._renderBlurCursor(terminal, cursorX, viewportRelativeCursorY, this._cell);\n      }\n      this._ctx.restore();\n      this._state.x = cursorX;\n      this._state.y = viewportRelativeCursorY;\n      this._state.isFocused = false;\n      this._state.style = cursorStyle!;\n      this._state.width = this._cell.getWidth();\n      return;\n    }\n\n    // Don't draw the cursor if it's blinking\n    if (this._cursorBlinkStateManager && !this._cursorBlinkStateManager.isCursorVisible) {\n      this._clearCursor();\n      return;\n    }\n\n    if (this._state) {\n      // The cursor is already in the correct spot, don't redraw\n      if (this._state.x === cursorX &&\n          this._state.y === viewportRelativeCursorY &&\n          this._state.isFocused === this._coreBrowserService.isFocused &&\n          this._state.style === terminal.options.cursorStyle &&\n          this._state.width === this._cell.getWidth()) {\n        return;\n      }\n      this._clearCursor();\n    }\n\n    this._ctx.save();\n    this._cursorRenderers[terminal.options.cursorStyle || 'block'](terminal, cursorX, viewportRelativeCursorY, this._cell);\n    this._ctx.restore();\n\n    this._state.x = cursorX;\n    this._state.y = viewportRelativeCursorY;\n    this._state.isFocused = false;\n    this._state.style = terminal.options.cursorStyle!;\n    this._state.width = this._cell.getWidth();\n  }\n\n  private _clearCursor(): void {\n    if (this._state) {\n      // Avoid potential rounding errors when device pixel ratio is less than 1\n      if (this._coreBrowserService.dpr < 1) {\n        this._clearAll();\n      } else {\n        this._clearCells(this._state.x, this._state.y, this._state.width, 1);\n      }\n      this._state = {\n        x: 0,\n        y: 0,\n        isFocused: false,\n        style: '',\n        width: 0\n      };\n    }\n  }\n\n  private _renderBarCursor(terminal: Terminal, x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._themeService.colors.cursor.css;\n    this._fillLeftLineAtCell(x, y, this._optionsService.rawOptions.cursorWidth);\n    this._ctx.restore();\n  }\n\n  private _renderBlockCursor(terminal: Terminal, x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._themeService.colors.cursor.css;\n    this._fillCells(x, y, cell.getWidth(), 1);\n    this._ctx.fillStyle = this._themeService.colors.cursorAccent.css;\n    this._fillCharTrueColor(terminal, cell, x, y);\n    this._ctx.restore();\n  }\n\n  private _renderUnderlineCursor(terminal: Terminal, x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._themeService.colors.cursor.css;\n    this._fillBottomLineAtCells(x, y);\n    this._ctx.restore();\n  }\n\n  private _renderBlurCursor(terminal: Terminal, x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.strokeStyle = this._themeService.colors.cursor.css;\n    this._strokeRectAtCell(x, y, cell.getWidth(), 1);\n    this._ctx.restore();\n  }\n}\n\nclass CursorBlinkStateManager {\n  public isCursorVisible: boolean;\n\n  private _animationFrame: number | undefined;\n  private _blinkStartTimeout: number | undefined;\n  private _blinkInterval: number | undefined;\n\n  /**\n   * The time at which the animation frame was restarted, this is used on the\n   * next render to restart the timers so they don't need to restart the timers\n   * multiple times over a short period.\n   */\n  private _animationTimeRestarted: number | undefined;\n\n  constructor(\n    private _renderCallback: () => void,\n    private _coreBrowserService: ICoreBrowserService\n  ) {\n    this.isCursorVisible = true;\n    if (this._coreBrowserService.isFocused) {\n      this._restartInterval();\n    }\n  }\n\n  public get isPaused(): boolean { return !(this._blinkStartTimeout || this._blinkInterval); }\n\n  public dispose(): void {\n    if (this._blinkInterval) {\n      this._coreBrowserService.window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      this._coreBrowserService.window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      this._coreBrowserService.window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public restartBlinkAnimation(terminal: Terminal): void {\n    if (this.isPaused) {\n      return;\n    }\n    // Save a timestamp so that the restart can be done on the next interval\n    this._animationTimeRestarted = Date.now();\n    // Force a cursor render to ensure it's visible and in the correct position\n    this.isCursorVisible = true;\n    if (!this._animationFrame) {\n      this._animationFrame = this._coreBrowserService.window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n    }\n  }\n\n  private _restartInterval(timeToStart: number = BLINK_INTERVAL): void {\n    // Clear any existing interval\n    if (this._blinkInterval) {\n      this._coreBrowserService.window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n\n    // Setup the initial timeout which will hide the cursor, this is done before\n    // the regular interval is setup in order to support restarting the blink\n    // animation in a lightweight way (without thrashing clearInterval and\n    // setInterval).\n    this._blinkStartTimeout = this._coreBrowserService.window.setTimeout(() => {\n      // Check if another animation restart was requested while this was being\n      // started\n      if (this._animationTimeRestarted) {\n        const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n        this._animationTimeRestarted = undefined;\n        if (time > 0) {\n          this._restartInterval(time);\n          return;\n        }\n      }\n\n      // Hide the cursor\n      this.isCursorVisible = false;\n      this._animationFrame = this._coreBrowserService.window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n\n      // Setup the blink interval\n      this._blinkInterval = this._coreBrowserService.window.setInterval(() => {\n        // Adjust the animation time if it was restarted\n        if (this._animationTimeRestarted) {\n          // calc time diff\n          // Make restart interval do a setTimeout initially?\n          const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n          this._animationTimeRestarted = undefined;\n          this._restartInterval(time);\n          return;\n        }\n\n        // Invert visibility and render\n        this.isCursorVisible = !this.isCursorVisible;\n        this._animationFrame = this._coreBrowserService.window.requestAnimationFrame(() => {\n          this._renderCallback();\n          this._animationFrame = undefined;\n        });\n      }, BLINK_INTERVAL);\n    }, timeToStart);\n  }\n\n  public pause(): void {\n    this.isCursorVisible = true;\n    if (this._blinkInterval) {\n      this._coreBrowserService.window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      this._coreBrowserService.window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      this._coreBrowserService.window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public resume(terminal: Terminal): void {\n    // Clear out any existing timers just in case\n    this.pause();\n\n    this._animationTimeRestarted = undefined;\n    this._restartInterval();\n    this.restartBlinkAnimation(terminal);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { is256Color } from 'browser/renderer/shared/CharAtlasUtils';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/shared/Constants';\nimport { IRenderDimensions } from 'browser/renderer/shared/Types';\nimport { ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { ILinkifier2, ILinkifierEvent } from 'browser/Types';\nimport { IOptionsService } from 'common/services/Services';\nimport { Terminal } from 'xterm';\nimport { BaseRenderLayer } from './BaseRenderLayer';\n\nexport class LinkRenderLayer extends BaseRenderLayer {\n  private _state: ILinkifierEvent | undefined;\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    terminal: Terminal,\n    linkifier2: ILinkifier2,\n    coreBrowserService: ICoreBrowserService,\n    optionsService: IOptionsService,\n    themeService: IThemeService\n  ) {\n    super(terminal, container, 'link', zIndex, true, coreBrowserService, optionsService, themeService);\n\n    this.register(linkifier2.onShowLinkUnderline(e => this._handleShowLinkUnderline(e)));\n    this.register(linkifier2.onHideLinkUnderline(e => this._handleHideLinkUnderline(e)));\n  }\n\n  public resize(terminal: Terminal, dim: IRenderDimensions): void {\n    super.resize(terminal, dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = undefined;\n  }\n\n  public reset(terminal: Terminal): void {\n    this._clearCurrentLink();\n  }\n\n  private _clearCurrentLink(): void {\n    if (this._state) {\n      this._clearCells(this._state.x1, this._state.y1, this._state.cols - this._state.x1, 1);\n      const middleRowCount = this._state.y2 - this._state.y1 - 1;\n      if (middleRowCount > 0) {\n        this._clearCells(0, this._state.y1 + 1, this._state.cols, middleRowCount);\n      }\n      this._clearCells(0, this._state.y2, this._state.x2, 1);\n      this._state = undefined;\n    }\n  }\n\n  private _handleShowLinkUnderline(e: ILinkifierEvent): void {\n    if (e.fg === INVERTED_DEFAULT_COLOR) {\n      this._ctx.fillStyle = this._themeService.colors.background.css;\n    } else if (e.fg !== undefined && is256Color(e.fg)) {\n      // 256 color support\n      this._ctx.fillStyle = this._themeService.colors.ansi[e.fg!].css;\n    } else {\n      this._ctx.fillStyle = this._themeService.colors.foreground.css;\n    }\n\n    if (e.y1 === e.y2) {\n      // Single line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.x2 - e.x1);\n    } else {\n      // Multi-line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.cols - e.x1);\n      for (let y = e.y1 + 1; y < e.y2; y++) {\n        this._fillBottomLineAtCells(0, y, e.cols);\n      }\n      this._fillBottomLineAtCells(0, e.y2, e.x2);\n    }\n    this._state = e;\n  }\n\n  private _handleHideLinkUnderline(e: ILinkifierEvent): void {\n    this._clearCurrentLink();\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param node The node to add a listener to.\n * @param type The event type.\n * @param handler The handler for the listener.\n * @param options The boolean or options object to pass on to the event\n * listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  options?: boolean | AddEventListenerOptions\n): IDisposable {\n  node.addEventListener(type, handler, options);\n  let disposed = false;\n  return {\n    dispose: () => {\n      if (disposed) {\n        return;\n      }\n      disposed = true;\n      node.removeEventListener(type, handler, options);\n    }\n  };\n}\n","import { ISelectionRenderModel } from 'browser/renderer/shared/Types';\nimport { ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { Attributes, BgFlags, FgFlags } from 'common/buffer/Constants';\nimport { IDecorationService } from 'common/services/Services';\nimport { ICellData } from 'common/Types';\nimport { Terminal } from 'xterm';\n\n// Work variables to avoid garbage collection\nlet $fg = 0;\nlet $bg = 0;\nlet $hasFg = false;\nlet $hasBg = false;\nlet $isSelected = false;\nlet $colors: ReadonlyColorSet | undefined;\n\nexport class CellColorResolver {\n  /**\n   * The shared result of the {@link resolve} call. This is only safe to use immediately after as\n   * any other calls will share object.\n   */\n  public readonly result: { fg: number, bg: number, ext: number } = {\n    fg: 0,\n    bg: 0,\n    ext: 0\n  };\n\n  constructor(\n    private readonly _terminal: Terminal,\n    private readonly _selectionRenderModel: ISelectionRenderModel,\n    private readonly _decorationService: IDecorationService,\n    private readonly _coreBrowserService: ICoreBrowserService,\n    private readonly _themeService: IThemeService\n  ) {\n  }\n\n  /**\n   * Resolves colors for the cell, putting the result into the shared {@link result}. This resolves\n   * overrides, inverse and selection for the cell which can then be used to feed into the renderer.\n   */\n  public resolve(cell: ICellData, x: number, y: number): void {\n    this.result.bg = cell.bg;\n    this.result.fg = cell.fg;\n    this.result.ext = cell.bg & BgFlags.HAS_EXTENDED ? cell.extended.ext : 0;\n    // Get any foreground/background overrides, this happens on the model to avoid spreading\n    // override logic throughout the different sub-renderers\n\n    // Reset overrides work variables\n    $bg = 0;\n    $fg = 0;\n    $hasBg = false;\n    $hasFg = false;\n    $isSelected = false;\n    $colors = this._themeService.colors;\n\n    // Apply decorations on the bottom layer\n    this._decorationService.forEachDecorationAtCell(x, y, 'bottom', d => {\n      if (d.backgroundColorRGB) {\n        $bg = d.backgroundColorRGB.rgba >> 8 & 0xFFFFFF;\n        $hasBg = true;\n      }\n      if (d.foregroundColorRGB) {\n        $fg = d.foregroundColorRGB.rgba >> 8 & 0xFFFFFF;\n        $hasFg = true;\n      }\n    });\n\n    // Apply the selection color if needed\n    $isSelected = this._selectionRenderModel.isCellSelected(this._terminal, x, y);\n    if ($isSelected) {\n      $bg = (this._coreBrowserService.isFocused ? $colors.selectionBackgroundOpaque : $colors.selectionInactiveBackgroundOpaque).rgba >> 8 & 0xFFFFFF;\n      $hasBg = true;\n      if ($colors.selectionForeground) {\n        $fg = $colors.selectionForeground.rgba >> 8 & 0xFFFFFF;\n        $hasFg = true;\n      }\n    }\n\n    // Apply decorations on the top layer\n    this._decorationService.forEachDecorationAtCell(x, y, 'top', d => {\n      if (d.backgroundColorRGB) {\n        $bg = d.backgroundColorRGB.rgba >> 8 & 0xFFFFFF;\n        $hasBg = true;\n      }\n      if (d.foregroundColorRGB) {\n        $fg = d.foregroundColorRGB.rgba >> 8 & 0xFFFFFF;\n        $hasFg = true;\n      }\n    });\n\n    // Convert any overrides from rgba to the fg/bg packed format. This resolves the inverse flag\n    // ahead of time in order to use the correct cache key\n    if ($hasBg) {\n      if ($isSelected) {\n        // Non-RGB attributes from model + force non-dim + override + force RGB color mode\n        $bg = (cell.bg & ~Attributes.RGB_MASK & ~BgFlags.DIM) | $bg | Attributes.CM_RGB;\n      } else {\n        // Non-RGB attributes from model + override + force RGB color mode\n        $bg = (cell.bg & ~Attributes.RGB_MASK) | $bg | Attributes.CM_RGB;\n      }\n    }\n    if ($hasFg) {\n      // Non-RGB attributes from model + force disable inverse + override + force RGB color mode\n      $fg = (cell.fg & ~Attributes.RGB_MASK & ~FgFlags.INVERSE) | $fg | Attributes.CM_RGB;\n    }\n\n    // Handle case where inverse was specified by only one of bg override or fg override was set,\n    // resolving the other inverse color and setting the inverse flag if needed.\n    if (this.result.fg & FgFlags.INVERSE) {\n      if ($hasBg && !$hasFg) {\n        // Resolve bg color type (default color has a different meaning in fg vs bg)\n        if ((this.result.bg & Attributes.CM_MASK) === Attributes.CM_DEFAULT) {\n          $fg = (this.result.fg & ~(Attributes.RGB_MASK | FgFlags.INVERSE | Attributes.CM_MASK)) | (($colors.background.rgba >> 8 & 0xFFFFFF) & Attributes.RGB_MASK) | Attributes.CM_RGB;\n        } else {\n          $fg = (this.result.fg & ~(Attributes.RGB_MASK | FgFlags.INVERSE | Attributes.CM_MASK)) | this.result.bg & (Attributes.RGB_MASK | Attributes.CM_MASK);\n        }\n        $hasFg = true;\n      }\n      if (!$hasBg && $hasFg) {\n        // Resolve bg color type (default color has a different meaning in fg vs bg)\n        if ((this.result.fg & Attributes.CM_MASK) === Attributes.CM_DEFAULT) {\n          $bg = (this.result.bg & ~(Attributes.RGB_MASK | Attributes.CM_MASK)) | (($colors.foreground.rgba >> 8 & 0xFFFFFF) & Attributes.RGB_MASK) | Attributes.CM_RGB;\n        } else {\n          $bg = (this.result.bg & ~(Attributes.RGB_MASK | Attributes.CM_MASK)) | this.result.fg & (Attributes.RGB_MASK | Attributes.CM_MASK);\n        }\n        $hasBg = true;\n      }\n    }\n\n    // Release object\n    $colors = undefined;\n\n    // Use the override if it exists\n    this.result.bg = $hasBg ? $bg : this.result.bg;\n    this.result.fg = $hasFg ? $fg : this.result.fg;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { TextureAtlas } from 'browser/renderer/shared/TextureAtlas';\nimport { ITerminalOptions, Terminal } from 'xterm';\nimport { ITerminal, ReadonlyColorSet } from 'browser/Types';\nimport { ICharAtlasConfig, ITextureAtlas } from 'browser/renderer/shared/Types';\nimport { generateConfig, configEquals } from 'browser/renderer/shared/CharAtlasUtils';\n\ninterface ITextureAtlasCacheEntry {\n  atlas: ITextureAtlas;\n  config: ICharAtlasConfig;\n  // N.B. This implementation potentially holds onto copies of the terminal forever, so\n  // this may cause memory leaks.\n  ownedBy: Terminal[];\n}\n\nconst charAtlasCache: ITextureAtlasCacheEntry[] = [];\n\n/**\n * Acquires a char atlas, either generating a new one or returning an existing\n * one that is in use by another terminal.\n */\nexport function acquireTextureAtlas(\n  terminal: Terminal,\n  options: Required<ITerminalOptions>,\n  colors: ReadonlyColorSet,\n  deviceCellWidth: number,\n  deviceCellHeight: number,\n  deviceCharWidth: number,\n  deviceCharHeight: number,\n  devicePixelRatio: number\n): ITextureAtlas {\n  const newConfig = generateConfig(deviceCellWidth, deviceCellHeight, deviceCharWidth, deviceCharHeight, options, colors, devicePixelRatio);\n\n  // Check to see if the terminal already owns this config\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    const ownedByIndex = entry.ownedBy.indexOf(terminal);\n    if (ownedByIndex >= 0) {\n      if (configEquals(entry.config, newConfig)) {\n        return entry.atlas;\n      }\n      // The configs differ, release the terminal from the entry\n      if (entry.ownedBy.length === 1) {\n        entry.atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        entry.ownedBy.splice(ownedByIndex, 1);\n      }\n      break;\n    }\n  }\n\n  // Try match a char atlas from the cache\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    if (configEquals(entry.config, newConfig)) {\n      // Add the terminal to the cache entry and return\n      entry.ownedBy.push(terminal);\n      return entry.atlas;\n    }\n  }\n\n  const core: ITerminal = (terminal as any)._core;\n  const newEntry: ITextureAtlasCacheEntry = {\n    atlas: new TextureAtlas(document, newConfig, core.unicodeService),\n    config: newConfig,\n    ownedBy: [terminal]\n  };\n  charAtlasCache.push(newEntry);\n  return newEntry.atlas;\n}\n\n/**\n * Removes a terminal reference from the cache, allowing its memory to be freed.\n * @param terminal The terminal to remove.\n */\nexport function removeTerminalFromCache(terminal: Terminal): void {\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const index = charAtlasCache[i].ownedBy.indexOf(terminal);\n    if (index !== -1) {\n      if (charAtlasCache[i].ownedBy.length === 1) {\n        // Remove the cache entry if it's the only terminal\n        charAtlasCache[i].atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        // Remove the reference from the cache entry\n        charAtlasCache[i].ownedBy.splice(index, 1);\n      }\n      break;\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharAtlasConfig } from './Types';\nimport { Attributes } from 'common/buffer/Constants';\nimport { ITerminalOptions } from 'xterm';\nimport { IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { NULL_COLOR } from 'common/Color';\n\nexport function generateConfig(deviceCellWidth: number, deviceCellHeight: number, deviceCharWidth: number, deviceCharHeight: number, options: Required<ITerminalOptions>, colors: ReadonlyColorSet, devicePixelRatio: number): ICharAtlasConfig {\n  // null out some fields that don't matter\n  const clonedColors: IColorSet = {\n    foreground: colors.foreground,\n    background: colors.background,\n    cursor: NULL_COLOR,\n    cursorAccent: NULL_COLOR,\n    selectionForeground: NULL_COLOR,\n    selectionBackgroundTransparent: NULL_COLOR,\n    selectionBackgroundOpaque: NULL_COLOR,\n    selectionInactiveBackgroundTransparent: NULL_COLOR,\n    selectionInactiveBackgroundOpaque: NULL_COLOR,\n    // For the static char atlas, we only use the first 16 colors, but we need all 256 for the\n    // dynamic character atlas.\n    ansi: colors.ansi.slice(),\n    contrastCache: colors.contrastCache\n  };\n  return {\n    customGlyphs: options.customGlyphs,\n    devicePixelRatio,\n    letterSpacing: options.letterSpacing,\n    lineHeight: options.lineHeight,\n    deviceCellWidth: deviceCellWidth,\n    deviceCellHeight: deviceCellHeight,\n    deviceCharWidth: deviceCharWidth,\n    deviceCharHeight: deviceCharHeight,\n    fontFamily: options.fontFamily,\n    fontSize: options.fontSize,\n    fontWeight: options.fontWeight,\n    fontWeightBold: options.fontWeightBold,\n    allowTransparency: options.allowTransparency,\n    drawBoldTextInBrightColors: options.drawBoldTextInBrightColors,\n    minimumContrastRatio: options.minimumContrastRatio,\n    colors: clonedColors\n  };\n}\n\nexport function configEquals(a: ICharAtlasConfig, b: ICharAtlasConfig): boolean {\n  for (let i = 0; i < a.colors.ansi.length; i++) {\n    if (a.colors.ansi[i].rgba !== b.colors.ansi[i].rgba) {\n      return false;\n    }\n  }\n  return a.devicePixelRatio === b.devicePixelRatio &&\n      a.customGlyphs === b.customGlyphs &&\n      a.lineHeight === b.lineHeight &&\n      a.letterSpacing === b.letterSpacing &&\n      a.fontFamily === b.fontFamily &&\n      a.fontSize === b.fontSize &&\n      a.fontWeight === b.fontWeight &&\n      a.fontWeightBold === b.fontWeightBold &&\n      a.allowTransparency === b.allowTransparency &&\n      a.deviceCharWidth === b.deviceCharWidth &&\n      a.deviceCharHeight === b.deviceCharHeight &&\n      a.drawBoldTextInBrightColors === b.drawBoldTextInBrightColors &&\n      a.minimumContrastRatio === b.minimumContrastRatio &&\n      a.colors.foreground.rgba === b.colors.foreground.rgba &&\n      a.colors.background.rgba === b.colors.background.rgba;\n}\n\nexport function is256Color(colorCode: number): boolean {\n  return (colorCode & Attributes.CM_MASK) === Attributes.CM_P16 || (colorCode & Attributes.CM_MASK) === Attributes.CM_P256;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isFirefox, isLegacyEdge } from 'common/Platform';\n\nexport const INVERTED_DEFAULT_COLOR = 257;\n\nexport const DIM_OPACITY = 0.5;\n// The text baseline is set conditionally by browser. Using 'ideographic' for Firefox or Legacy Edge would\n// result in truncated text (Issue 3353). Using 'bottom' for Chrome would result in slightly\n// unaligned Powerline fonts (PR 3356#issuecomment-850928179).\nexport const TEXT_BASELINE: CanvasTextBaseline = isFirefox || isLegacyEdge ? 'bottom' : 'ideographic';\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { throwIfFalsy } from 'browser/renderer/shared/RendererUtils';\n\ninterface IBlockVector {\n  x: number;\n  y: number;\n  w: number;\n  h: number;\n}\n\nexport const blockElementDefinitions: { [index: string]: IBlockVector[] | undefined } = {\n  // Block elements (0x2580-0x2590)\n  '▀': [{ x: 0, y: 0, w: 8, h: 4 }], // UPPER HALF BLOCK\n  '▁': [{ x: 0, y: 7, w: 8, h: 1 }], // LOWER ONE EIGHTH BLOCK\n  '▂': [{ x: 0, y: 6, w: 8, h: 2 }], // LOWER ONE QUARTER BLOCK\n  '▃': [{ x: 0, y: 5, w: 8, h: 3 }], // LOWER THREE EIGHTHS BLOCK\n  '▄': [{ x: 0, y: 4, w: 8, h: 4 }], // LOWER HALF BLOCK\n  '▅': [{ x: 0, y: 3, w: 8, h: 5 }], // LOWER FIVE EIGHTHS BLOCK\n  '▆': [{ x: 0, y: 2, w: 8, h: 6 }], // LOWER THREE QUARTERS BLOCK\n  '▇': [{ x: 0, y: 1, w: 8, h: 7 }], // LOWER SEVEN EIGHTHS BLOCK\n  '█': [{ x: 0, y: 0, w: 8, h: 8 }], // FULL BLOCK\n  '▉': [{ x: 0, y: 0, w: 7, h: 8 }], // LEFT SEVEN EIGHTHS BLOCK\n  '▊': [{ x: 0, y: 0, w: 6, h: 8 }], // LEFT THREE QUARTERS BLOCK\n  '▋': [{ x: 0, y: 0, w: 5, h: 8 }], // LEFT FIVE EIGHTHS BLOCK\n  '▌': [{ x: 0, y: 0, w: 4, h: 8 }], // LEFT HALF BLOCK\n  '▍': [{ x: 0, y: 0, w: 3, h: 8 }], // LEFT THREE EIGHTHS BLOCK\n  '▎': [{ x: 0, y: 0, w: 2, h: 8 }], // LEFT ONE QUARTER BLOCK\n  '▏': [{ x: 0, y: 0, w: 1, h: 8 }], // LEFT ONE EIGHTH BLOCK\n  '▐': [{ x: 4, y: 0, w: 4, h: 8 }], // RIGHT HALF BLOCK\n\n  // Block elements (0x2594-0x2595)\n  '▔': [{ x: 0, y: 0, w: 8, h: 1 }], // UPPER ONE EIGHTH BLOCK\n  '▕': [{ x: 7, y: 0, w: 1, h: 8 }], // RIGHT ONE EIGHTH BLOCK\n\n  // Terminal graphic characters (0x2596-0x259F)\n  '▖': [{ x: 0, y: 4, w: 4, h: 4 }],                             // QUADRANT LOWER LEFT\n  '▗': [{ x: 4, y: 4, w: 4, h: 4 }],                             // QUADRANT LOWER RIGHT\n  '▘': [{ x: 0, y: 0, w: 4, h: 4 }],                             // QUADRANT UPPER LEFT\n  '▙': [{ x: 0, y: 0, w: 4, h: 8 }, { x: 0, y: 4, w: 8, h: 4 }], // QUADRANT UPPER LEFT AND LOWER LEFT AND LOWER RIGHT\n  '▚': [{ x: 0, y: 0, w: 4, h: 4 }, { x: 4, y: 4, w: 4, h: 4 }], // QUADRANT UPPER LEFT AND LOWER RIGHT\n  '▛': [{ x: 0, y: 0, w: 4, h: 8 }, { x: 4, y: 0, w: 4, h: 4 }], // QUADRANT UPPER LEFT AND UPPER RIGHT AND LOWER LEFT\n  '▜': [{ x: 0, y: 0, w: 8, h: 4 }, { x: 4, y: 0, w: 4, h: 8 }], // QUADRANT UPPER LEFT AND UPPER RIGHT AND LOWER RIGHT\n  '▝': [{ x: 4, y: 0, w: 4, h: 4 }],                             // QUADRANT UPPER RIGHT\n  '▞': [{ x: 4, y: 0, w: 4, h: 4 }, { x: 0, y: 4, w: 4, h: 4 }], // QUADRANT UPPER RIGHT AND LOWER LEFT\n  '▟': [{ x: 4, y: 0, w: 4, h: 8 }, { x: 0, y: 4, w: 8, h: 4 }], // QUADRANT UPPER RIGHT AND LOWER LEFT AND LOWER RIGHT\n\n  // VERTICAL ONE EIGHTH BLOCK-2 through VERTICAL ONE EIGHTH BLOCK-7\n  '\\u{1FB70}': [{ x: 1, y: 0, w: 1, h: 8 }],\n  '\\u{1FB71}': [{ x: 2, y: 0, w: 1, h: 8 }],\n  '\\u{1FB72}': [{ x: 3, y: 0, w: 1, h: 8 }],\n  '\\u{1FB73}': [{ x: 4, y: 0, w: 1, h: 8 }],\n  '\\u{1FB74}': [{ x: 5, y: 0, w: 1, h: 8 }],\n  '\\u{1FB75}': [{ x: 6, y: 0, w: 1, h: 8 }],\n\n  // HORIZONTAL ONE EIGHTH BLOCK-2 through HORIZONTAL ONE EIGHTH BLOCK-7\n  '\\u{1FB76}': [{ x: 0, y: 1, w: 8, h: 1 }],\n  '\\u{1FB77}': [{ x: 0, y: 2, w: 8, h: 1 }],\n  '\\u{1FB78}': [{ x: 0, y: 3, w: 8, h: 1 }],\n  '\\u{1FB79}': [{ x: 0, y: 4, w: 8, h: 1 }],\n  '\\u{1FB7A}': [{ x: 0, y: 5, w: 8, h: 1 }],\n  '\\u{1FB7B}': [{ x: 0, y: 6, w: 8, h: 1 }],\n\n  // LEFT AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB7C}': [{ x: 0, y: 0, w: 1, h: 8 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // LEFT AND UPPER ONE EIGHTH BLOCK\n  '\\u{1FB7D}': [{ x: 0, y: 0, w: 1, h: 8 }, { x: 0, y: 0, w: 8, h: 1 }],\n  // RIGHT AND UPPER ONE EIGHTH BLOCK\n  '\\u{1FB7E}': [{ x: 7, y: 0, w: 1, h: 8 }, { x: 0, y: 0, w: 8, h: 1 }],\n  // RIGHT AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB7F}': [{ x: 7, y: 0, w: 1, h: 8 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // UPPER AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB80}': [{ x: 0, y: 0, w: 8, h: 1 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // HORIZONTAL ONE EIGHTH BLOCK-1358\n  '\\u{1FB81}': [{ x: 0, y: 0, w: 8, h: 1 }, { x: 0, y: 2, w: 8, h: 1 }, { x: 0, y: 4, w: 8, h: 1 }, { x: 0, y: 7, w: 8, h: 1 }],\n\n  // UPPER ONE QUARTER BLOCK\n  '\\u{1FB82}': [{ x: 0, y: 0, w: 8, h: 2 }],\n  // UPPER THREE EIGHTHS BLOCK\n  '\\u{1FB83}': [{ x: 0, y: 0, w: 8, h: 3 }],\n  // UPPER FIVE EIGHTHS BLOCK\n  '\\u{1FB84}': [{ x: 0, y: 0, w: 8, h: 5 }],\n  // UPPER THREE QUARTERS BLOCK\n  '\\u{1FB85}': [{ x: 0, y: 0, w: 8, h: 6 }],\n  // UPPER SEVEN EIGHTHS BLOCK\n  '\\u{1FB86}': [{ x: 0, y: 0, w: 8, h: 7 }],\n\n  // RIGHT ONE QUARTER BLOCK\n  '\\u{1FB87}': [{ x: 6, y: 0, w: 2, h: 8 }],\n  // RIGHT THREE EIGHTHS B0OCK\n  '\\u{1FB88}': [{ x: 5, y: 0, w: 3, h: 8 }],\n  // RIGHT FIVE EIGHTHS BL0CK\n  '\\u{1FB89}': [{ x: 3, y: 0, w: 5, h: 8 }],\n  // RIGHT THREE QUARTERS 0LOCK\n  '\\u{1FB8A}': [{ x: 2, y: 0, w: 6, h: 8 }],\n  // RIGHT SEVEN EIGHTHS B0OCK\n  '\\u{1FB8B}': [{ x: 1, y: 0, w: 7, h: 8 }],\n\n  // CHECKER BOARD FILL\n  '\\u{1FB95}': [\n    { x: 0, y: 0, w: 2, h: 2 }, { x: 4, y: 0, w: 2, h: 2 },\n    { x: 2, y: 2, w: 2, h: 2 }, { x: 6, y: 2, w: 2, h: 2 },\n    { x: 0, y: 4, w: 2, h: 2 }, { x: 4, y: 4, w: 2, h: 2 },\n    { x: 2, y: 6, w: 2, h: 2 }, { x: 6, y: 6, w: 2, h: 2 }\n  ],\n  // INVERSE CHECKER BOARD FILL\n  '\\u{1FB96}': [\n    { x: 2, y: 0, w: 2, h: 2 }, { x: 6, y: 0, w: 2, h: 2 },\n    { x: 0, y: 2, w: 2, h: 2 }, { x: 4, y: 2, w: 2, h: 2 },\n    { x: 2, y: 4, w: 2, h: 2 }, { x: 6, y: 4, w: 2, h: 2 },\n    { x: 0, y: 6, w: 2, h: 2 }, { x: 4, y: 6, w: 2, h: 2 }\n  ],\n  // HEAVY HORIZONTAL FILL (upper middle and lower one quarter block)\n  '\\u{1FB97}': [{ x: 0, y: 2, w: 8, h: 2 }, { x: 0, y: 6, w: 8, h: 2 }]\n};\n\ntype PatternDefinition = number[][];\n\n/**\n * Defines the repeating pattern used by special characters, the pattern is made up of a 2d array of\n * pixel values to be filled (1) or not filled (0).\n */\nconst patternCharacterDefinitions: { [key: string]: PatternDefinition | undefined } = {\n  // Shade characters (0x2591-0x2593)\n  '░': [ // LIGHT SHADE (25%)\n    [1, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 1, 0],\n    [0, 0, 0, 0]\n  ],\n  '▒': [ // MEDIUM SHADE (50%)\n    [1, 0],\n    [0, 0],\n    [0, 1],\n    [0, 0]\n  ],\n  '▓': [ // DARK SHADE (75%)\n    [0, 1],\n    [1, 1],\n    [1, 0],\n    [1, 1]\n  ]\n};\n\nconst enum Shapes {\n  /** │ */ TOP_TO_BOTTOM = 'M.5,0 L.5,1',\n  /** ─ */ LEFT_TO_RIGHT = 'M0,.5 L1,.5',\n\n  /** └ */ TOP_TO_RIGHT = 'M.5,0 L.5,.5 L1,.5',\n  /** ┘ */ TOP_TO_LEFT = 'M.5,0 L.5,.5 L0,.5',\n  /** ┐ */ LEFT_TO_BOTTOM = 'M0,.5 L.5,.5 L.5,1',\n  /** ┌ */ RIGHT_TO_BOTTOM = 'M0.5,1 L.5,.5 L1,.5',\n\n  /** ╵ */ MIDDLE_TO_TOP = 'M.5,.5 L.5,0',\n  /** ╴ */ MIDDLE_TO_LEFT = 'M.5,.5 L0,.5',\n  /** ╶ */ MIDDLE_TO_RIGHT = 'M.5,.5 L1,.5',\n  /** ╷ */ MIDDLE_TO_BOTTOM = 'M.5,.5 L.5,1',\n\n  /** ┴ */ T_TOP = 'M0,.5 L1,.5 M.5,.5 L.5,0',\n  /** ┤ */ T_LEFT = 'M.5,0 L.5,1 M.5,.5 L0,.5',\n  /** ├ */ T_RIGHT = 'M.5,0 L.5,1 M.5,.5 L1,.5',\n  /** ┬ */ T_BOTTOM = 'M0,.5 L1,.5 M.5,.5 L.5,1',\n\n  /** ┼ */ CROSS = 'M0,.5 L1,.5 M.5,0 L.5,1',\n\n  /** ╌ */ TWO_DASHES_HORIZONTAL = 'M.1,.5 L.4,.5 M.6,.5 L.9,.5', // .2 empty, .3 filled\n  /** ┄ */ THREE_DASHES_HORIZONTAL = 'M.0667,.5 L.2667,.5 M.4,.5 L.6,.5 M.7333,.5 L.9333,.5', // .1333 empty, .2 filled\n  /** ┉ */ FOUR_DASHES_HORIZONTAL = 'M.05,.5 L.2,.5 M.3,.5 L.45,.5 M.55,.5 L.7,.5 M.8,.5 L.95,.5', // .1 empty, .15 filled\n  /** ╎ */ TWO_DASHES_VERTICAL = 'M.5,.1 L.5,.4 M.5,.6 L.5,.9',\n  /** ┆ */ THREE_DASHES_VERTICAL = 'M.5,.0667 L.5,.2667 M.5,.4 L.5,.6 M.5,.7333 L.5,.9333',\n  /** ┊ */ FOUR_DASHES_VERTICAL = 'M.5,.05 L.5,.2 M.5,.3 L.5,.45 L.5,.55 M.5,.7 L.5,.95',\n}\n\nconst enum Style {\n  NORMAL = 1,\n  BOLD = 3\n}\n\n/**\n * @param xp The percentage of 15% of the x axis.\n * @param yp The percentage of 15% of the x axis on the y axis.\n */\ntype DrawFunctionDefinition = (xp: number, yp: number) => string;\n\n/**\n * This contains the definitions of all box drawing characters in the format of SVG paths (ie. the\n * svg d attribute).\n */\nexport const boxDrawingDefinitions: { [character: string]: { [fontWeight: number]: string | DrawFunctionDefinition } | undefined } = {\n  // Uniform normal and bold\n  '─': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT },\n  '━': { [Style.BOLD]:   Shapes.LEFT_TO_RIGHT },\n  '│': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM },\n  '┃': { [Style.BOLD]:   Shapes.TOP_TO_BOTTOM },\n  '┌': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM },\n  '┏': { [Style.BOLD]:   Shapes.RIGHT_TO_BOTTOM },\n  '┐': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM },\n  '┓': { [Style.BOLD]:   Shapes.LEFT_TO_BOTTOM },\n  '└': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT },\n  '┗': { [Style.BOLD]:   Shapes.TOP_TO_RIGHT },\n  '┘': { [Style.NORMAL]: Shapes.TOP_TO_LEFT },\n  '┛': { [Style.BOLD]:   Shapes.TOP_TO_LEFT },\n  '├': { [Style.NORMAL]: Shapes.T_RIGHT },\n  '┣': { [Style.BOLD]:   Shapes.T_RIGHT },\n  '┤': { [Style.NORMAL]: Shapes.T_LEFT },\n  '┫': { [Style.BOLD]:   Shapes.T_LEFT },\n  '┬': { [Style.NORMAL]: Shapes.T_BOTTOM },\n  '┳': { [Style.BOLD]:   Shapes.T_BOTTOM },\n  '┴': { [Style.NORMAL]: Shapes.T_TOP },\n  '┻': { [Style.BOLD]:   Shapes.T_TOP },\n  '┼': { [Style.NORMAL]: Shapes.CROSS },\n  '╋': { [Style.BOLD]:   Shapes.CROSS },\n  '╴': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT },\n  '╸': { [Style.BOLD]:   Shapes.MIDDLE_TO_LEFT },\n  '╵': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP },\n  '╹': { [Style.BOLD]:   Shapes.MIDDLE_TO_TOP },\n  '╶': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT },\n  '╺': { [Style.BOLD]:   Shapes.MIDDLE_TO_RIGHT },\n  '╷': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM },\n  '╻': { [Style.BOLD]:   Shapes.MIDDLE_TO_BOTTOM },\n\n  // Double border\n  '═': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '║': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '╒': { [Style.NORMAL]: (xp, yp) => `M.5,1 L.5,${.5 - yp} L1,${.5 - yp} M.5,${.5 + yp} L1,${.5 + yp}` },\n  '╓': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},1 L${.5 - xp},.5 L1,.5 M${.5 + xp},.5 L${.5 + xp},1` },\n  '╔': { [Style.NORMAL]: (xp, yp) => `M1,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1` },\n  '╕': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L.5,${.5 - yp} L.5,1 M0,${.5 + yp} L.5,${.5 + yp}` },\n  '╖': { [Style.NORMAL]: (xp, yp) => `M${.5 + xp},1 L${.5 + xp},.5 L0,.5 M${.5 - xp},.5 L${.5 - xp},1` },\n  '╗': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M0,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},1` },\n  '╘': { [Style.NORMAL]: (xp, yp) => `M.5,0 L.5,${.5 + yp} L1,${.5 + yp} M.5,${.5 - yp} L1,${.5 - yp}` },\n  '╙': { [Style.NORMAL]: (xp, yp) => `M1,.5 L${.5 - xp},.5 L${.5 - xp},0 M${.5 + xp},.5 L${.5 + xp},0` },\n  '╚': { [Style.NORMAL]: (xp, yp) => `M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0 M1,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},0` },\n  '╛': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L.5,${.5 + yp} L.5,0 M0,${.5 - yp} L.5,${.5 - yp}` },\n  '╜': { [Style.NORMAL]: (xp, yp) => `M0,.5 L${.5 + xp},.5 L${.5 + xp},0 M${.5 - xp},.5 L${.5 - xp},0` },\n  '╝': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M0,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},0` },\n  '╞': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M.5,${.5 - yp} L1,${.5 - yp} M.5,${.5 + yp} L1,${.5 + yp}` },\n  '╟': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1 M${.5 + xp},.5 L1,.5` },\n  '╠': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n  '╡': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M0,${.5 - yp} L.5,${.5 - yp} M0,${.5 + yp} L.5,${.5 + yp}` },\n  '╢': { [Style.NORMAL]: (xp, yp) => `M0,.5 L${.5 - xp},.5 M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '╣': { [Style.NORMAL]: (xp, yp) => `M${.5 + xp},0 L${.5 + xp},1 M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0` },\n  '╤': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp} M.5,${.5 + yp} L.5,1` },\n  '╥': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},.5 L${.5 - xp},1 M${.5 + xp},.5 L${.5 + xp},1` },\n  '╦': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1` },\n  '╧': { [Style.NORMAL]: (xp, yp) => `M.5,0 L.5,${.5 - yp} M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '╨': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},.5 L${.5 - xp},0 M${.5 + xp},.5 L${.5 + xp},0` },\n  '╩': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L1,${.5 + yp} M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n  '╪': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '╫': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '╬': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1 M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n\n  // Diagonal\n  '╱': { [Style.NORMAL]: 'M1,0 L0,1' },\n  '╲': { [Style.NORMAL]: 'M0,0 L1,1' },\n  '╳': { [Style.NORMAL]: 'M1,0 L0,1 M0,0 L1,1' },\n\n  // Mixed weight\n  '╼': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '╽': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '╾': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '╿': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┍': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┎': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┑': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┒': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┕': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┖': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┙': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┚': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┝': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┞': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┟': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┠': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '┡': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '┢': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '┥': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┦': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┧': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┨': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '┩': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '┪': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '┭': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┮': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┯': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '┰': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┱': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '┲': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '┵': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┶': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┷': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '┸': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┹': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '┺': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '┽': { [Style.NORMAL]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_RIGHT}`,  [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┾': { [Style.NORMAL]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_LEFT}`,   [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┿': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '╀': { [Style.NORMAL]: `${Shapes.LEFT_TO_RIGHT} ${Shapes.MIDDLE_TO_BOTTOM}`, [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '╁': { [Style.NORMAL]: `${Shapes.MIDDLE_TO_TOP} ${Shapes.LEFT_TO_RIGHT}`,    [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '╂': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '╃': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '╄': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '╅': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '╆': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '╇': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: `${Shapes.MIDDLE_TO_TOP} ${Shapes.LEFT_TO_RIGHT}` },\n  '╈': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: `${Shapes.LEFT_TO_RIGHT} ${Shapes.MIDDLE_TO_BOTTOM}` },\n  '╉': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_LEFT}` },\n  '╊': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_RIGHT}` },\n\n  // Dashed\n  '╌': { [Style.NORMAL]: Shapes.TWO_DASHES_HORIZONTAL },\n  '╍': { [Style.BOLD]:   Shapes.TWO_DASHES_HORIZONTAL },\n  '┄': { [Style.NORMAL]: Shapes.THREE_DASHES_HORIZONTAL },\n  '┅': { [Style.BOLD]:   Shapes.THREE_DASHES_HORIZONTAL },\n  '┈': { [Style.NORMAL]: Shapes.FOUR_DASHES_HORIZONTAL },\n  '┉': { [Style.BOLD]:   Shapes.FOUR_DASHES_HORIZONTAL },\n  '╎': { [Style.NORMAL]: Shapes.TWO_DASHES_VERTICAL },\n  '╏': { [Style.BOLD]:   Shapes.TWO_DASHES_VERTICAL },\n  '┆': { [Style.NORMAL]: Shapes.THREE_DASHES_VERTICAL  },\n  '┇': { [Style.BOLD]:   Shapes.THREE_DASHES_VERTICAL },\n  '┊': { [Style.NORMAL]: Shapes.FOUR_DASHES_VERTICAL },\n  '┋': { [Style.BOLD]:   Shapes.FOUR_DASHES_VERTICAL },\n\n  // Curved\n  '╭': { [Style.NORMAL]: (xp, yp) => `M.5,1 L.5,${.5 + (yp / .15 * .5)} C.5,${.5 + (yp / .15 * .5)},.5,.5,1,.5` },\n  '╮': { [Style.NORMAL]: (xp, yp) => `M.5,1 L.5,${.5 + (yp / .15 * .5)} C.5,${.5 + (yp / .15 * .5)},.5,.5,0,.5` },\n  '╯': { [Style.NORMAL]: (xp, yp) => `M.5,0 L.5,${.5 - (yp / .15 * .5)} C.5,${.5 - (yp / .15 * .5)},.5,.5,0,.5` },\n  '╰': { [Style.NORMAL]: (xp, yp) => `M.5,0 L.5,${.5 - (yp / .15 * .5)} C.5,${.5 - (yp / .15 * .5)},.5,.5,1,.5` }\n};\n\ninterface IVectorShape {\n  d: string;\n  type: VectorType;\n  leftPadding?: number;\n  rightPadding?: number;\n}\n\nconst enum VectorType {\n  FILL,\n  STROKE\n}\n\n/**\n * This contains the definitions of the primarily used box drawing characters as vector shapes. The\n * reason these characters are defined specially is to avoid common problems if a user's font has\n * not been patched with powerline characters and also to get pixel perfect rendering as rendering\n * issues can occur around AA/SPAA.\n *\n * The line variants draw beyond the cell and get clipped to ensure the end of the line is not visible.\n *\n * Original symbols defined in https://github.com/powerline/fontpatcher\n */\nexport const powerlineDefinitions: { [index: string]: IVectorShape } = {\n  // Right triangle solid\n  '\\u{E0B0}': { d: 'M0,0 L1,.5 L0,1', type: VectorType.FILL, rightPadding: 2 },\n  // Right triangle line\n  '\\u{E0B1}': { d: 'M-1,-.5 L1,.5 L-1,1.5', type: VectorType.STROKE, leftPadding: 1, rightPadding: 1 },\n  // Left triangle solid\n  '\\u{E0B2}': { d: 'M1,0 L0,.5 L1,1', type: VectorType.FILL, leftPadding: 2 },\n  // Left triangle line\n  '\\u{E0B3}': { d: 'M2,-.5 L0,.5 L2,1.5', type: VectorType.STROKE, leftPadding: 1, rightPadding: 1 },\n  // Right semi-circle solid\n  '\\u{E0B4}': { d: 'M0,0 L0,1 C0.552,1,1,0.776,1,.5 C1,0.224,0.552,0,0,0', type: VectorType.FILL, rightPadding: 1 },\n  // Right semi-circle line\n  '\\u{E0B5}': { d: 'M0,1 C0.552,1,1,0.776,1,.5 C1,0.224,0.552,0,0,0', type: VectorType.STROKE, rightPadding: 1 },\n  // Left semi-circle solid\n  '\\u{E0B6}': { d: 'M1,0 L1,1 C0.448,1,0,0.776,0,.5 C0,0.224,0.448,0,1,0', type: VectorType.FILL, leftPadding: 1 },\n  // Left semi-circle line\n  '\\u{E0B7}': { d: 'M1,1 C0.448,1,0,0.776,0,.5 C0,0.224,0.448,0,1,0', type: VectorType.STROKE, leftPadding: 1 },\n  // Lower left triangle\n  '\\u{E0B8}': { d: 'M-.5,-.5 L1.5,1.5 L-.5,1.5', type: VectorType.FILL },\n  // Backslash separator\n  '\\u{E0B9}': { d: 'M-.5,-.5 L1.5,1.5', type: VectorType.STROKE, leftPadding: 1, rightPadding: 1 },\n  // Lower right triangle\n  '\\u{E0BA}': { d: 'M1.5,-.5 L-.5,1.5 L1.5,1.5', type: VectorType.FILL },\n  // Upper left triangle\n  '\\u{E0BC}': { d: 'M1.5,-.5 L-.5,1.5 L-.5,-.5', type: VectorType.FILL },\n  // Forward slash separator\n  '\\u{E0BD}': { d: 'M1.5,-.5 L-.5,1.5', type: VectorType.STROKE, leftPadding: 1, rightPadding: 1 },\n  // Upper right triangle\n  '\\u{E0BE}': { d: 'M-.5,-.5 L1.5,1.5 L1.5,-.5', type: VectorType.FILL }\n};\n// Backslash separator redundant\npowerlineDefinitions['\\u{E0BB}'] = powerlineDefinitions['\\u{E0B9}'];\n// Forward slash separator redundant\npowerlineDefinitions['\\u{E0BF}'] = powerlineDefinitions['\\u{E0BD}'];\n\n/**\n * Try drawing a custom block element or box drawing character, returning whether it was\n * successfully drawn.\n */\nexport function tryDrawCustomChar(\n  ctx: CanvasRenderingContext2D,\n  c: string,\n  xOffset: number,\n  yOffset: number,\n  deviceCellWidth: number,\n  deviceCellHeight: number,\n  fontSize: number,\n  devicePixelRatio: number\n): boolean {\n  const blockElementDefinition = blockElementDefinitions[c];\n  if (blockElementDefinition) {\n    drawBlockElementChar(ctx, blockElementDefinition, xOffset, yOffset, deviceCellWidth, deviceCellHeight);\n    return true;\n  }\n\n  const patternDefinition = patternCharacterDefinitions[c];\n  if (patternDefinition) {\n    drawPatternChar(ctx, patternDefinition, xOffset, yOffset, deviceCellWidth, deviceCellHeight);\n    return true;\n  }\n\n  const boxDrawingDefinition = boxDrawingDefinitions[c];\n  if (boxDrawingDefinition) {\n    drawBoxDrawingChar(ctx, boxDrawingDefinition, xOffset, yOffset, deviceCellWidth, deviceCellHeight, devicePixelRatio);\n    return true;\n  }\n\n  const powerlineDefinition = powerlineDefinitions[c];\n  if (powerlineDefinition) {\n    drawPowerlineChar(ctx, powerlineDefinition, xOffset, yOffset, deviceCellWidth, deviceCellHeight, fontSize, devicePixelRatio);\n    return true;\n  }\n\n  return false;\n}\n\nfunction drawBlockElementChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: IBlockVector[],\n  xOffset: number,\n  yOffset: number,\n  deviceCellWidth: number,\n  deviceCellHeight: number\n): void {\n  for (let i = 0; i < charDefinition.length; i++) {\n    const box = charDefinition[i];\n    const xEighth = deviceCellWidth / 8;\n    const yEighth = deviceCellHeight / 8;\n    ctx.fillRect(\n      xOffset + box.x * xEighth,\n      yOffset + box.y * yEighth,\n      box.w * xEighth,\n      box.h * yEighth\n    );\n  }\n}\n\nconst cachedPatterns: Map<PatternDefinition, Map</* fillStyle */string, CanvasPattern>> = new Map();\n\nfunction drawPatternChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: number[][],\n  xOffset: number,\n  yOffset: number,\n  deviceCellWidth: number,\n  deviceCellHeight: number\n): void {\n  let patternSet = cachedPatterns.get(charDefinition);\n  if (!patternSet) {\n    patternSet = new Map();\n    cachedPatterns.set(charDefinition, patternSet);\n  }\n  const fillStyle = ctx.fillStyle;\n  if (typeof fillStyle !== 'string') {\n    throw new Error(`Unexpected fillStyle type \"${fillStyle}\"`);\n  }\n  let pattern = patternSet.get(fillStyle);\n  if (!pattern) {\n    const width = charDefinition[0].length;\n    const height = charDefinition.length;\n    const tmpCanvas = document.createElement('canvas');\n    tmpCanvas.width = width;\n    tmpCanvas.height = height;\n    const tmpCtx = throwIfFalsy(tmpCanvas.getContext('2d'));\n    const imageData = new ImageData(width, height);\n\n    // Extract rgba from fillStyle\n    let r: number;\n    let g: number;\n    let b: number;\n    let a: number;\n    if (fillStyle.startsWith('#')) {\n      r = parseInt(fillStyle.slice(1, 3), 16);\n      g = parseInt(fillStyle.slice(3, 5), 16);\n      b = parseInt(fillStyle.slice(5, 7), 16);\n      a = fillStyle.length > 7 && parseInt(fillStyle.slice(7, 9), 16) || 1;\n    } else if (fillStyle.startsWith('rgba')) {\n      ([r, g, b, a] = fillStyle.substring(5, fillStyle.length - 1).split(',').map(e => parseFloat(e)));\n    } else {\n      throw new Error(`Unexpected fillStyle color format \"${fillStyle}\" when drawing pattern glyph`);\n    }\n\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        imageData.data[(y * width + x) * 4    ] = r;\n        imageData.data[(y * width + x) * 4 + 1] = g;\n        imageData.data[(y * width + x) * 4 + 2] = b;\n        imageData.data[(y * width + x) * 4 + 3] = charDefinition[y][x] * (a * 255);\n      }\n    }\n    tmpCtx.putImageData(imageData, 0, 0);\n    pattern = throwIfFalsy(ctx.createPattern(tmpCanvas, null));\n    patternSet.set(fillStyle, pattern);\n  }\n  ctx.fillStyle = pattern;\n  ctx.fillRect(xOffset, yOffset, deviceCellWidth, deviceCellHeight);\n}\n\n/**\n * Draws the following box drawing characters by mapping a subset of SVG d attribute instructions to\n * canvas draw calls.\n *\n * Box styles:       ┎┰┒┍┯┑╓╥╖╒╤╕ ┏┳┓┌┲┓┌┬┐┏┱┐\n * ┌─┬─┐ ┏━┳━┓ ╔═╦═╗ ┠╂┨┝┿┥╟╫╢╞╪╡ ┡╇┩├╊┫┢╈┪┣╉┤\n * │ │ │ ┃ ┃ ┃ ║ ║ ║ ┖┸┚┕┷┙╙╨╜╘╧╛ └┴┘└┺┛┗┻┛┗┹┘\n * ├─┼─┤ ┣━╋━┫ ╠═╬═╣ ┏┱┐┌┲┓┌┬┐┌┬┐ ┏┳┓┌┮┓┌┬┐┏┭┐\n * │ │ │ ┃ ┃ ┃ ║ ║ ║ ┡╃┤├╄┩├╆┪┢╅┤ ┞╀┦├┾┫┟╁┧┣┽┤\n * └─┴─┘ ┗━┻━┛ ╚═╩═╝ └┴┘└┴┘└┺┛┗┹┘ └┴┘└┶┛┗┻┛┗┵┘\n *\n * Other:\n * ╭─╮ ╲ ╱ ╷╻╎╏┆┇┊┋ ╺╾╴ ╌╌╌ ┄┄┄ ┈┈┈\n * │ │  ╳  ╽╿╎╏┆┇┊┋ ╶╼╸ ╍╍╍ ┅┅┅ ┉┉┉\n * ╰─╯ ╱ ╲ ╹╵╎╏┆┇┊┋\n *\n * All box drawing characters:\n * ─ ━ │ ┃ ┄ ┅ ┆ ┇ ┈ ┉ ┊ ┋ ┌ ┍ ┎ ┏\n * ┐ ┑ ┒ ┓ └ ┕ ┖ ┗ ┘ ┙ ┚ ┛ ├ ┝ ┞ ┟\n * ┠ ┡ ┢ ┣ ┤ ┥ ┦ ┧ ┨ ┩ ┪ ┫ ┬ ┭ ┮ ┯\n * ┰ ┱ ┲ ┳ ┴ ┵ ┶ ┷ ┸ ┹ ┺ ┻ ┼ ┽ ┾ ┿\n * ╀ ╁ ╂ ╃ ╄ ╅ ╆ ╇ ╈ ╉ ╊ ╋ ╌ ╍ ╎ ╏\n * ═ ║ ╒ ╓ ╔ ╕ ╖ ╗ ╘ ╙ ╚ ╛ ╜ ╝ ╞ ╟\n * ╠ ╡ ╢ ╣ ╤ ╥ ╦ ╧ ╨ ╩ ╪ ╫ ╬ ╭ ╮ ╯\n * ╰ ╱ ╲ ╳ ╴ ╵ ╶ ╷ ╸ ╹ ╺ ╻ ╼ ╽ ╾ ╿\n *\n * ---\n *\n * Box drawing alignment tests:                                          █\n *                                                                       ▉\n *   ╔══╦══╗  ┌──┬──┐  ╭──┬──╮  ╭──┬──╮  ┏━━┳━━┓  ┎┒┏┑   ╷  ╻ ┏┯┓ ┌┰┐    ▊ ╱╲╱╲╳╳╳\n *   ║┌─╨─┐║  │╔═╧═╗│  │╒═╪═╕│  │╓─╁─╖│  ┃┌─╂─┐┃  ┗╃╄┙  ╶┼╴╺╋╸┠┼┨ ┝╋┥    ▋ ╲╱╲╱╳╳╳\n *   ║│╲ ╱│║  │║   ║│  ││ │ ││  │║ ┃ ║│  ┃│ ╿ │┃  ┍╅╆┓   ╵  ╹ ┗┷┛ └┸┘    ▌ ╱╲╱╲╳╳╳\n *   ╠╡ ╳ ╞╣  ├╢   ╟┤  ├┼─┼─┼┤  ├╫─╂─╫┤  ┣┿╾┼╼┿┫  ┕┛┖┚     ┌┄┄┐ ╎ ┏┅┅┓ ┋ ▍ ╲╱╲╱╳╳╳\n *   ║│╱ ╲│║  │║   ║│  ││ │ ││  │║ ┃ ║│  ┃│ ╽ │┃  ░░▒▒▓▓██ ┊  ┆ ╎ ╏  ┇ ┋ ▎\n *   ║└─╥─┘║  │╚═╤═╝│  │╘═╪═╛│  │╙─╀─╜│  ┃└─╂─┘┃  ░░▒▒▓▓██ ┊  ┆ ╎ ╏  ┇ ┋ ▏\n *   ╚══╩══╝  └──┴──┘  ╰──┴──╯  ╰──┴──╯  ┗━━┻━━┛           └╌╌┘ ╎ ┗╍╍┛ ┋  ▁▂▃▄▅▆▇█\n *\n * Source: https://www.w3.org/2001/06/utf-8-test/UTF-8-demo.html\n */\nfunction drawBoxDrawingChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: { [fontWeight: number]: string | ((xp: number, yp: number) => string) },\n  xOffset: number,\n  yOffset: number,\n  deviceCellWidth: number,\n  deviceCellHeight: number,\n  devicePixelRatio: number\n): void {\n  ctx.strokeStyle = ctx.fillStyle;\n  for (const [fontWeight, instructions] of Object.entries(charDefinition)) {\n    ctx.beginPath();\n    ctx.lineWidth = devicePixelRatio * Number.parseInt(fontWeight);\n    let actualInstructions: string;\n    if (typeof instructions === 'function') {\n      const xp = .15;\n      const yp = .15 / deviceCellHeight * deviceCellWidth;\n      actualInstructions = instructions(xp, yp);\n    } else {\n      actualInstructions = instructions;\n    }\n    for (const instruction of actualInstructions.split(' ')) {\n      const type = instruction[0];\n      const f = svgToCanvasInstructionMap[type];\n      if (!f) {\n        console.error(`Could not find drawing instructions for \"${type}\"`);\n        continue;\n      }\n      const args: string[] = instruction.substring(1).split(',');\n      if (!args[0] || !args[1]) {\n        continue;\n      }\n      f(ctx, translateArgs(args, deviceCellWidth, deviceCellHeight, xOffset, yOffset, true, devicePixelRatio));\n    }\n    ctx.stroke();\n    ctx.closePath();\n  }\n}\n\nfunction drawPowerlineChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: IVectorShape,\n  xOffset: number,\n  yOffset: number,\n  deviceCellWidth: number,\n  deviceCellHeight: number,\n  fontSize: number,\n  devicePixelRatio: number\n): void {\n  // Clip the cell to make sure drawing doesn't occur beyond bounds\n  const clipRegion = new Path2D();\n  clipRegion.rect(xOffset, yOffset, deviceCellWidth, deviceCellHeight);\n  ctx.clip(clipRegion);\n\n  ctx.beginPath();\n  // Scale the stroke with DPR and font size\n  const cssLineWidth = fontSize / 12;\n  ctx.lineWidth = devicePixelRatio * cssLineWidth;\n  for (const instruction of charDefinition.d.split(' ')) {\n    const type = instruction[0];\n    const f = svgToCanvasInstructionMap[type];\n    if (!f) {\n      console.error(`Could not find drawing instructions for \"${type}\"`);\n      continue;\n    }\n    const args: string[] = instruction.substring(1).split(',');\n    if (!args[0] || !args[1]) {\n      continue;\n    }\n    f(ctx, translateArgs(\n      args,\n      deviceCellWidth,\n      deviceCellHeight,\n      xOffset,\n      yOffset,\n      false,\n      devicePixelRatio,\n      (charDefinition.leftPadding ?? 0) * (cssLineWidth / 2),\n      (charDefinition.rightPadding ?? 0) * (cssLineWidth / 2)\n    ));\n  }\n  if (charDefinition.type === VectorType.STROKE) {\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.stroke();\n  } else {\n    ctx.fill();\n  }\n  ctx.closePath();\n}\n\nfunction clamp(value: number, max: number, min: number = 0): number {\n  return Math.max(Math.min(value, max), min);\n}\n\nconst svgToCanvasInstructionMap: { [index: string]: any } = {\n  'C': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.bezierCurveTo(args[0], args[1], args[2], args[3], args[4], args[5]),\n  'L': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.lineTo(args[0], args[1]),\n  'M': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.moveTo(args[0], args[1])\n};\n\nfunction translateArgs(args: string[], cellWidth: number, cellHeight: number, xOffset: number, yOffset: number, doClamp: boolean, devicePixelRatio: number, leftPadding: number = 0, rightPadding: number = 0): number[] {\n  const result = args.map(e => parseFloat(e) || parseInt(e));\n\n  if (result.length < 2) {\n    throw new Error('Too few arguments for instruction');\n  }\n\n  for (let x = 0; x < result.length; x += 2) {\n    // Translate from 0-1 to 0-cellWidth\n    result[x] *= cellWidth - (leftPadding * devicePixelRatio) - (rightPadding * devicePixelRatio);\n    // Ensure coordinate doesn't escape cell bounds and round to the nearest 0.5 to ensure a crisp\n    // line at 100% devicePixelRatio\n    if (doClamp && result[x] !== 0) {\n      result[x] = clamp(Math.round(result[x] + 0.5) - 0.5, cellWidth, 0);\n    }\n    // Apply the cell's offset (ie. x*cellWidth)\n    result[x] += xOffset + (leftPadding * devicePixelRatio);\n  }\n\n  for (let y = 1; y < result.length; y += 2) {\n    // Translate from 0-1 to 0-cellHeight\n    result[y] *= cellHeight;\n    // Ensure coordinate doesn't escape cell bounds and round to the nearest 0.5 to ensure a crisp\n    // line at 100% devicePixelRatio\n    if (doClamp && result[y] !== 0) {\n      result[y] = clamp(Math.round(result[y] + 0.5) - 0.5, cellHeight, 0);\n    }\n    // Apply the cell's offset (ie. x*cellHeight)\n    result[y] += yOffset;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { toDisposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\n\nexport function observeDevicePixelDimensions(element: HTMLElement, parentWindow: Window & typeof globalThis, callback: (deviceWidth: number, deviceHeight: number) => void): IDisposable {\n  // Observe any resizes to the element and extract the actual pixel size of the element if the\n  // devicePixelContentBoxSize API is supported. This allows correcting rounding errors when\n  // converting between CSS pixels and device pixels which causes blurry rendering when device\n  // pixel ratio is not a round number.\n  let observer: ResizeObserver | undefined = new parentWindow.ResizeObserver((entries) => {\n    const entry = entries.find((entry) => entry.target === element);\n    if (!entry) {\n      return;\n    }\n\n    // Disconnect if devicePixelContentBoxSize isn't supported by the browser\n    if (!('devicePixelContentBoxSize' in entry)) {\n      observer?.disconnect();\n      observer = undefined;\n      return;\n    }\n\n    // Fire the callback, ignore events where the dimensions are 0x0 as the canvas is likely hidden\n    const width = entry.devicePixelContentBoxSize[0].inlineSize;\n    const height = entry.devicePixelContentBoxSize[0].blockSize;\n    if (width > 0 && height > 0) {\n      callback(width, height);\n    }\n  });\n  try {\n    observer.observe(element, { box: ['device-pixel-content-box'] } as any);\n  } catch {\n    observer.disconnect();\n    observer = undefined;\n  }\n  return toDisposable(() => observer?.disconnect());\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDimensions, IOffset, IRenderDimensions } from 'browser/renderer/shared/Types';\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n\nexport function isPowerlineGlyph(codepoint: number): boolean {\n  // Only return true for Powerline symbols which require\n  // different padding and should be excluded from minimum contrast\n  // ratio standards\n  return 0xE0A4 <= codepoint && codepoint <= 0xE0D6;\n}\n\nexport function isRestrictedPowerlineGlyph(codepoint: number): boolean {\n  return 0xE0B0 <= codepoint && codepoint <= 0xE0B7;\n}\n\nfunction isBoxOrBlockGlyph(codepoint: number): boolean {\n  return 0x2500 <= codepoint && codepoint <= 0x259F;\n}\n\nexport function excludeFromContrastRatioDemands(codepoint: number): boolean {\n  return isPowerlineGlyph(codepoint) || isBoxOrBlockGlyph(codepoint);\n}\n\nexport function createRenderDimensions(): IRenderDimensions {\n  return {\n    css: {\n      canvas: createDimension(),\n      cell: createDimension()\n    },\n    device: {\n      canvas: createDimension(),\n      cell: createDimension(),\n      char: {\n        width: 0,\n        height: 0,\n        left: 0,\n        top: 0\n      }\n    }\n  };\n}\n\nfunction createDimension(): IDimensions {\n  return {\n    width: 0,\n    height: 0\n  };\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionRenderModel } from 'browser/renderer/shared/Types';\nimport { Terminal } from 'xterm';\n\nclass SelectionRenderModel implements ISelectionRenderModel {\n  public hasSelection!: boolean;\n  public columnSelectMode!: boolean;\n  public viewportStartRow!: number;\n  public viewportEndRow!: number;\n  public viewportCappedStartRow!: number;\n  public viewportCappedEndRow!: number;\n  public startCol!: number;\n  public endCol!: number;\n  public selectionStart: [number, number] | undefined;\n  public selectionEnd: [number, number] | undefined;\n\n  constructor() {\n    this.clear();\n  }\n\n  public clear(): void {\n    this.hasSelection = false;\n    this.columnSelectMode = false;\n    this.viewportStartRow = 0;\n    this.viewportEndRow = 0;\n    this.viewportCappedStartRow = 0;\n    this.viewportCappedEndRow = 0;\n    this.startCol = 0;\n    this.endCol = 0;\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n  }\n\n  public update(terminal: Terminal, start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean = false): void {\n    this.selectionStart = start;\n    this.selectionEnd = end;\n    // Selection does not exist\n    if (!start || !end || (start[0] === end[0] && start[1] === end[1])) {\n      this.clear();\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - terminal.buffer.active.viewportY;\n    const viewportEndRow = end[1] - terminal.buffer.active.viewportY;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, terminal.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= terminal.rows || viewportCappedEndRow < 0) {\n      this.clear();\n      return;\n    }\n\n    this.hasSelection = true;\n    this.columnSelectMode = columnSelectMode;\n    this.viewportStartRow = viewportStartRow;\n    this.viewportEndRow = viewportEndRow;\n    this.viewportCappedStartRow = viewportCappedStartRow;\n    this.viewportCappedEndRow = viewportCappedEndRow;\n    this.startCol = start[0];\n    this.endCol = end[0];\n  }\n\n  public isCellSelected(terminal: Terminal, x: number, y: number): boolean {\n    if (!this.hasSelection) {\n      return false;\n    }\n    y -= terminal.buffer.active.viewportY;\n    if (this.columnSelectMode) {\n      if (this.startCol <= this.endCol) {\n        return x >= this.startCol && y >= this.viewportCappedStartRow &&\n          x < this.endCol && y <= this.viewportCappedEndRow;\n      }\n      return x < this.startCol && y >= this.viewportCappedStartRow &&\n        x >= this.endCol && y <= this.viewportCappedEndRow;\n    }\n    return (y > this.viewportStartRow && y < this.viewportEndRow) ||\n      (this.viewportStartRow === this.viewportEndRow && y === this.viewportStartRow && x >= this.startCol && x < this.endCol) ||\n      (this.viewportStartRow < this.viewportEndRow && y === this.viewportEndRow && x < this.endCol) ||\n      (this.viewportStartRow < this.viewportEndRow && y === this.viewportStartRow && x >= this.startCol);\n  }\n}\n\nexport function createSelectionRenderModel(): ISelectionRenderModel {\n  return new SelectionRenderModel();\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { DIM_OPACITY, TEXT_BASELINE } from 'browser/renderer/shared/Constants';\nimport { DEFAULT_COLOR, Attributes, DEFAULT_EXT, UnderlineStyle } from 'common/buffer/Constants';\nimport { IColor } from 'common/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { color, NULL_COLOR, rgba } from 'common/Color';\nimport { tryDrawCustomChar } from 'browser/renderer/shared/CustomGlyphs';\nimport { excludeFromContrastRatioDemands, isPowerlineGlyph, isRestrictedPowerlineGlyph, throwIfFalsy } from 'browser/renderer/shared/RendererUtils';\nimport { IUnicodeService } from 'common/services/Services';\nimport { FourKeyMap } from 'common/MultiKeyMap';\nimport { IdleTaskQueue } from 'common/TaskQueue';\nimport { IBoundingBox, ICharAtlasConfig, IRasterizedGlyph, IRequestRedrawEvent, ITextureAtlas } from 'browser/renderer/shared/Types';\nimport { EventEmitter } from 'common/EventEmitter';\n\n/**\n * A shared object which is used to draw nothing for a particular cell.\n */\nconst NULL_RASTERIZED_GLYPH: IRasterizedGlyph = {\n  texturePage: 0,\n  texturePosition: { x: 0, y: 0 },\n  texturePositionClipSpace: { x: 0, y: 0 },\n  offset: { x: 0, y: 0 },\n  size: { x: 0, y: 0 },\n  sizeClipSpace: { x: 0, y: 0 }\n};\n\nconst TMP_CANVAS_GLYPH_PADDING = 2;\n\nconst enum Constants {\n  /**\n   * The amount of pixel padding to allow in each row. Setting this to zero would make the atlas\n   * page pack as tightly as possible, but more pages would end up being created as a result.\n   */\n  ROW_PIXEL_THRESHOLD = 2,\n  /**\n   * The maximum texture size regardless of what the actual hardware maximum turns out to be. This\n   * is enforced to ensure uploading the texture still finishes in a reasonable amount of time. A\n   * 4096 squared image takes up 16MB of GPU memory.\n   */\n  FORCED_MAX_TEXTURE_SIZE = 4096\n}\n\ninterface ICharAtlasActiveRow {\n  x: number;\n  y: number;\n  height: number;\n}\n\n// Work variables to avoid garbage collection\nlet $glyph = undefined;\n\nexport class TextureAtlas implements ITextureAtlas {\n  private _didWarmUp: boolean = false;\n\n  private _cacheMap: FourKeyMap<number, number, number, number, IRasterizedGlyph> = new FourKeyMap();\n  private _cacheMapCombined: FourKeyMap<string, number, number, number, IRasterizedGlyph> = new FourKeyMap();\n\n  // The texture that the atlas is drawn to\n  private _pages: AtlasPage[] = [];\n  public get pages(): { canvas: HTMLCanvasElement, version: number }[] { return this._pages; }\n\n  // The set of atlas pages that can be written to\n  private _activePages: AtlasPage[] = [];\n\n  private _tmpCanvas: HTMLCanvasElement;\n  // A temporary context that glyphs are drawn to before being transfered to the atlas.\n  private _tmpCtx: CanvasRenderingContext2D;\n\n  private _workBoundingBox: IBoundingBox = { top: 0, left: 0, bottom: 0, right: 0 };\n  private _workAttributeData: AttributeData = new AttributeData();\n\n  private _textureSize: number = 512;\n\n  public static maxAtlasPages: number | undefined;\n  public static maxTextureSize: number | undefined;\n\n  private readonly _onAddTextureAtlasCanvas = new EventEmitter<HTMLCanvasElement>();\n  public readonly onAddTextureAtlasCanvas = this._onAddTextureAtlasCanvas.event;\n  private readonly _onRemoveTextureAtlasCanvas = new EventEmitter<HTMLCanvasElement>();\n  public readonly onRemoveTextureAtlasCanvas = this._onRemoveTextureAtlasCanvas.event;\n\n  constructor(\n    private readonly _document: Document,\n    private readonly _config: ICharAtlasConfig,\n    private readonly _unicodeService: IUnicodeService\n  ) {\n    this._createNewPage();\n    this._tmpCanvas = createCanvas(\n      _document,\n      this._config.deviceCellWidth * 4 + TMP_CANVAS_GLYPH_PADDING * 2,\n      this._config.deviceCellHeight + TMP_CANVAS_GLYPH_PADDING * 2\n    );\n    this._tmpCtx = throwIfFalsy(this._tmpCanvas.getContext('2d', {\n      alpha: this._config.allowTransparency,\n      willReadFrequently: true\n    }));\n  }\n\n  public dispose(): void {\n    for (const page of this.pages) {\n      page.canvas.remove();\n    }\n    this._onAddTextureAtlasCanvas.dispose();\n  }\n\n  public warmUp(): void {\n    if (!this._didWarmUp) {\n      this._doWarmUp();\n      this._didWarmUp = true;\n    }\n  }\n\n  private _doWarmUp(): void {\n    // Pre-fill with ASCII 33-126, this is not urgent and done in idle callbacks\n    const queue = new IdleTaskQueue();\n    for (let i = 33; i < 126; i++) {\n      queue.enqueue(() => {\n        if (!this._cacheMap.get(i, DEFAULT_COLOR, DEFAULT_COLOR, DEFAULT_EXT)) {\n          const rasterizedGlyph = this._drawToCache(i, DEFAULT_COLOR, DEFAULT_COLOR, DEFAULT_EXT);\n          this._cacheMap.set(i, DEFAULT_COLOR, DEFAULT_COLOR, DEFAULT_EXT, rasterizedGlyph);\n        }\n      });\n    }\n  }\n\n  private _requestClearModel = false;\n  public beginFrame(): boolean {\n    return this._requestClearModel;\n  }\n\n  public clearTexture(): void {\n    if (this._pages[0].currentRow.x === 0 && this._pages[0].currentRow.y === 0) {\n      return;\n    }\n    for (const page of this._pages) {\n      page.clear();\n    }\n    this._cacheMap.clear();\n    this._cacheMapCombined.clear();\n    this._didWarmUp = false;\n  }\n\n  private _createNewPage(): AtlasPage {\n    // Try merge the set of the 4 most used pages of the largest size. This is is deferred to a\n    // microtask to ensure it does not interrupt textures that will be rendered in the current\n    // animation frame which would result in blank rendered areas. This is actually not that\n    // expensive relative to drawing the glyphs, so there is no need to wait for an idle callback.\n    if (TextureAtlas.maxAtlasPages && this._pages.length >= Math.max(4, TextureAtlas.maxAtlasPages / 2)) {\n      queueMicrotask(() => {\n        // Find the set of the largest 4 images, below the maximum size, with the highest\n        // percentages used\n        const pagesBySize = this._pages.filter(e => {\n          return e.canvas.width * 2 <= (TextureAtlas.maxTextureSize || Constants.FORCED_MAX_TEXTURE_SIZE);\n        }).sort((a, b) => {\n          if (b.canvas.width !== a.canvas.width) {\n            return b.canvas.width - a.canvas.width;\n          }\n          return b.percentageUsed - a.percentageUsed;\n        });\n        let sameSizeI = -1;\n        let size = 0;\n        for (let i = 0; i < pagesBySize.length; i++) {\n          if (pagesBySize[i].canvas.width !== size) {\n            sameSizeI = i;\n            size = pagesBySize[i].canvas.width;\n          } else if (i - sameSizeI === 3) {\n            break;\n          }\n        }\n\n        // Gather details of the merge\n        const mergingPages = pagesBySize.slice(sameSizeI, sameSizeI + 4);\n        const sortedMergingPagesIndexes = mergingPages.map(e => e.glyphs[0].texturePage).sort((a, b) => a > b ? 1 : -1);\n        const mergedPageIndex = sortedMergingPagesIndexes[0];\n\n        // Merge into the new page\n        const mergedPage = this._mergePages(mergingPages, mergedPageIndex);\n        mergedPage.version++;\n\n        // Replace the first _merging_ page with the _merged_ page\n        this._pages[mergedPageIndex] = mergedPage;\n\n        // Delete the other 3 pages, shifting glyph texture pages as needed\n        for (let i = sortedMergingPagesIndexes.length - 1; i >= 1; i--) {\n          this._deletePage(sortedMergingPagesIndexes[i]);\n        }\n\n        // Request the model to be cleared to refresh all texture pages.\n        this._requestClearModel = true;\n        this._onAddTextureAtlasCanvas.fire(mergedPage.canvas);\n      });\n    }\n\n    // All new atlas pages are created small as they are highly dynamic\n    const newPage = new AtlasPage(this._document, this._textureSize);\n    this._pages.push(newPage);\n    this._activePages.push(newPage);\n    this._onAddTextureAtlasCanvas.fire(newPage.canvas);\n    return newPage;\n  }\n\n  private _mergePages(mergingPages: AtlasPage[], mergedPageIndex: number): AtlasPage {\n    const mergedSize = mergingPages[0].canvas.width * 2;\n    const mergedPage = new AtlasPage(this._document, mergedSize, mergingPages);\n    for (const [i, p] of mergingPages.entries()) {\n      const xOffset = i * p.canvas.width % mergedSize;\n      const yOffset = Math.floor(i / 2) * p.canvas.height;\n      mergedPage.ctx.drawImage(p.canvas, xOffset, yOffset);\n      for (const g of p.glyphs) {\n        g.texturePage = mergedPageIndex;\n        g.sizeClipSpace.x = g.size.x / mergedSize;\n        g.sizeClipSpace.y = g.size.y / mergedSize;\n        g.texturePosition.x += xOffset;\n        g.texturePosition.y += yOffset;\n        g.texturePositionClipSpace.x = g.texturePosition.x / mergedSize;\n        g.texturePositionClipSpace.y = g.texturePosition.y / mergedSize;\n      }\n\n      this._onRemoveTextureAtlasCanvas.fire(p.canvas);\n\n      // Remove the merging page from active pages if it was there\n      const index = this._activePages.indexOf(p);\n      if (index !== -1) {\n        this._activePages.splice(index, 1);\n      }\n    }\n    return mergedPage;\n  }\n\n  private _deletePage(pageIndex: number): void {\n    this._pages.splice(pageIndex, 1);\n    for (let j = pageIndex; j < this._pages.length; j++) {\n      const adjustingPage = this._pages[j];\n      for (const g of adjustingPage.glyphs) {\n        g.texturePage--;\n      }\n      adjustingPage.version++;\n    }\n  }\n\n  public getRasterizedGlyphCombinedChar(chars: string, bg: number, fg: number, ext: number): IRasterizedGlyph {\n    return this._getFromCacheMap(this._cacheMapCombined, chars, bg, fg, ext);\n  }\n\n  public getRasterizedGlyph(code: number, bg: number, fg: number, ext: number): IRasterizedGlyph {\n    return this._getFromCacheMap(this._cacheMap, code, bg, fg, ext);\n  }\n\n  /**\n   * Gets the glyphs texture coords, drawing the texture if it's not already\n   */\n  private _getFromCacheMap(\n    cacheMap: FourKeyMap<string | number, number, number, number, IRasterizedGlyph>,\n    key: string | number,\n    bg: number,\n    fg: number,\n    ext: number\n  ): IRasterizedGlyph {\n    $glyph = cacheMap.get(key, bg, fg, ext);\n    if (!$glyph) {\n      $glyph = this._drawToCache(key, bg, fg, ext);\n      cacheMap.set(key, bg, fg, ext, $glyph);\n    }\n    return $glyph;\n  }\n\n  private _getColorFromAnsiIndex(idx: number): IColor {\n    if (idx >= this._config.colors.ansi.length) {\n      throw new Error('No color found for idx ' + idx);\n    }\n    return this._config.colors.ansi[idx];\n  }\n\n  private _getBackgroundColor(bgColorMode: number, bgColor: number, inverse: boolean, dim: boolean): IColor {\n    if (this._config.allowTransparency) {\n      // The background color might have some transparency, so we need to render it as fully\n      // transparent in the atlas. Otherwise we'd end up drawing the transparent background twice\n      // around the anti-aliased edges of the glyph, and it would look too dark.\n      return NULL_COLOR;\n    }\n\n    let result: IColor;\n    switch (bgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        result = this._getColorFromAnsiIndex(bgColor);\n        break;\n      case Attributes.CM_RGB:\n        const arr = AttributeData.toColorRGB(bgColor);\n        // TODO: This object creation is slow\n        result = rgba.toColor(arr[0], arr[1], arr[2]);\n        break;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          result = this._config.colors.foreground;\n        } else {\n          result = this._config.colors.background;\n        }\n        break;\n    }\n\n    if (dim) {\n      // Blend here instead of using opacity because transparent colors mess with clipping the\n      // glyph's bounding box\n      result = color.blend(this._config.colors.background, color.multiplyOpacity(result, DIM_OPACITY));\n    }\n\n    return result;\n  }\n\n  private _getForegroundColor(bg: number, bgColorMode: number, bgColor: number, fg: number, fgColorMode: number, fgColor: number, inverse: boolean, dim: boolean, bold: boolean, excludeFromContrastRatioDemands: boolean): IColor {\n    // TODO: Pass dim along to get min contrast?\n    const minimumContrastColor = this._getMinimumContrastColor(bg, bgColorMode, bgColor, fg, fgColorMode, fgColor, false, bold, excludeFromContrastRatioDemands);\n    if (minimumContrastColor) {\n      return minimumContrastColor;\n    }\n\n    let result: IColor;\n    switch (fgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        if (this._config.drawBoldTextInBrightColors && bold && fgColor < 8) {\n          fgColor += 8;\n        }\n        result = this._getColorFromAnsiIndex(fgColor);\n        break;\n      case Attributes.CM_RGB:\n        const arr = AttributeData.toColorRGB(fgColor);\n        result = rgba.toColor(arr[0], arr[1], arr[2]);\n        break;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          result = this._config.colors.background;\n        } else {\n          result = this._config.colors.foreground;\n        }\n    }\n\n    // Always use an opaque color regardless of allowTransparency\n    if (this._config.allowTransparency) {\n      result = color.opaque(result);\n    }\n\n    // Apply dim to the color, opacity is fine to use for the foreground color\n    if (dim) {\n      result = color.multiplyOpacity(result, DIM_OPACITY);\n    }\n\n    return result;\n  }\n\n  private _resolveBackgroundRgba(bgColorMode: number, bgColor: number, inverse: boolean): number {\n    switch (bgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        return this._getColorFromAnsiIndex(bgColor).rgba;\n      case Attributes.CM_RGB:\n        return bgColor << 8;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._config.colors.foreground.rgba;\n        }\n        return this._config.colors.background.rgba;\n    }\n  }\n\n  private _resolveForegroundRgba(fgColorMode: number, fgColor: number, inverse: boolean, bold: boolean): number {\n    switch (fgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        if (this._config.drawBoldTextInBrightColors && bold && fgColor < 8) {\n          fgColor += 8;\n        }\n        return this._getColorFromAnsiIndex(fgColor).rgba;\n      case Attributes.CM_RGB:\n        return fgColor << 8;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._config.colors.background.rgba;\n        }\n        return this._config.colors.foreground.rgba;\n    }\n  }\n\n  private _getMinimumContrastColor(bg: number, bgColorMode: number, bgColor: number, fg: number, fgColorMode: number, fgColor: number, inverse: boolean, bold: boolean, excludeFromContrastRatioDemands: boolean): IColor | undefined {\n    if (this._config.minimumContrastRatio === 1 || excludeFromContrastRatioDemands) {\n      return undefined;\n    }\n\n    // Try get from cache first\n    const adjustedColor = this._config.colors.contrastCache.getColor(bg, fg);\n    if (adjustedColor !== undefined) {\n      return adjustedColor || undefined;\n    }\n\n    const bgRgba = this._resolveBackgroundRgba(bgColorMode, bgColor, inverse);\n    const fgRgba = this._resolveForegroundRgba(fgColorMode, fgColor, inverse, bold);\n    const result = rgba.ensureContrastRatio(bgRgba, fgRgba, this._config.minimumContrastRatio);\n\n    if (!result) {\n      this._config.colors.contrastCache.setColor(bg, fg, null);\n      return undefined;\n    }\n\n    const color = rgba.toColor(\n      (result >> 24) & 0xFF,\n      (result >> 16) & 0xFF,\n      (result >> 8) & 0xFF\n    );\n    this._config.colors.contrastCache.setColor(bg, fg, color);\n\n    return color;\n  }\n\n  private _drawToCache(codeOrChars: number | string, bg: number, fg: number, ext: number): IRasterizedGlyph {\n    const chars = typeof codeOrChars === 'number' ? String.fromCharCode(codeOrChars) : codeOrChars;\n\n    // Uncomment for debugging\n    // console.log(`draw to cache \"${chars}\"`, bg, fg, ext);\n\n    // Allow 1 cell width per character, with a minimum of 2 (CJK), plus some padding. This is used\n    // to draw the glyph to the canvas as well as to restrict the bounding box search to ensure\n    // giant ligatures (eg. =====>) don't impact overall performance.\n    const allowedWidth = this._config.deviceCellWidth * Math.max(chars.length, 2) + TMP_CANVAS_GLYPH_PADDING * 2;\n    if (this._tmpCanvas.width < allowedWidth) {\n      this._tmpCanvas.width = allowedWidth;\n    }\n    // Include line height when drawing glyphs\n    const allowedHeight = this._config.deviceCellHeight + TMP_CANVAS_GLYPH_PADDING * 4;\n    if (this._tmpCanvas.height < allowedHeight) {\n      this._tmpCanvas.height = allowedHeight;\n    }\n    this._tmpCtx.save();\n\n    this._workAttributeData.fg = fg;\n    this._workAttributeData.bg = bg;\n    this._workAttributeData.extended.ext = ext;\n\n    const invisible = !!this._workAttributeData.isInvisible();\n    if (invisible) {\n      return NULL_RASTERIZED_GLYPH;\n    }\n\n    const bold = !!this._workAttributeData.isBold();\n    const inverse = !!this._workAttributeData.isInverse();\n    const dim = !!this._workAttributeData.isDim();\n    const italic = !!this._workAttributeData.isItalic();\n    const underline = !!this._workAttributeData.isUnderline();\n    const strikethrough = !!this._workAttributeData.isStrikethrough();\n    let fgColor = this._workAttributeData.getFgColor();\n    let fgColorMode = this._workAttributeData.getFgColorMode();\n    let bgColor = this._workAttributeData.getBgColor();\n    let bgColorMode = this._workAttributeData.getBgColorMode();\n    if (inverse) {\n      const temp = fgColor;\n      fgColor = bgColor;\n      bgColor = temp;\n      const temp2 = fgColorMode;\n      fgColorMode = bgColorMode;\n      bgColorMode = temp2;\n    }\n\n    // draw the background\n    const backgroundColor = this._getBackgroundColor(bgColorMode, bgColor, inverse, dim);\n    // Use a 'copy' composite operation to clear any existing glyph out of _tmpCtxWithAlpha, regardless of\n    // transparency in backgroundColor\n    this._tmpCtx.globalCompositeOperation = 'copy';\n    this._tmpCtx.fillStyle = backgroundColor.css;\n    this._tmpCtx.fillRect(0, 0, this._tmpCanvas.width, this._tmpCanvas.height);\n    this._tmpCtx.globalCompositeOperation = 'source-over';\n\n    // draw the foreground/glyph\n    const fontWeight = bold ? this._config.fontWeightBold : this._config.fontWeight;\n    const fontStyle = italic ? 'italic' : '';\n    this._tmpCtx.font =\n      `${fontStyle} ${fontWeight} ${this._config.fontSize * this._config.devicePixelRatio}px ${this._config.fontFamily}`;\n    this._tmpCtx.textBaseline = TEXT_BASELINE;\n\n    const powerlineGlyph = chars.length === 1 && isPowerlineGlyph(chars.charCodeAt(0));\n    const restrictedPowerlineGlyph = chars.length === 1 && isRestrictedPowerlineGlyph(chars.charCodeAt(0));\n    const foregroundColor = this._getForegroundColor(bg, bgColorMode, bgColor, fg, fgColorMode, fgColor, inverse, dim, bold, excludeFromContrastRatioDemands(chars.charCodeAt(0)));\n    this._tmpCtx.fillStyle = foregroundColor.css;\n\n    // For powerline glyphs left/top padding is excluded (https://github.com/microsoft/vscode/issues/120129)\n    const padding = restrictedPowerlineGlyph ? 0 : TMP_CANVAS_GLYPH_PADDING * 2;\n\n    // Draw custom characters if applicable\n    let customGlyph = false;\n    if (this._config.customGlyphs !== false) {\n      customGlyph = tryDrawCustomChar(this._tmpCtx, chars, padding, padding, this._config.deviceCellWidth, this._config.deviceCellHeight, this._config.fontSize, this._config.devicePixelRatio);\n    }\n\n    // Whether to clear pixels based on a threshold difference between the glyph color and the\n    // background color. This should be disabled when the glyph contains multiple colors such as\n    // underline colors to prevent important colors could get cleared.\n    let enableClearThresholdCheck = !powerlineGlyph;\n\n    let chWidth: number;\n    if (typeof codeOrChars === 'number') {\n      chWidth = this._unicodeService.wcwidth(codeOrChars);\n    } else {\n      chWidth = this._unicodeService.getStringCellWidth(codeOrChars);\n    }\n\n    // Draw underline\n    if (underline) {\n      this._tmpCtx.save();\n      const lineWidth = Math.max(1, Math.floor(this._config.fontSize * this._config.devicePixelRatio / 15));\n      // When the line width is odd, draw at a 0.5 position\n      const yOffset = lineWidth % 2 === 1 ? 0.5 : 0;\n      this._tmpCtx.lineWidth = lineWidth;\n\n      // Underline color\n      if (this._workAttributeData.isUnderlineColorDefault()) {\n        this._tmpCtx.strokeStyle = this._tmpCtx.fillStyle;\n      } else if (this._workAttributeData.isUnderlineColorRGB()) {\n        enableClearThresholdCheck = false;\n        this._tmpCtx.strokeStyle = `rgb(${AttributeData.toColorRGB(this._workAttributeData.getUnderlineColor()).join(',')})`;\n      } else {\n        enableClearThresholdCheck = false;\n        let fg = this._workAttributeData.getUnderlineColor();\n        if (this._config.drawBoldTextInBrightColors && this._workAttributeData.isBold() && fg < 8) {\n          fg += 8;\n        }\n        this._tmpCtx.strokeStyle = this._getColorFromAnsiIndex(fg).css;\n      }\n\n      // Underline style/stroke\n      this._tmpCtx.beginPath();\n      const xLeft = padding;\n      const yTop = Math.ceil(padding + this._config.deviceCharHeight) - yOffset;\n      const yMid = padding + this._config.deviceCharHeight + lineWidth - yOffset;\n      const yBot = Math.ceil(padding + this._config.deviceCharHeight + lineWidth * 2) - yOffset;\n\n      for (let i = 0; i < chWidth; i++) {\n        this._tmpCtx.save();\n        const xChLeft = xLeft + i * this._config.deviceCellWidth;\n        const xChRight = xLeft + (i + 1) * this._config.deviceCellWidth;\n        const xChMid = xChLeft + this._config.deviceCellWidth / 2;\n        switch (this._workAttributeData.extended.underlineStyle) {\n          case UnderlineStyle.DOUBLE:\n            this._tmpCtx.moveTo(xChLeft, yTop);\n            this._tmpCtx.lineTo(xChRight, yTop);\n            this._tmpCtx.moveTo(xChLeft, yBot);\n            this._tmpCtx.lineTo(xChRight, yBot);\n            break;\n          case UnderlineStyle.CURLY:\n            // Choose the bezier top and bottom based on the device pixel ratio, the curly line is\n            // made taller when the line width is  as otherwise it's not very clear otherwise.\n            const yCurlyBot = lineWidth <= 1 ? yBot : Math.ceil(padding + this._config.deviceCharHeight - lineWidth / 2) - yOffset;\n            const yCurlyTop = lineWidth <= 1 ? yTop : Math.ceil(padding + this._config.deviceCharHeight + lineWidth / 2) - yOffset;\n            // Clip the left and right edges of the underline such that it can be drawn just outside\n            // the edge of the cell to ensure a continuous stroke when there are multiple underlined\n            // glyphs adjacent to one another.\n            const clipRegion = new Path2D();\n            clipRegion.rect(xChLeft, yTop, this._config.deviceCellWidth, yBot - yTop);\n            this._tmpCtx.clip(clipRegion);\n            // Start 1/2 cell before and end 1/2 cells after to ensure a smooth curve with other cells\n            this._tmpCtx.moveTo(xChLeft - this._config.deviceCellWidth / 2, yMid);\n            this._tmpCtx.bezierCurveTo(\n              xChLeft - this._config.deviceCellWidth / 2, yCurlyTop,\n              xChLeft, yCurlyTop,\n              xChLeft, yMid\n            );\n            this._tmpCtx.bezierCurveTo(\n              xChLeft, yCurlyBot,\n              xChMid, yCurlyBot,\n              xChMid, yMid\n            );\n            this._tmpCtx.bezierCurveTo(\n              xChMid, yCurlyTop,\n              xChRight, yCurlyTop,\n              xChRight, yMid\n            );\n            this._tmpCtx.bezierCurveTo(\n              xChRight, yCurlyBot,\n              xChRight + this._config.deviceCellWidth / 2, yCurlyBot,\n              xChRight + this._config.deviceCellWidth / 2, yMid\n            );\n            break;\n          case UnderlineStyle.DOTTED:\n            this._tmpCtx.setLineDash([this._config.devicePixelRatio * 2, this._config.devicePixelRatio]);\n            this._tmpCtx.moveTo(xChLeft, yTop);\n            this._tmpCtx.lineTo(xChRight, yTop);\n            break;\n          case UnderlineStyle.DASHED:\n            this._tmpCtx.setLineDash([this._config.devicePixelRatio * 4, this._config.devicePixelRatio * 3]);\n            this._tmpCtx.moveTo(xChLeft, yTop);\n            this._tmpCtx.lineTo(xChRight, yTop);\n            break;\n          case UnderlineStyle.SINGLE:\n          default:\n            this._tmpCtx.moveTo(xChLeft, yTop);\n            this._tmpCtx.lineTo(xChRight, yTop);\n            break;\n        }\n        this._tmpCtx.stroke();\n        this._tmpCtx.restore();\n      }\n      this._tmpCtx.restore();\n\n      // Draw stroke in the background color for non custom characters in order to give an outline\n      // between the text and the underline. Only do this when font size is >= 12 as the underline\n      // looks odd when the font size is too small\n      if (!customGlyph && this._config.fontSize >= 12) {\n        // This only works when transparency is disabled because it's not clear how to clear stroked\n        // text\n        if (!this._config.allowTransparency && chars !== ' ') {\n          // Measure the text, only draw the stroke if there is a descent beyond an alphabetic text\n          // baseline\n          this._tmpCtx.save();\n          this._tmpCtx.textBaseline = 'alphabetic';\n          const metrics = this._tmpCtx.measureText(chars);\n          this._tmpCtx.restore();\n          if ('actualBoundingBoxDescent' in metrics && metrics.actualBoundingBoxDescent > 0) {\n            // This translates to 1/2 the line width in either direction\n            this._tmpCtx.save();\n            // Clip the region to only draw in valid pixels near the underline to avoid a slight\n            // outline around the whole glyph, as well as additional pixels in the glyph at the top\n            // which would increase GPU memory demands\n            const clipRegion = new Path2D();\n            clipRegion.rect(xLeft, yTop - Math.ceil(lineWidth / 2), this._config.deviceCellWidth, yBot - yTop + Math.ceil(lineWidth / 2));\n            this._tmpCtx.clip(clipRegion);\n            this._tmpCtx.lineWidth = this._config.devicePixelRatio * 3;\n            this._tmpCtx.strokeStyle = backgroundColor.css;\n            this._tmpCtx.strokeText(chars, padding, padding + this._config.deviceCharHeight);\n            this._tmpCtx.restore();\n          }\n        }\n      }\n    }\n\n    // Draw the character\n    if (!customGlyph) {\n      this._tmpCtx.fillText(chars, padding, padding + this._config.deviceCharHeight);\n    }\n\n    // If this charcater is underscore and beyond the cell bounds, shift it up until it is visible\n    // even on the bottom row, try for a maximum of 5 pixels.\n    if (chars === '_' && !this._config.allowTransparency) {\n      let isBeyondCellBounds = clearColor(this._tmpCtx.getImageData(padding, padding, this._config.deviceCellWidth, this._config.deviceCellHeight), backgroundColor, foregroundColor, enableClearThresholdCheck);\n      if (isBeyondCellBounds) {\n        for (let offset = 1; offset <= 5; offset++) {\n          this._tmpCtx.save();\n          this._tmpCtx.fillStyle = backgroundColor.css;\n          this._tmpCtx.fillRect(0, 0, this._tmpCanvas.width, this._tmpCanvas.height);\n          this._tmpCtx.restore();\n          this._tmpCtx.fillText(chars, padding, padding + this._config.deviceCharHeight - offset);\n          isBeyondCellBounds = clearColor(this._tmpCtx.getImageData(padding, padding, this._config.deviceCellWidth, this._config.deviceCellHeight), backgroundColor, foregroundColor, enableClearThresholdCheck);\n          if (!isBeyondCellBounds) {\n            break;\n          }\n        }\n      }\n    }\n\n    // Draw strokethrough\n    if (strikethrough) {\n      const lineWidth = Math.max(1, Math.floor(this._config.fontSize * this._config.devicePixelRatio / 10));\n      const yOffset = this._tmpCtx.lineWidth % 2 === 1 ? 0.5 : 0; // When the width is odd, draw at 0.5 position\n      this._tmpCtx.lineWidth = lineWidth;\n      this._tmpCtx.strokeStyle = this._tmpCtx.fillStyle;\n      this._tmpCtx.beginPath();\n      this._tmpCtx.moveTo(padding, padding + Math.floor(this._config.deviceCharHeight / 2) - yOffset);\n      this._tmpCtx.lineTo(padding + this._config.deviceCharWidth * chWidth, padding + Math.floor(this._config.deviceCharHeight / 2) - yOffset);\n      this._tmpCtx.stroke();\n    }\n\n    this._tmpCtx.restore();\n\n    // clear the background from the character to avoid issues with drawing over the previous\n    // character if it extends past it's bounds\n    const imageData = this._tmpCtx.getImageData(\n      0, 0, this._tmpCanvas.width, this._tmpCanvas.height\n    );\n\n    // Clear out the background color and determine if the glyph is empty.\n    let isEmpty: boolean;\n    if (!this._config.allowTransparency) {\n      isEmpty = clearColor(imageData, backgroundColor, foregroundColor, enableClearThresholdCheck);\n    } else {\n      isEmpty = checkCompletelyTransparent(imageData);\n    }\n\n    // Handle empty glyphs\n    if (isEmpty) {\n      return NULL_RASTERIZED_GLYPH;\n    }\n\n    const rasterizedGlyph = this._findGlyphBoundingBox(imageData, this._workBoundingBox, allowedWidth, restrictedPowerlineGlyph, customGlyph, padding);\n\n    // Find the best atlas row to use\n    let activePage: AtlasPage;\n    let activeRow: ICharAtlasActiveRow;\n    while (true) {\n      // If there are no active pages (the last smallest 4 were merged), create a new one\n      if (this._activePages.length === 0) {\n        const newPage = this._createNewPage();\n        activePage = newPage;\n        activeRow = newPage.currentRow;\n        activeRow.height = rasterizedGlyph.size.y;\n        break;\n      }\n\n      // Get the best current row from all active pages\n      activePage = this._activePages[this._activePages.length - 1];\n      activeRow = activePage.currentRow;\n      for (const p of this._activePages) {\n        if (rasterizedGlyph.size.y <= p.currentRow.height) {\n          activePage = p;\n          activeRow = p.currentRow;\n        }\n      }\n\n      // TODO: This algorithm could be simplified:\n      // - Search for the page with ROW_PIXEL_THRESHOLD in mind\n      // - Keep track of current/fixed rows in a Map\n\n      // Replace the best current row with a fixed row if there is one at least as good as the\n      // current row. Search in reverse to prioritize filling in older pages.\n      for (let i = this._activePages.length - 1; i >= 0; i--) {\n        for (const row of this._activePages[i].fixedRows) {\n          if (row.height <= activeRow.height && rasterizedGlyph.size.y <= row.height) {\n            activePage = this._activePages[i];\n            activeRow = row;\n          }\n        }\n      }\n\n      // Create a new one if too much vertical space would be wasted or there is not enough room\n      // left in the page. The previous active row will become fixed in the process as it now has a\n      // fixed height\n      if (activeRow.y + rasterizedGlyph.size.y >= activePage.canvas.height || activeRow.height > rasterizedGlyph.size.y + Constants.ROW_PIXEL_THRESHOLD) {\n        // Create the new fixed height row, creating a new page if there isn't enough room on the\n        // current page\n        let wasNewPageCreated = false;\n        if (activePage.currentRow.y + activePage.currentRow.height + rasterizedGlyph.size.y >= activePage.canvas.height) {\n          // Find the first page with room to create the new row on\n          let candidatePage: AtlasPage | undefined;\n          for (const p of this._activePages) {\n            if (p.currentRow.y + p.currentRow.height + rasterizedGlyph.size.y < p.canvas.height) {\n              candidatePage = p;\n              break;\n            }\n          }\n          if (candidatePage) {\n            activePage = candidatePage;\n          } else {\n            // Create a new page if there is no room\n            const newPage = this._createNewPage();\n            activePage = newPage;\n            activeRow = newPage.currentRow;\n            activeRow.height = rasterizedGlyph.size.y;\n            wasNewPageCreated = true;\n          }\n        }\n        if (!wasNewPageCreated) {\n          // Fix the current row as the new row is being added below\n          if (activePage.currentRow.height > 0) {\n            activePage.fixedRows.push(activePage.currentRow);\n          }\n          activeRow = {\n            x: 0,\n            y: activePage.currentRow.y + activePage.currentRow.height,\n            height: rasterizedGlyph.size.y\n          };\n          activePage.fixedRows.push(activeRow);\n\n          // Create the new current row below the new fixed height row\n          activePage.currentRow = {\n            x: 0,\n            y: activeRow.y + activeRow.height,\n            height: 0\n          };\n        }\n        // TODO: Remove pages from _activePages when all rows are filled\n      }\n\n      // Exit the loop if there is enough room in the row\n      if (activeRow.x + rasterizedGlyph.size.x <= activePage.canvas.width) {\n        break;\n      }\n\n      // If there is not enough room in the current row, finish it and try again\n      if (activeRow === activePage.currentRow) {\n        activeRow.x = 0;\n        activeRow.y += activeRow.height;\n        activeRow.height = 0;\n      } else {\n        activePage.fixedRows.splice(activePage.fixedRows.indexOf(activeRow), 1);\n      }\n    }\n\n    // Record texture position\n    rasterizedGlyph.texturePage = this._pages.indexOf(activePage);\n    rasterizedGlyph.texturePosition.x = activeRow.x;\n    rasterizedGlyph.texturePosition.y = activeRow.y;\n    rasterizedGlyph.texturePositionClipSpace.x = activeRow.x / activePage.canvas.width;\n    rasterizedGlyph.texturePositionClipSpace.y = activeRow.y / activePage.canvas.height;\n\n    // Fix the clipspace position as pages may be of differing size\n    rasterizedGlyph.sizeClipSpace.x /= activePage.canvas.width;\n    rasterizedGlyph.sizeClipSpace.y /= activePage.canvas.height;\n\n    // Update atlas current row, for fixed rows the glyph height will never be larger than the row\n    // height\n    activeRow.height = Math.max(activeRow.height, rasterizedGlyph.size.y);\n    activeRow.x += rasterizedGlyph.size.x;\n\n    // putImageData doesn't do any blending, so it will overwrite any existing cache entry for us\n    activePage.ctx.putImageData(\n      imageData,\n      rasterizedGlyph.texturePosition.x - this._workBoundingBox.left,\n      rasterizedGlyph.texturePosition.y - this._workBoundingBox.top,\n      this._workBoundingBox.left,\n      this._workBoundingBox.top,\n      rasterizedGlyph.size.x,\n      rasterizedGlyph.size.y\n    );\n    activePage.addGlyph(rasterizedGlyph);\n    activePage.version++;\n\n    return rasterizedGlyph;\n  }\n\n  /**\n   * Given an ImageData object, find the bounding box of the non-transparent\n   * portion of the texture and return an IRasterizedGlyph with these\n   * dimensions.\n   * @param imageData The image data to read.\n   * @param boundingBox An IBoundingBox to put the clipped bounding box values.\n   */\n  private _findGlyphBoundingBox(imageData: ImageData, boundingBox: IBoundingBox, allowedWidth: number, restrictedGlyph: boolean, customGlyph: boolean, padding: number): IRasterizedGlyph {\n    boundingBox.top = 0;\n    const height = restrictedGlyph ? this._config.deviceCellHeight : this._tmpCanvas.height;\n    const width = restrictedGlyph ? this._config.deviceCellWidth : allowedWidth;\n    let found = false;\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        const alphaOffset = y * this._tmpCanvas.width * 4 + x * 4 + 3;\n        if (imageData.data[alphaOffset] !== 0) {\n          boundingBox.top = y;\n          found = true;\n          break;\n        }\n      }\n      if (found) {\n        break;\n      }\n    }\n    boundingBox.left = 0;\n    found = false;\n    for (let x = 0; x < padding + width; x++) {\n      for (let y = 0; y < height; y++) {\n        const alphaOffset = y * this._tmpCanvas.width * 4 + x * 4 + 3;\n        if (imageData.data[alphaOffset] !== 0) {\n          boundingBox.left = x;\n          found = true;\n          break;\n        }\n      }\n      if (found) {\n        break;\n      }\n    }\n    boundingBox.right = width;\n    found = false;\n    for (let x = padding + width - 1; x >= padding; x--) {\n      for (let y = 0; y < height; y++) {\n        const alphaOffset = y * this._tmpCanvas.width * 4 + x * 4 + 3;\n        if (imageData.data[alphaOffset] !== 0) {\n          boundingBox.right = x;\n          found = true;\n          break;\n        }\n      }\n      if (found) {\n        break;\n      }\n    }\n    boundingBox.bottom = height;\n    found = false;\n    for (let y = height - 1; y >= 0; y--) {\n      for (let x = 0; x < width; x++) {\n        const alphaOffset = y * this._tmpCanvas.width * 4 + x * 4 + 3;\n        if (imageData.data[alphaOffset] !== 0) {\n          boundingBox.bottom = y;\n          found = true;\n          break;\n        }\n      }\n      if (found) {\n        break;\n      }\n    }\n    return {\n      texturePage: 0,\n      texturePosition: { x: 0, y: 0 },\n      texturePositionClipSpace: { x: 0, y: 0 },\n      size: {\n        x: boundingBox.right - boundingBox.left + 1,\n        y: boundingBox.bottom - boundingBox.top + 1\n      },\n      sizeClipSpace: {\n        x: (boundingBox.right - boundingBox.left + 1),\n        y: (boundingBox.bottom - boundingBox.top + 1)\n      },\n      offset: {\n        x: -boundingBox.left + padding + ((restrictedGlyph || customGlyph) ? Math.floor((this._config.deviceCellWidth - this._config.deviceCharWidth) / 2) : 0),\n        y: -boundingBox.top + padding + ((restrictedGlyph || customGlyph) ? this._config.lineHeight === 1 ? 0 : Math.round((this._config.deviceCellHeight - this._config.deviceCharHeight) / 2) : 0)\n      }\n    };\n  }\n}\n\nclass AtlasPage {\n  public readonly canvas: HTMLCanvasElement;\n  public readonly ctx: CanvasRenderingContext2D;\n\n  private _usedPixels: number = 0;\n  public get percentageUsed(): number { return this._usedPixels / (this.canvas.width * this.canvas.height); }\n\n  private readonly _glyphs: IRasterizedGlyph[] = [];\n  public get glyphs(): ReadonlyArray<IRasterizedGlyph> { return this._glyphs; }\n  public addGlyph(glyph: IRasterizedGlyph): void {\n    this._glyphs.push(glyph);\n    this._usedPixels += glyph.size.x * glyph.size.y;\n  }\n\n  /**\n   * Used to check whether the canvas of the atlas page has changed.\n   */\n  public version = 0;\n\n  // Texture atlas current positioning data. The texture packing strategy used is to fill from\n  // left-to-right and top-to-bottom. When the glyph being written is less than half of the current\n  // row's height, the following happens:\n  //\n  // - The current row becomes the fixed height row A\n  // - A new fixed height row B the exact size of the glyph is created below the current row\n  // - A new dynamic height current row is created below B\n  //\n  // This strategy does a good job preventing space being wasted for very short glyphs such as\n  // underscores, hyphens etc. or those with underlines rendered.\n  public currentRow: ICharAtlasActiveRow = {\n    x: 0,\n    y: 0,\n    height: 0\n  };\n  public readonly fixedRows: ICharAtlasActiveRow[] = [];\n\n  constructor(\n    document: Document,\n    size: number,\n    sourcePages?: AtlasPage[]\n  ) {\n    if (sourcePages) {\n      for (const p of sourcePages) {\n        this._glyphs.push(...p.glyphs);\n        this._usedPixels += p._usedPixels;\n      }\n    }\n    this.canvas = createCanvas(document, size, size);\n    // The canvas needs alpha because we use clearColor to convert the background color to alpha.\n    // It might also contain some characters with transparent backgrounds if allowTransparency is\n    // set.\n    this.ctx = throwIfFalsy(this.canvas.getContext('2d', { alpha: true }));\n  }\n\n  public clear(): void {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    this.currentRow.x = 0;\n    this.currentRow.y = 0;\n    this.currentRow.height = 0;\n    this.fixedRows.length = 0;\n    this.version++;\n  }\n}\n\n/**\n * Makes a particular rgb color and colors that are nearly the same in an ImageData completely\n * transparent.\n * @returns True if the result is \"empty\", meaning all pixels are fully transparent.\n */\nfunction clearColor(imageData: ImageData, bg: IColor, fg: IColor, enableThresholdCheck: boolean): boolean {\n  // Get color channels\n  const r = bg.rgba >>> 24;\n  const g = bg.rgba >>> 16 & 0xFF;\n  const b = bg.rgba >>> 8 & 0xFF;\n  const fgR = fg.rgba >>> 24;\n  const fgG = fg.rgba >>> 16 & 0xFF;\n  const fgB = fg.rgba >>> 8 & 0xFF;\n\n  // Calculate a threshold that when below a color will be treated as transpart when the sum of\n  // channel value differs. This helps improve rendering when glyphs overlap with others. This\n  // threshold is calculated relative to the difference between the background and foreground to\n  // ensure important details of the glyph are always shown, even when the contrast ratio is low.\n  // The number 12 is largely arbitrary to ensure the pixels that escape the cell in the test case\n  // were covered (fg=#8ae234, bg=#c4a000).\n  const threshold = Math.floor((Math.abs(r - fgR) + Math.abs(g - fgG) + Math.abs(b - fgB)) / 12);\n\n  // Set alpha channel of relevent pixels to 0\n  let isEmpty = true;\n  for (let offset = 0; offset < imageData.data.length; offset += 4) {\n    // Check exact match\n    if (imageData.data[offset] === r &&\n        imageData.data[offset + 1] === g &&\n        imageData.data[offset + 2] === b) {\n      imageData.data[offset + 3] = 0;\n    } else {\n      // Check the threshold based difference\n      if (enableThresholdCheck &&\n          (Math.abs(imageData.data[offset] - r) +\n          Math.abs(imageData.data[offset + 1] - g) +\n          Math.abs(imageData.data[offset + 2] - b)) < threshold) {\n        imageData.data[offset + 3] = 0;\n      } else {\n        isEmpty = false;\n      }\n    }\n  }\n\n  return isEmpty;\n}\n\nfunction checkCompletelyTransparent(imageData: ImageData): boolean {\n  for (let offset = 0; offset < imageData.data.length; offset += 4) {\n    if (imageData.data[offset + 3] > 0) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction createCanvas(document: Document, width: number, height: number): HTMLCanvasElement {\n  const canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  return canvas;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\nimport { IColor, IColorRGB } from 'common/Types';\n\nlet $r = 0;\nlet $g = 0;\nlet $b = 0;\nlet $a = 0;\n\nexport const NULL_COLOR: IColor = {\n  css: '#00000000',\n  rgba: 0\n};\n\n/**\n * Helper functions where the source type is \"channels\" (individual color channels as numbers).\n */\nexport namespace channels {\n  export function toCss(r: number, g: number, b: number, a?: number): string {\n    if (a !== undefined) {\n      return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}${toPaddedHex(a)}`;\n    }\n    return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n  }\n\n  export function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n    // Note: The aggregated number is RGBA32 (BE), thus needs to be converted to ABGR32\n    // on LE systems, before it can be used for direct 32-bit buffer writes.\n    // >>> 0 forces an unsigned int\n    return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n  }\n}\n\n/**\n * Helper functions where the source type is `IColor`.\n */\nexport namespace color {\n  export function blend(bg: IColor, fg: IColor): IColor {\n    $a = (fg.rgba & 0xFF) / 255;\n    if ($a === 1) {\n      return {\n        css: fg.css,\n        rgba: fg.rgba\n      };\n    }\n    const fgR = (fg.rgba >> 24) & 0xFF;\n    const fgG = (fg.rgba >> 16) & 0xFF;\n    const fgB = (fg.rgba >> 8) & 0xFF;\n    const bgR = (bg.rgba >> 24) & 0xFF;\n    const bgG = (bg.rgba >> 16) & 0xFF;\n    const bgB = (bg.rgba >> 8) & 0xFF;\n    $r = bgR + Math.round((fgR - bgR) * $a);\n    $g = bgG + Math.round((fgG - bgG) * $a);\n    $b = bgB + Math.round((fgB - bgB) * $a);\n    const css = channels.toCss($r, $g, $b);\n    const rgba = channels.toRgba($r, $g, $b);\n    return { css, rgba };\n  }\n\n  export function isOpaque(color: IColor): boolean {\n    return (color.rgba & 0xFF) === 0xFF;\n  }\n\n  export function ensureContrastRatio(bg: IColor, fg: IColor, ratio: number): IColor | undefined {\n    const result = rgba.ensureContrastRatio(bg.rgba, fg.rgba, ratio);\n    if (!result) {\n      return undefined;\n    }\n    return rgba.toColor(\n      (result >> 24 & 0xFF),\n      (result >> 16 & 0xFF),\n      (result >> 8  & 0xFF)\n    );\n  }\n\n  export function opaque(color: IColor): IColor {\n    const rgbaColor = (color.rgba | 0xFF) >>> 0;\n    [$r, $g, $b] = rgba.toChannels(rgbaColor);\n    return {\n      css: channels.toCss($r, $g, $b),\n      rgba: rgbaColor\n    };\n  }\n\n  export function opacity(color: IColor, opacity: number): IColor {\n    $a = Math.round(opacity * 0xFF);\n    [$r, $g, $b] = rgba.toChannels(color.rgba);\n    return {\n      css: channels.toCss($r, $g, $b, $a),\n      rgba: channels.toRgba($r, $g, $b, $a)\n    };\n  }\n\n  export function multiplyOpacity(color: IColor, factor: number): IColor {\n    $a = color.rgba & 0xFF;\n    return opacity(color, ($a * factor) / 0xFF);\n  }\n\n  export function toColorRGB(color: IColor): IColorRGB {\n    return [(color.rgba >> 24) & 0xFF, (color.rgba >> 16) & 0xFF, (color.rgba >> 8) & 0xFF];\n  }\n}\n\n/**\n * Helper functions where the source type is \"css\" (string: '#rgb', '#rgba', '#rrggbb', '#rrggbbaa').\n */\nexport namespace css {\n  let $ctx: CanvasRenderingContext2D | undefined;\n  let $litmusColor: CanvasGradient | undefined;\n  if (!isNode) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d', {\n      willReadFrequently: true\n    });\n    if (ctx) {\n      $ctx = ctx;\n      $ctx.globalCompositeOperation = 'copy';\n      $litmusColor = $ctx.createLinearGradient(0, 0, 1, 1);\n    }\n  }\n\n  /**\n   * Converts a css string to an IColor, this should handle all valid CSS color strings and will\n   * throw if it's invalid. The ideal format to use is `#rrggbb[aa]` as it's the fastest to parse.\n   *\n   * Only `#rgb[a]`, `#rrggbb[aa]`, `rgb()` and `rgba()` formats are supported when run in a Node\n   * environment.\n   */\n  export function toColor(css: string): IColor {\n    // Formats: #rgb[a] and #rrggbb[aa]\n    if (css.match(/#[\\da-f]{3,8}/i)) {\n      switch (css.length) {\n        case 4: { // #rgb\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          return rgba.toColor($r, $g, $b);\n        }\n        case 5: { // #rgba\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          $a = parseInt(css.slice(4, 5).repeat(2), 16);\n          return rgba.toColor($r, $g, $b, $a);\n        }\n        case 7: // #rrggbb\n          return {\n            css,\n            rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n          };\n        case 9: // #rrggbbaa\n          return {\n            css,\n            rgba: parseInt(css.slice(1), 16) >>> 0\n          };\n      }\n    }\n\n    // Formats: rgb() or rgba()\n    const rgbaMatch = css.match(/rgba?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*(,\\s*(0|1|\\d?\\.(\\d+))\\s*)?\\)/);\n    if (rgbaMatch) {\n      $r = parseInt(rgbaMatch[1]);\n      $g = parseInt(rgbaMatch[2]);\n      $b = parseInt(rgbaMatch[3]);\n      $a = Math.round((rgbaMatch[5] === undefined ? 1 : parseFloat(rgbaMatch[5])) * 0xFF);\n      return rgba.toColor($r, $g, $b, $a);\n    }\n\n    // Validate the context is available for canvas-based color parsing\n    if (!$ctx || !$litmusColor) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Validate the color using canvas fillStyle\n    // See https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    $ctx.fillStyle = $litmusColor;\n    $ctx.fillStyle = css;\n    if (typeof $ctx.fillStyle !== 'string') {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    $ctx.fillRect(0, 0, 1, 1);\n    [$r, $g, $b, $a] = $ctx.getImageData(0, 0, 1, 1).data;\n\n    // Validate the color is non-transparent as color hue gets lost when drawn to the canvas\n    if ($a !== 0xFF) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Extract the color from the canvas' fillStyle property which exposes the color value in rgba()\n    // format\n    // See https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n    return {\n      rgba: channels.toRgba($r, $g, $b, $a),\n      css\n    };\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgb\" (number: 0xrrggbb).\n */\nexport namespace rgb {\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param rgb The color to use.\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance(rgb: number): number {\n    return relativeLuminance2(\n      (rgb >> 16) & 0xFF,\n      (rgb >> 8 ) & 0xFF,\n      (rgb      ) & 0xFF);\n  }\n\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param r The red channel (0x00 to 0xFF).\n   * @param g The green channel (0x00 to 0xFF).\n   * @param b The blue channel (0x00 to 0xFF).\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance2(r: number, g: number, b: number): number {\n    const rs = r / 255;\n    const gs = g / 255;\n    const bs = b / 255;\n    const rr = rs <= 0.03928 ? rs / 12.92 : Math.pow((rs + 0.055) / 1.055, 2.4);\n    const rg = gs <= 0.03928 ? gs / 12.92 : Math.pow((gs + 0.055) / 1.055, 2.4);\n    const rb = bs <= 0.03928 ? bs / 12.92 : Math.pow((bs + 0.055) / 1.055, 2.4);\n    return rr * 0.2126 + rg * 0.7152 + rb * 0.0722;\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgba\" (number: 0xrrggbbaa).\n */\nexport namespace rgba {\n  /**\n   * Given a foreground color and a background color, either increase or reduce the luminance of the\n   * foreground color until the specified contrast ratio is met. If pure white or black is hit\n   * without the contrast ratio being met, go the other direction using the background color as the\n   * foreground color and take either the first or second result depending on which has the higher\n   * contrast ratio.\n   *\n   * `undefined` will be returned if the contrast ratio is already met.\n   *\n   * @param bgRgba The background color in rgba format.\n   * @param fgRgba The foreground color in rgba format.\n   * @param ratio The contrast ratio to achieve.\n   */\n  export function ensureContrastRatio(bgRgba: number, fgRgba: number, ratio: number): number | undefined {\n    const bgL = rgb.relativeLuminance(bgRgba >> 8);\n    const fgL = rgb.relativeLuminance(fgRgba >> 8);\n    const cr = contrastRatio(bgL, fgL);\n    if (cr < ratio) {\n      if (fgL < bgL) {\n        const resultA = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n        if (resultARatio < ratio) {\n          const resultB = increaseLuminance(bgRgba, fgRgba, ratio);\n          const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n          return resultARatio > resultBRatio ? resultA : resultB;\n        }\n        return resultA;\n      }\n      const resultA = increaseLuminance(bgRgba, fgRgba, ratio);\n      const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n      if (resultARatio < ratio) {\n        const resultB = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n        return resultARatio > resultBRatio ? resultA : resultB;\n      }\n      return resultA;\n    }\n    return undefined;\n  }\n\n  export function reduceLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to reducing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n      // Reduce by 10% until the ratio is hit\n      fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n      fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n      fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function increaseLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to increasing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n      // Increase by 10% until the ratio is hit\n      fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n      fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n      fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  // FIXME: Move this to channels NS?\n  export function toChannels(value: number): [number, number, number, number] {\n    return [(value >> 24) & 0xFF, (value >> 16) & 0xFF, (value >> 8) & 0xFF, value & 0xFF];\n  }\n\n  export function toColor(r: number, g: number, b: number, a?: number): IColor {\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Gets the contrast ratio between two relative luminance values.\n * @param l1 The first relative luminance.\n * @param l2 The first relative luminance.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function contrastRatio(l1: number, l2: number): number {\n  if (l1 < l2) {\n    return (l2 + 0.05) / (l1 + 0.05);\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n    this._disposed = true;\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  constructor() {\n  }\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    for (const d of this._disposables) {\n      d.dispose();\n    }\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   * @returns The disposable.\n   */\n  public register<T extends IDisposable>(d: T): T {\n    this._disposables.push(d);\n    return d;\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n\n/**\n * Wrap a function in a disposable.\n */\nexport function toDisposable(f: () => void): IDisposable {\n  return { dispose: f };\n}\n\n/**\n * Dispose of all disposables in an array and set its length to 0.\n */\nexport function disposeArray(disposables: IDisposable[]): void {\n  for (const d of disposables) {\n    d.dispose();\n  }\n  disposables.length = 0;\n}\n\n/**\n * Creates a disposable that will dispose of an array of disposables when disposed.\n */\nexport function getDisposeArrayDisposable(array: IDisposable[]): IDisposable {\n  return { dispose: () => disposeArray(array) };\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class TwoKeyMap<TFirst extends string | number, TSecond extends string | number, TValue> {\n  private _data: { [bg: string | number]: { [fg: string | number]: TValue | undefined } | undefined } = {};\n\n  public set(first: TFirst, second: TSecond, value: TValue): void {\n    if (!this._data[first]) {\n      this._data[first] = {};\n    }\n    this._data[first as string | number]![second] = value;\n  }\n\n  public get(first: TFirst, second: TSecond): TValue | undefined {\n    return this._data[first as string | number] ? this._data[first as string | number]![second] : undefined;\n  }\n\n  public clear(): void {\n    this._data = {};\n  }\n}\n\nexport class FourKeyMap<TFirst extends string | number, TSecond extends string | number, TThird extends string | number, TFourth extends string | number, TValue> {\n  private _data: TwoKeyMap<TFirst, TSecond, TwoKeyMap<TThird, TFourth, TValue>> = new TwoKeyMap();\n\n  public set(first: TFirst, second: TSecond, third: TThird, fourth: TFourth, value: TValue): void {\n    if (!this._data.get(first, second)) {\n      this._data.set(first, second, new TwoKeyMap());\n    }\n    this._data.get(first, second)!.set(third, fourth, value);\n  }\n\n  public get(first: TFirst, second: TSecond, third: TThird, fourth: TFourth): TValue | undefined {\n    return this._data.get(first, second)?.get(third, fourth);\n  }\n\n  public clear(): void {\n    this._data.clear();\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nexport const isNode = (typeof navigator === 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = userAgent.includes('Firefox');\nexport const isLegacyEdge = userAgent.includes('Edge');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\nexport function getSafariVersion(): number {\n  if (!isSafari) {\n    return 0;\n  }\n  const majorVersion = userAgent.match(/Version\\/(\\d+)/);\n  if (majorVersion === null || majorVersion.length < 2) {\n    return 0;\n  }\n  return parseInt(majorVersion[1]);\n}\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'].includes(platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = ['Windows', 'Win16', 'Win32', 'WinCE'].includes(platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n// Note that when this is true, isLinux will also be true.\nexport const isChromeOS = /\\bCrOS\\b/.test(userAgent);\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\n\ninterface ITaskQueue {\n  /**\n   * Adds a task to the queue which will run in a future idle callback.\n   * To avoid perceivable stalls on the mainthread, tasks with heavy workload\n   * should split their work into smaller pieces and return `true` to get\n   * called again until the work is done (on falsy return value).\n   */\n  enqueue(task: () => boolean | void): void;\n\n  /**\n   * Flushes the queue, running all remaining tasks synchronously.\n   */\n  flush(): void;\n\n  /**\n   * Clears any remaining tasks from the queue, these will not be run.\n   */\n  clear(): void;\n}\n\ninterface ITaskDeadline {\n  timeRemaining(): number;\n}\ntype CallbackWithDeadline = (deadline: ITaskDeadline) => void;\n\nabstract class TaskQueue implements ITaskQueue {\n  private _tasks: (() => boolean | void)[] = [];\n  private _idleCallback?: number;\n  private _i = 0;\n\n  protected abstract _requestCallback(callback: CallbackWithDeadline): number;\n  protected abstract _cancelCallback(identifier: number): void;\n\n  public enqueue(task: () => boolean | void): void {\n    this._tasks.push(task);\n    this._start();\n  }\n\n  public flush(): void {\n    while (this._i < this._tasks.length) {\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n    }\n    this.clear();\n  }\n\n  public clear(): void {\n    if (this._idleCallback) {\n      this._cancelCallback(this._idleCallback);\n      this._idleCallback = undefined;\n    }\n    this._i = 0;\n    this._tasks.length = 0;\n  }\n\n  private _start(): void {\n    if (!this._idleCallback) {\n      this._idleCallback = this._requestCallback(this._process.bind(this));\n    }\n  }\n\n  private _process(deadline: ITaskDeadline): void {\n    this._idleCallback = undefined;\n    let taskDuration = 0;\n    let longestTask = 0;\n    let lastDeadlineRemaining = deadline.timeRemaining();\n    let deadlineRemaining = 0;\n    while (this._i < this._tasks.length) {\n      taskDuration = Date.now();\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n      // other than performance.now, Date.now might not be stable (changes on wall clock changes),\n      // this is not an issue here as a clock change during a short running task is very unlikely\n      // in case it still happened and leads to negative duration, simply assume 1 msec\n      taskDuration = Math.max(1, Date.now() - taskDuration);\n      longestTask = Math.max(taskDuration, longestTask);\n      // Guess the following task will take a similar time to the longest task in this batch, allow\n      // additional room to try avoid exceeding the deadline\n      deadlineRemaining = deadline.timeRemaining();\n      if (longestTask * 1.5 > deadlineRemaining) {\n        // Warn when the time exceeding the deadline is over 20ms, if this happens in practice the\n        // task should be split into sub-tasks to ensure the UI remains responsive.\n        if (lastDeadlineRemaining - taskDuration < -20) {\n          console.warn(`task queue exceeded allotted deadline by ${Math.abs(Math.round(lastDeadlineRemaining - taskDuration))}ms`);\n        }\n        this._start();\n        return;\n      }\n      lastDeadlineRemaining = deadlineRemaining;\n    }\n    this.clear();\n  }\n}\n\n/**\n * A queue of that runs tasks over several tasks via setTimeout, trying to maintain above 60 frames\n * per second. The tasks will run in the order they are enqueued, but they will run some time later,\n * and care should be taken to ensure they're non-urgent and will not introduce race conditions.\n */\nexport class PriorityTaskQueue extends TaskQueue {\n  protected _requestCallback(callback: CallbackWithDeadline): number {\n    return setTimeout(() => callback(this._createDeadline(16)));\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    clearTimeout(identifier);\n  }\n\n  private _createDeadline(duration: number): ITaskDeadline {\n    const end = Date.now() + duration;\n    return {\n      timeRemaining: () => Math.max(0, end - Date.now())\n    };\n  }\n}\n\nclass IdleTaskQueueInternal extends TaskQueue {\n  protected _requestCallback(callback: IdleRequestCallback): number {\n    return requestIdleCallback(callback);\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    cancelIdleCallback(identifier);\n  }\n}\n\n/**\n * A queue of that runs tasks over several idle callbacks, trying to respect the idle callback's\n * deadline given by the environment. The tasks will run in the order they are enqueued, but they\n * will run some time later, and care should be taken to ensure they're non-urgent and will not\n * introduce race conditions.\n *\n * This reverts to a {@link PriorityTaskQueue} if the environment does not support idle callbacks.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const IdleTaskQueue = (!isNode && 'requestIdleCallback' in window) ? IdleTaskQueueInternal : PriorityTaskQueue;\n\n/**\n * An object that tracks a single debounced task that will run on the next idle frame. When called\n * multiple times, only the last set task will run.\n */\nexport class DebouncedIdleTask {\n  private _queue: ITaskQueue;\n\n  constructor() {\n    this._queue = new IdleTaskQueue();\n  }\n\n  public set(task: () => boolean | void): void {\n    this._queue.clear();\n    this._queue.enqueue(task);\n  }\n\n  public flush(): void {\n    this._queue.flush();\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB, IExtendedAttrs } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags, UnderlineStyle, ExtFlags } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  public static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n\n  public static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    newObj.extended = this.extended.clone();\n    return newObj;\n  }\n\n  // data\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n\n  // flags\n  public isInverse(): number       { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number          { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number     {\n    if (this.hasExtendedAttrs() && this.extended.underlineStyle !== UnderlineStyle.NONE) {\n      return 1;\n    }\n    return this.fg & FgFlags.UNDERLINE;\n  }\n  public isBlink(): number         { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number     { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number        { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number           { return this.bg & BgFlags.DIM; }\n  public isStrikethrough(): number { return this.fg & FgFlags.STRIKETHROUGH; }\n  public isProtected(): number     { return this.bg & BgFlags.PROTECTED; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n  public isAttributeDefault(): boolean { return this.fg === 0 && this.bg === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n\n  // extended attrs\n  public hasExtendedAttrs(): number {\n    return this.bg & BgFlags.HAS_EXTENDED;\n  }\n  public updateExtended(): void {\n    if (this.extended.isEmpty()) {\n      this.bg &= ~BgFlags.HAS_EXTENDED;\n    } else {\n      this.bg |= BgFlags.HAS_EXTENDED;\n    }\n  }\n  public getUnderlineColor(): number {\n    if ((this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor) {\n      switch (this.extended.underlineColor & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:  return this.extended.underlineColor & Attributes.PCOLOR_MASK;\n        case Attributes.CM_RGB:   return this.extended.underlineColor & Attributes.RGB_MASK;\n        default:                  return this.getFgColor();\n      }\n    }\n    return this.getFgColor();\n  }\n  public getUnderlineColorMode(): number {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? this.extended.underlineColor & Attributes.CM_MASK\n      : this.getFgColorMode();\n  }\n  public isUnderlineColorRGB(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_RGB\n      : this.isFgRGB();\n  }\n  public isUnderlineColorPalette(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P16\n          || (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P256\n      : this.isFgPalette();\n  }\n  public isUnderlineColorDefault(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === 0\n      : this.isFgDefault();\n  }\n  public getUnderlineStyle(): UnderlineStyle {\n    return this.fg & FgFlags.UNDERLINE\n      ? (this.bg & BgFlags.HAS_EXTENDED ? this.extended.underlineStyle : UnderlineStyle.SINGLE)\n      : UnderlineStyle.NONE;\n  }\n}\n\n\n/**\n * Extended attributes for a cell.\n * Holds information about different underline styles and color.\n */\nexport class ExtendedAttrs implements IExtendedAttrs {\n  private _ext: number = 0;\n  public get ext(): number {\n    if (this._urlId) {\n      return (\n        (this._ext & ~ExtFlags.UNDERLINE_STYLE) |\n        (this.underlineStyle << 26)\n      );\n    }\n    return this._ext;\n  }\n  public set ext(value: number) { this._ext = value; }\n\n  public get underlineStyle(): UnderlineStyle {\n    // Always return the URL style if it has one\n    if (this._urlId) {\n      return UnderlineStyle.DASHED;\n    }\n    return (this._ext & ExtFlags.UNDERLINE_STYLE) >> 26;\n  }\n  public set underlineStyle(value: UnderlineStyle) {\n    this._ext &= ~ExtFlags.UNDERLINE_STYLE;\n    this._ext |= (value << 26) & ExtFlags.UNDERLINE_STYLE;\n  }\n\n  public get underlineColor(): number {\n    return this._ext & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n  public set underlineColor(value: number) {\n    this._ext &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    this._ext |= value & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n\n  private _urlId: number = 0;\n  public get urlId(): number {\n    return this._urlId;\n  }\n  public set urlId(value: number) {\n    this._urlId = value;\n  }\n\n  constructor(\n    ext: number = 0,\n    urlId: number = 0\n  ) {\n    this._ext = ext;\n    this._urlId = urlId;\n  }\n\n  public clone(): IExtendedAttrs {\n    return new ExtendedAttrs(this._ext, this._urlId);\n  }\n\n  /**\n   * Convenient method to indicate whether the object holds no additional information,\n   * that needs to be persistant in the buffer.\n   */\n  public isEmpty(): boolean {\n    return this.underlineStyle === UnderlineStyle.NONE && this._urlId === 0;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content = 0;\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n  public combinedData = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 0;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\nexport const DEFAULT_EXT = 0;\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..32\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000,\n  STRIKETHROUGH = 0x80000000,\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 2 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000,\n  HAS_EXTENDED = 0x10000000,\n  PROTECTED = 0x20000000\n}\n\nexport const enum ExtFlags {\n  /**\n   * bit 27..32 (upper 3 unused)\n   */\n  UNDERLINE_STYLE = 0x1C000000\n}\n\nexport const enum UnderlineStyle {\n  NONE = 0,\n  SINGLE = 1,\n  DOUBLE = 2,\n  CURLY = 3,\n  DOTTED = 4,\n  DASHED = 5\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate pair\n      // conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      if (code === 0xFEFF) {\n        // BOM\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF) || cp === 0xFEFF) {\n            // illegal codepoint or BOM\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF) || codepoint === 0xFEFF) {\n          // illegal codepoint or BOM, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharacterJoinerService, ICharSizeService, ICoreBrowserService, IRenderService, IThemeService } from 'browser/services/Services';\nimport { ITerminal } from 'browser/Types';\nimport { EventEmitter, forwardEvent } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { getSafariVersion, isSafari } from 'common/Platform';\nimport { ICoreService, IDecorationService, IOptionsService } from 'common/services/Services';\nimport { ITerminalAddon, Terminal } from 'xterm';\nimport { WebglRenderer } from './WebglRenderer';\n\nexport class WebglAddon extends Disposable implements ITerminalAddon {\n  private _terminal?: Terminal;\n  private _renderer?: WebglRenderer;\n\n  private readonly _onChangeTextureAtlas = this.register(new EventEmitter<HTMLCanvasElement>());\n  public readonly onChangeTextureAtlas = this._onChangeTextureAtlas.event;\n  private readonly _onAddTextureAtlasCanvas = this.register(new EventEmitter<HTMLCanvasElement>());\n  public readonly onAddTextureAtlasCanvas = this._onAddTextureAtlasCanvas.event;\n  private readonly _onRemoveTextureAtlasCanvas = this.register(new EventEmitter<HTMLCanvasElement>());\n  public readonly onRemoveTextureAtlasCanvas = this._onRemoveTextureAtlasCanvas.event;\n  private readonly _onContextLoss = this.register(new EventEmitter<void>());\n  public readonly onContextLoss = this._onContextLoss.event;\n\n  constructor(\n    private _preserveDrawingBuffer?: boolean\n  ) {\n    if (isSafari && getSafariVersion() < 16) {\n      throw new Error('Webgl2 is only supported on Safari 16 and above');\n    }\n    super();\n  }\n\n  public activate(terminal: Terminal): void {\n    const core = (terminal as any)._core as ITerminal;\n    if (!terminal.element) {\n      this.register(core.onWillOpen(() => this.activate(terminal)));\n      return;\n    }\n\n    this._terminal = terminal;\n    const coreService: ICoreService = core.coreService;\n    const optionsService: IOptionsService = core.optionsService;\n\n    const unsafeCore = core as any;\n    const renderService: IRenderService = unsafeCore._renderService;\n    const characterJoinerService: ICharacterJoinerService = unsafeCore._characterJoinerService;\n    const charSizeService: ICharSizeService = unsafeCore._charSizeService;\n    const coreBrowserService: ICoreBrowserService = unsafeCore._coreBrowserService;\n    const decorationService: IDecorationService = unsafeCore._decorationService;\n    const themeService: IThemeService = unsafeCore._themeService;\n\n    this._renderer = this.register(new WebglRenderer(\n      terminal,\n      characterJoinerService,\n      charSizeService,\n      coreBrowserService,\n      coreService,\n      decorationService,\n      optionsService,\n      themeService,\n      this._preserveDrawingBuffer\n    ));\n    this.register(forwardEvent(this._renderer.onContextLoss, this._onContextLoss));\n    this.register(forwardEvent(this._renderer.onChangeTextureAtlas, this._onChangeTextureAtlas));\n    this.register(forwardEvent(this._renderer.onAddTextureAtlasCanvas, this._onAddTextureAtlasCanvas));\n    this.register(forwardEvent(this._renderer.onRemoveTextureAtlasCanvas, this._onRemoveTextureAtlasCanvas));\n    renderService.setRenderer(this._renderer);\n\n    this.register(toDisposable(() => {\n      const renderService: IRenderService = (this._terminal as any)._core._renderService;\n      renderService.setRenderer((this._terminal as any)._core._createRenderer());\n      renderService.handleResize(terminal.cols, terminal.rows);\n    }));\n  }\n\n  public get textureAtlas(): HTMLCanvasElement | undefined {\n    return this._renderer?.textureAtlas;\n  }\n\n  public clearTextureAtlas(): void {\n    this._renderer?.clearTextureAtlas();\n  }\n}\n"],"names":["COMPONENT_NAME","iconButtonStyles","root","height","icon","fontSize","iconButtonProps","iconName","defaultClearButtonProps","ariaLabel","getClassNames","classNamesFunction","y","useComponentRef","componentRef","inputElementRef","hasFocus","react","useImperativeHandle","focus","_a","current","SearchBoxBase","forwardRef","props","forwardedRef","className","defaultValue","disabled","underlined","styles","labelText","_b","placeholder","theme","_c","clearButtonProps","_d","disableAnimation","_e","showIcon","customOnClear","onClear","customOnBlur","onBlur","customOnEscape","onEscape","customOnSearch","onSearch","customOnKeyDown","onKeyDown","iconProps","role","onChange","onChanged","_f","useState","setHasFocus","prevChangeTimestamp","useRef","_g","useControllableValue","G","value","ev","newValue","timeStamp","uncastValue","setValue","String","rootElementRef","mergedRootRef","useMergedRefs","r","id","useId","M","customOnClearClick","onClick","classNames","hasInput","length","nativeProps","properties","pq","Gg","useCallback","defaultPrevented","stopPropagation","preventDefault","onClearClick","onInputChange","target","createElement","ref","onFocusCapture","onFocus","call","iconContainer","selectionStart","selectionEnd","Icon","J","tslib_es6","pi","field","onInput","which","KeyCodes","m","escape","enter","clearButton","IconButton","h","displayName","GlobalClassNames","SearchBox","styled","z","palette","fonts","semanticColors","effects","lib","Cn","placeholderStyles","color","inputPlaceholderText","opacity","inputIconAlt","neutralSecondary","inputIconAltHovered","neutralPrimary","inputBorderDisabled","neutralLighter","inputBackgroundHovered","inputBackgroundDisabled","medium","Fv","inputText","backgroundColor","inputBackground","display","flexDirection","flexWrap","alignItems","padding","borderRadius","roundedCorner2","border","inputBorder","selectors","qJ","borderColor","inputBorderHovered","inputIconHovered","width","pointerEvents","position","$Y","inputFocusBorderAlt","cursor","borderWidth","justifyContent","flexShrink","textAlign","inputIcon","inputIconDisabled","transition","D1","durationValue1","flexBasis","margin","rtl","zg","Sv","outline","fontWeight","fontFamily","flex","minWidth","overflow","textOverflow","paddingBottom","disabledText","undefined","scope","e","t","self","module","exports","Object","defineProperty","FitAddon","constructor","activate","terminal","this","_terminal","dispose","fit","dims","proposeDimensions","isNaN","cols","rows","core","_core","_renderService","clear","resize","element","parentElement","dimensions","css","cell","scrollbarWidth","options","scrollback","viewport","scrollBarWidth","parentElementStyle","window","getComputedStyle","parentElementHeight","parseInt","getPropertyValue","parentElementWidth","Math","max","elementStyle","availableHeight","availableWidth","floor","forwardEvent","EventEmitter","_listeners","_disposed","event","_event","listener","push","i","splice","fire","arg1","arg2","queue","from","to","disposeArray","disposables","d","getDisposeArrayDisposable","toDisposable","Disposable","_disposables","_isDisposed","register","unregister","index","indexOf","f","s","array","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","SearchAddon","NON_WORD_CHARACTERS","arguments","_linesCacheTimeoutId","_onDidChangeResults","onDidChangeResults","_onDataDisposable","onWriteParsed","_updateMatches","_onResizeDisposable","onResize","clearDecorations","_highlightTimeout","clearTimeout","_cachedSearchTerm","_lastSearchOptions","decorations","setTimeout","findPrevious","assign","incremental","noScroll","_resultIndex","_searchResults","size","resultIndex","resultCount","retainCachedSearchTerm","_selectedDecoration","_resultDecorations","forEach","clearActiveDecoration","findNext","term","searchOptions","_highlightAllMatches","_fireResults","_findNextAndSelect","Map","resultDecorations","result","_find","get","row","col","set","resultDecoration","_createResultDecoration","decorationsForLine","marker","line","startRow","startCol","clearSelection","_initLinesCache","searchPosition","_findInLine","buffer","active","baseY","currentSelection","hasSelection","getSelectionPosition","start","end","x","_selectResult","_findPreviousAndSelect","found","isReverseSearch","_linesCache","_cursorMoveListener","onCursorMove","_destroyLinesCache","_resizeListener","_isWholeWord","searchIndex","includes","firstLine","getLine","isWrapped","cache","_translateBufferLineToStringWithWrap","stringLine","offsets","offset","_bufferColsToStringOffset","searchTerm","caseSensitive","toLowerCase","searchStringLine","regex","foundTerm","searchRegex","RegExp","exec","slice","lastIndex","lastIndexOf","wholeWord","startRowOffset","endRowOffset","startColOffset","endColOffset","startColIndex","_stringLengthToBufferSize","getCell","char","getChars","nextCell","getWidth","lineIndex","getCode","trimRight","strings","lineOffsets","nextLine","lineWrapsToNext","string","translateToString","lastCell","join","select","registerMarker","cursorY","registerDecoration","activeMatchBackground","layer","overviewRulerOptions","activeMatchColorOverviewRuler","onRender","_applyStyles","activeMatchBorder","onDispose","viewportY","scroll","scrollLines","isActiveResult","clientWidth","classList","contains","add","style","findResultDecoration","matchBackground","matchOverviewRuler","matchBorder","o","GlyphRenderer","n","a","BYTES_PER_CELL","INDICES_PER_CELL","Float32Array","BYTES_PER_ELEMENT","$glyph","$i","$leftCellPadding","$clippedPixels","_gl","_dimensions","super","_activeBuffer","_vertices","count","attributes","attributesBuffers","gl","TextureAtlas","maxAtlasPages","min","throwIfFalsy","getParameter","MAX_TEXTURE_IMAGE_UNITS","maxTextureSize","MAX_TEXTURE_SIZE","_program","createProgram","maxFragmentShaderTextureUnits","textureConditionals","deleteProgram","_projectionLocation","getUniformLocation","_resolutionLocation","_textureLocation","_vertexArrayObject","createVertexArray","bindVertexArray","unitQuadVertices","unitQuadVerticesBuffer","createBuffer","deleteBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","unitQuadElementIndices","Uint8Array","elementIndicesBuffer","ELEMENT_ARRAY_BUFFER","_attributesBuffer","vertexAttribDivisor","useProgram","textureUnits","Int32Array","uniform1iv","uniformMatrix4fv","PROJECTION_MATRIX","_atlasTextures","glTexture","GLTexture","createTexture","deleteTexture","texture","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","texImage2D","RGBA","UNSIGNED_BYTE","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","handleResize","beginFrame","_atlas","updateCell","code","bg","fg","ext","chars","lastBg","_updateCell","NULL_CELL_CODE","getRasterizedGlyphCombinedChar","getRasterizedGlyph","device","left","top","canvas","texturePage","texturePositionClipSpace","pages","sizeClipSpace","fill","newCount","uniform2f","render","renderModel","activeBuffer","bufferLength","lineLengths","si","sub","subarray","STREAM_DRAW","version","_bindAtlasPageTexture","drawElementsInstanced","TRIANGLE_STRIP","setAtlas","atlas","generateMipmap","setDimensions","g","RectangleRenderer","BYTES_PER_RECTANGLE","$rgba","$isDefault","$x1","$y1","$r","$g","$b","$a","_themeService","_updateCachedColors","colors","onChangeColors","_updateViewportRectangle","DYNAMIC_DRAW","_bgFloat","_colorToFloat32Array","background","_addRectangleFloat","updateBackgrounds","model","vertices","currentStartX","currentBg","currentFg","currentInverse","modelIndex","inverse","rectangleCount","RENDER_MODEL_INDICIES_PER_CELL","cells","RENDER_MODEL_BG_OFFSET","RENDER_MODEL_FG_OFFSET","_updateRectangle","startX","endX","ansi","rgba","foreground","expandFloat32Array","DIM_OPACITY","_addRectangle","x1","y1","b","C","RenderModel","COMBINED_CHAR_BIT_MASK","RENDER_MODEL_EXT_OFFSET","Uint32Array","selection","createSelectionRenderModel","indexCount","JoinedCellData","WebglRenderer","l","c","_","u","v","_characterJoinerService","_charSizeService","_coreBrowserService","coreService","_decorationService","_optionsService","preserveDrawingBuffer","_model","_workCell","CellData","_onChangeTextureAtlas","onChangeTextureAtlas","_onAddTextureAtlasCanvas","onAddTextureAtlasCanvas","_onRemoveTextureAtlasCanvas","onRemoveTextureAtlasCanvas","_onRequestRedraw","onRequestRedraw","_onContextLoss","onContextLoss","_handleColorChange","_cellColorResolver","CellColorResolver","_renderLayers","LinkRenderLayer","screenElement","linkifier2","CursorRenderLayer","createRenderDimensions","_devicePixelRatio","dpr","_updateDimensions","onOptionChange","_handleOptionsChanged","_canvas","document","getContext","antialias","depth","contextAttributes","addDisposableDomListener","console","log","_contextRestorationTimeout","warn","removeTerminalFromCache","_initializeWebGLState","_requestRedrawViewport","observeDevicePixelDimensions","w","_setCanvasDevicePixelDimensions","appendChild","_rectangleRenderer","_glyphRenderer","_isAttached","body","removeChild","textureAtlas","_charAtlas","_refreshCharAtlas","_clearModel","handleDevicePixelRatioChange","handleCharSizeChanged","handleBlur","handleFocus","handleSelectionChanged","columnSelectMode","update","handleCursorMove","acquireTextureAtlas","rawOptions","_charAtlasDisposable","warmUp","clearGlyphRenderer","clearTextureAtlas","clearTexture","reset","registerCharacterJoiner","handler","deregisterCharacterJoiner","joinerId","renderRows","handleGridChanged","_updateModel","joinedRanges","isJoined","lastCharX","range","j","ydisp","lines","getJoinedCharacters","loadCell","shift","resolve","NULL_CELL_CHAR","ceil","lineHeight","round","letterSpacing","p","AttributeData","firstCell","content","combinedData","_width","isCombined","setFromCharData","getAsCharData","createShader","type","source","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","error","getShaderInfoLog","deleteShader","vertexSource","fragmentSource","program","attachShader","VERTEX_SHADER","FRAGMENT_SHADER","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","newLength","newArray","BaseRenderLayer","_container","zIndex","_alpha","_deviceCharWidth","_deviceCharHeight","_deviceCellWidth","_deviceCellHeight","_deviceCharLeft","_deviceCharTop","toString","_initCanvas","remove","_ctx","alpha","_clearAll","endRow","_setTransparency","oldCanvas","cloneNode","replaceChild","colorSet","dim","_fillCells","fillRect","_fillBottomLineAtCells","_fillLeftLineAtCell","_strokeRectAtCell","lineWidth","strokeRect","clearRect","fillStyle","_clearCells","_fillCharTrueColor","font","_getFont","textBaseline","TEXT_BASELINE","_clipCell","fillText","beginPath","rect","clip","isBold","isItalic","fontWeightBold","container","_onRequestRefreshRowsEvent","coreBrowserService","_coreService","optionsService","themeService","_cell","_state","isFocused","_cursorRenderers","bar","_renderBarCursor","bind","block","_renderBlockCursor","underline","_renderUnderlineCursor","_cursorBlinkStateManager","_clearCursor","restartBlinkAnimation","pause","resume","cursorBlink","CursorBlinkStateManager","_render","isPaused","triggeredByAnimationFrame","isCursorInitialized","isCursorHidden","viewportRelativeCursorY","cursorX","save","cursorStyle","_renderBlurCursor","restore","isCursorVisible","cursorWidth","cursorAccent","strokeStyle","_renderCallback","_restartInterval","_blinkStartTimeout","_blinkInterval","clearInterval","_animationFrame","cancelAnimationFrame","_animationTimeRestarted","Date","now","requestAnimationFrame","timeToStart","BLINK_INTERVAL","time","setInterval","onShowLinkUnderline","_handleShowLinkUnderline","onHideLinkUnderline","_handleHideLinkUnderline","_clearCurrentLink","middleRowCount","y2","x2","INVERTED_DEFAULT_COLOR","is256Color","node","addEventListener","disposed","removeEventListener","$colors","$fg","$bg","$hasFg","$hasBg","$isSelected","_selectionRenderModel","extended","forEachDecorationAtCell","backgroundColorRGB","foregroundColorRGB","isCellSelected","selectionBackgroundOpaque","selectionInactiveBackgroundOpaque","selectionForeground","charAtlasCache","deviceCellWidth","deviceCellHeight","deviceCharWidth","deviceCharHeight","devicePixelRatio","newConfig","generateConfig","entry","ownedByIndex","ownedBy","configEquals","config","newEntry","unicodeService","clonedColors","NULL_COLOR","selectionBackgroundTransparent","selectionInactiveBackgroundTransparent","contrastCache","customGlyphs","allowTransparency","drawBoldTextInBrightColors","minimumContrastRatio","colorCode","isFirefox","isLegacyEdge","tryDrawCustomChar","powerlineDefinitions","boxDrawingDefinitions","blockElementDefinitions","patternCharacterDefinitions","xp","yp","rightPadding","leftPadding","ctx","xOffset","yOffset","blockElementDefinition","charDefinition","box","xEighth","yEighth","patternDefinition","patternSet","cachedPatterns","pattern","tmpCanvas","tmpCtx","imageData","ImageData","startsWith","substring","split","map","parseFloat","data","putImageData","createPattern","boxDrawingDefinition","instructions","entries","instruction","Number","actualInstructions","svgToCanvasInstructionMap","args","translateArgs","stroke","closePath","powerlineDefinition","clipRegion","Path2D","cssLineWidth","clamp","bezierCurveTo","L","lineTo","moveTo","cellWidth","cellHeight","doClamp","parentWindow","callback","observer","ResizeObserver","find","disconnect","devicePixelContentBoxSize","inlineSize","blockSize","observe","isPowerlineGlyph","codepoint","excludeFromContrastRatioDemands","isRestrictedPowerlineGlyph","SelectionRenderModel","viewportStartRow","viewportEndRow","viewportCappedStartRow","viewportCappedEndRow","endCol","NULL_RASTERIZED_GLYPH","texturePosition","_document","_config","_unicodeService","_didWarmUp","_cacheMap","FourKeyMap","_cacheMapCombined","_pages","_activePages","_workBoundingBox","bottom","right","_workAttributeData","_textureSize","_requestClearModel","_createNewPage","_tmpCanvas","createCanvas","TMP_CANVAS_GLYPH_PADDING","_tmpCtx","willReadFrequently","page","_doWarmUp","IdleTaskQueue","enqueue","DEFAULT_COLOR","DEFAULT_EXT","rasterizedGlyph","_drawToCache","currentRow","queueMicrotask","pagesBySize","filter","sort","percentageUsed","sameSizeI","mergingPages","sortedMergingPagesIndexes","glyphs","mergedPageIndex","mergedPage","_mergePages","_deletePage","newPage","AtlasPage","mergedSize","drawImage","pageIndex","adjustingPage","_getFromCacheMap","cacheMap","key","_getColorFromAnsiIndex","idx","_getBackgroundColor","bgColorMode","bgColor","arr","toColorRGB","toColor","blend","multiplyOpacity","_getForegroundColor","fgColorMode","fgColor","bold","minimumContrastColor","_getMinimumContrastColor","opaque","_resolveBackgroundRgba","_resolveForegroundRgba","adjustedColor","getColor","bgRgba","fgRgba","ensureContrastRatio","setColor","codeOrChars","activePage","activeRow","fromCharCode","allowedWidth","allowedHeight","isInvisible","isInverse","isDim","italic","isUnderline","strikethrough","isStrikethrough","getFgColor","getFgColorMode","getBgColor","getBgColorMode","temp","temp2","globalCompositeOperation","fontStyle","powerlineGlyph","charCodeAt","restrictedPowerlineGlyph","foregroundColor","customGlyph","chWidth","enableClearThresholdCheck","wcwidth","getStringCellWidth","isUnderlineColorDefault","isUnderlineColorRGB","getUnderlineColor","yTop","yMid","yBot","xChLeft","xLeft","xChRight","xChMid","underlineStyle","yCurlyBot","yCurlyTop","setLineDash","metrics","measureText","actualBoundingBoxDescent","strokeText","isBeyondCellBounds","clearColor","getImageData","_findGlyphBoundingBox","fixedRows","wasNewPageCreated","candidatePage","addGlyph","boundingBox","restrictedGlyph","alphaOffset","sourcePages","_usedPixels","_glyphs","glyph","enableThresholdCheck","fgR","fgG","fgB","threshold","abs","isEmpty","channels","rgb","contrastRatio","toPaddedHex","l1","l2","toCss","toRgba","toChannels","bgR","bgG","bgB","isOpaque","ratio","rgbaColor","factor","$ctx","$litmusColor","isNode","createLinearGradient","match","repeat","rgbaMatch","relativeLuminance2","rs","gs","bs","pow","relativeLuminance","reduceLuminance","cr","increaseLuminance","bgL","fgL","resultA","resultARatio","resultB","TwoKeyMap","_data","first","second","third","fourth","isChromeOS","isLinux","isWindows","isIphone","isIpad","isMac","getSafariVersion","isSafari","navigator","userAgent","platform","test","majorVersion","TaskQueue","_tasks","_i","task","_start","flush","_idleCallback","_cancelCallback","_requestCallback","_process","deadline","taskDuration","longestTask","lastDeadlineRemaining","timeRemaining","deadlineRemaining","PriorityTaskQueue","_createDeadline","identifier","duration","requestIdleCallback","cancelIdleCallback","DebouncedIdleTask","_queue","ExtendedAttrs","static","clone","newObj","hasExtendedAttrs","isBlink","isProtected","isFgRGB","isBgRGB","isFgPalette","isBgPalette","isFgDefault","isBgDefault","isAttributeDefault","updateExtended","underlineColor","getUnderlineColorMode","isUnderlineColorPalette","getUnderlineStyle","urlId","_ext","_urlId","obj","stringFromCodePoint","CHAR_DATA_ATTR_INDEX","combined","CHAR_DATA_CHAR_INDEX","CHAR_DATA_WIDTH_INDEX","WHITESPACE_CELL_CODE","WHITESPACE_CELL_WIDTH","WHITESPACE_CELL_CHAR","NULL_CELL_WIDTH","CHAR_DATA_CODE_INDEX","DEFAULT_ATTR","Utf8ToUtf32","StringToUtf32","utf32ToString","codePoint","_interim","decode","input","startPos","interim","byte1","byte2","byte3","byte4","discardInterim","cp","tmp","pos","missing","fourStop","WebglAddon","_preserveDrawingBuffer","onWillOpen","renderService","unsafeCore","characterJoinerService","charSizeService","decorationService","_renderer","setRenderer","_createRenderer"],"sourceRoot":""}