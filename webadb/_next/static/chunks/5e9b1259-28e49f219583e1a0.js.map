{"version":3,"file":"static/chunks/5e9b1259-28e49f219583e1a0.js","mappings":"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AC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,K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","sources":["webpack://_N_E/xterm/webpack/universalModuleDefinition","webpack://_N_E/xterm/./src/browser/AccessibilityManager.ts","webpack://_N_E/xterm/./src/browser/Clipboard.ts","webpack://_N_E/xterm/./src/browser/ColorContrastCache.ts","webpack://_N_E/xterm/./src/browser/Dom.ts","webpack://_N_E/xterm/./src/browser/Lifecycle.ts","webpack://_N_E/xterm/./src/browser/Linkifier2.ts","webpack://_N_E/xterm/./src/browser/LocalizableStrings.ts","webpack://_N_E/xterm/./src/browser/OscLinkProvider.ts","webpack://_N_E/xterm/./src/browser/RenderDebouncer.ts","webpack://_N_E/xterm/./src/browser/ScreenDprMonitor.ts","webpack://_N_E/xterm/./src/browser/Terminal.ts","webpack://_N_E/xterm/./src/browser/TimeBasedDebouncer.ts","webpack://_N_E/xterm/./src/browser/Viewport.ts","webpack://_N_E/xterm/./src/browser/decorations/BufferDecorationRenderer.ts","webpack://_N_E/xterm/./src/browser/decorations/ColorZoneStore.ts","webpack://_N_E/xterm/./src/browser/decorations/OverviewRulerRenderer.ts","webpack://_N_E/xterm/./src/browser/input/CompositionHelper.ts","webpack://_N_E/xterm/./src/browser/input/Mouse.ts","webpack://_N_E/xterm/./src/browser/input/MoveToCell.ts","webpack://_N_E/xterm/./src/browser/renderer/dom/DomRenderer.ts","webpack://_N_E/xterm/./src/browser/renderer/dom/DomRendererRowFactory.ts","webpack://_N_E/xterm/./src/browser/renderer/shared/Constants.ts","webpack://_N_E/xterm/./src/browser/renderer/shared/RendererUtils.ts","webpack://_N_E/xterm/./src/browser/selection/SelectionModel.ts","webpack://_N_E/xterm/./src/browser/services/CharSizeService.ts","webpack://_N_E/xterm/./src/browser/services/CharacterJoinerService.ts","webpack://_N_E/xterm/./src/browser/services/CoreBrowserService.ts","webpack://_N_E/xterm/./src/browser/services/MouseService.ts","webpack://_N_E/xterm/./src/browser/services/RenderService.ts","webpack://_N_E/xterm/./src/browser/services/SelectionService.ts","webpack://_N_E/xterm/./src/browser/services/Services.ts","webpack://_N_E/xterm/./src/browser/services/ThemeService.ts","webpack://_N_E/xterm/./src/common/CircularList.ts","webpack://_N_E/xterm/./src/common/Clone.ts","webpack://_N_E/xterm/./src/common/Color.ts","webpack://_N_E/xterm/./src/common/CoreTerminal.ts","webpack://_N_E/xterm/./src/common/EventEmitter.ts","webpack://_N_E/xterm/./src/common/InputHandler.ts","webpack://_N_E/xterm/./src/common/Lifecycle.ts","webpack://_N_E/xterm/./src/common/MultiKeyMap.ts","webpack://_N_E/xterm/./src/common/Platform.ts","webpack://_N_E/xterm/./src/common/SortedList.ts","webpack://_N_E/xterm/./src/common/TaskQueue.ts","webpack://_N_E/xterm/./src/common/WindowsMode.ts","webpack://_N_E/xterm/./src/common/buffer/AttributeData.ts","webpack://_N_E/xterm/./src/common/buffer/Buffer.ts","webpack://_N_E/xterm/./src/common/buffer/BufferLine.ts","webpack://_N_E/xterm/./src/common/buffer/BufferRange.ts","webpack://_N_E/xterm/./src/common/buffer/BufferReflow.ts","webpack://_N_E/xterm/./src/common/buffer/BufferSet.ts","webpack://_N_E/xterm/./src/common/buffer/CellData.ts","webpack://_N_E/xterm/./src/common/buffer/Constants.ts","webpack://_N_E/xterm/./src/common/buffer/Marker.ts","webpack://_N_E/xterm/./src/common/data/Charsets.ts","webpack://_N_E/xterm/./src/common/data/EscapeSequences.ts","webpack://_N_E/xterm/./src/common/input/Keyboard.ts","webpack://_N_E/xterm/./src/common/input/TextDecoder.ts","webpack://_N_E/xterm/./src/common/input/UnicodeV6.ts","webpack://_N_E/xterm/./src/common/input/WriteBuffer.ts","webpack://_N_E/xterm/./src/common/input/XParseColor.ts","webpack://_N_E/xterm/./src/common/parser/Constants.ts","webpack://_N_E/xterm/./src/common/parser/DcsParser.ts","webpack://_N_E/xterm/./src/common/parser/EscapeSequenceParser.ts","webpack://_N_E/xterm/./src/common/parser/OscParser.ts","webpack://_N_E/xterm/./src/common/parser/Params.ts","webpack://_N_E/xterm/./src/common/public/AddonManager.ts","webpack://_N_E/xterm/./src/common/public/BufferApiView.ts","webpack://_N_E/xterm/./src/common/public/BufferLineApiView.ts","webpack://_N_E/xterm/./src/common/public/BufferNamespaceApi.ts","webpack://_N_E/xterm/./src/common/public/ParserApi.ts","webpack://_N_E/xterm/./src/common/public/UnicodeApi.ts","webpack://_N_E/xterm/./src/common/services/BufferService.ts","webpack://_N_E/xterm/./src/common/services/CharsetService.ts","webpack://_N_E/xterm/./src/common/services/CoreMouseService.ts","webpack://_N_E/xterm/./src/common/services/CoreService.ts","webpack://_N_E/xterm/./src/common/services/DecorationService.ts","webpack://_N_E/xterm/./src/common/services/InstantiationService.ts","webpack://_N_E/xterm/./src/common/services/LogService.ts","webpack://_N_E/xterm/./src/common/services/OptionsService.ts","webpack://_N_E/xterm/./src/common/services/OscLinkService.ts","webpack://_N_E/xterm/./src/common/services/ServiceRegistry.ts","webpack://_N_E/xterm/./src/common/services/Services.ts","webpack://_N_E/xterm/./src/common/services/UnicodeService.ts","webpack://_N_E/xterm/webpack/bootstrap","webpack://_N_E/xterm/./src/browser/public/Terminal.ts","webpack://_N_E/<anon>"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, function() {\nreturn ","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { ITerminal, IRenderDebouncer } from 'browser/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { isMac } from 'common/Platform';\nimport { TimeBasedDebouncer } from 'browser/TimeBasedDebouncer';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { IRenderService } from 'browser/services/Services';\nimport { removeElementFromParent } from 'browser/Dom';\n\nconst MAX_ROWS_TO_READ = 20;\n\nconst enum BoundaryPosition {\n  TOP,\n  BOTTOM\n}\n\nexport class AccessibilityManager extends Disposable {\n  private _accessibilityTreeRoot: HTMLElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[];\n  private _liveRegion: HTMLElement;\n  private _liveRegionLineCount: number = 0;\n\n  private _renderRowsDebouncer: IRenderDebouncer;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _topBoundaryFocusListener: (e: FocusEvent) => void;\n  private _bottomBoundaryFocusListener: (e: FocusEvent) => void;\n\n  /**\n   * This queue has a character pushed to it for keys that are pressed, if the\n   * next character added to the terminal is equal to the key char then it is\n   * not announced (added to live region) because it has already been announced\n   * by the textarea event (which cannot be canceled). There are some race\n   * condition cases if there is typing while data is streaming, but this covers\n   * the main case of typing into the prompt and inputting the answer to a\n   * question (Y/N, etc.).\n   */\n  private _charsToConsume: string[] = [];\n\n  private _charsToAnnounce: string = '';\n\n  constructor(\n    private readonly _terminal: ITerminal,\n    private readonly _renderService: IRenderService\n  ) {\n    super();\n    this._accessibilityTreeRoot = document.createElement('div');\n    this._accessibilityTreeRoot.classList.add('xterm-accessibility');\n    this._accessibilityTreeRoot.tabIndex = 0;\n\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.setAttribute('role', 'list');\n    this._rowContainer.classList.add('xterm-accessibility-tree');\n    this._rowElements = [];\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n\n    this._topBoundaryFocusListener = e => this._handleBoundaryFocus(e, BoundaryPosition.TOP);\n    this._bottomBoundaryFocusListener = e => this._handleBoundaryFocus(e, BoundaryPosition.BOTTOM);\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n    this._accessibilityTreeRoot.appendChild(this._rowContainer);\n\n    this._renderRowsDebouncer = new TimeBasedDebouncer(this._renderRows.bind(this));\n    this._refreshRows();\n\n    this._liveRegion = document.createElement('div');\n    this._liveRegion.classList.add('live-region');\n    this._liveRegion.setAttribute('aria-live', 'assertive');\n    this._accessibilityTreeRoot.appendChild(this._liveRegion);\n\n    if (!this._terminal.element) {\n      throw new Error('Cannot enable accessibility before Terminal.open');\n    }\n    this._terminal.element.insertAdjacentElement('afterbegin', this._accessibilityTreeRoot);\n\n    this.register(this._renderRowsDebouncer);\n    this.register(this._terminal.onResize(e => this._handleResize(e.rows)));\n    this.register(this._terminal.onRender(e => this._refreshRows(e.start, e.end)));\n    this.register(this._terminal.onScroll(() => this._refreshRows()));\n    // Line feed is an issue as the prompt won't be read out after a command is run\n    this.register(this._terminal.onA11yChar(char => this._handleChar(char)));\n    this.register(this._terminal.onLineFeed(() => this._handleChar('\\n')));\n    this.register(this._terminal.onA11yTab(spaceCount => this._handleTab(spaceCount)));\n    this.register(this._terminal.onKey(e => this._handleKey(e.key)));\n    this.register(this._terminal.onBlur(() => this._clearLiveRegion()));\n    this.register(this._renderService.onDimensionsChange(() => this._refreshRowsDimensions()));\n\n    this._screenDprMonitor = new ScreenDprMonitor(window);\n    this.register(this._screenDprMonitor);\n    this._screenDprMonitor.setListener(() => this._refreshRowsDimensions());\n    // This shouldn't be needed on modern browsers but is present in case the\n    // media query that drives the ScreenDprMonitor isn't supported\n    this.register(addDisposableDomListener(window, 'resize', () => this._refreshRowsDimensions()));\n    this.register(toDisposable(() => {\n      removeElementFromParent(this._accessibilityTreeRoot);\n      this._rowElements.length = 0;\n    }));\n  }\n\n  private _handleBoundaryFocus(e: FocusEvent, position: BoundaryPosition): void {\n    const boundaryElement = e.target as HTMLElement;\n    const beforeBoundaryElement = this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2];\n\n    // Don't scroll if the buffer top has reached the end in that direction\n    const posInSet = boundaryElement.getAttribute('aria-posinset');\n    const lastRowPos = position === BoundaryPosition.TOP ? '1' : `${this._terminal.buffer.lines.length}`;\n    if (posInSet === lastRowPos) {\n      return;\n    }\n\n    // Don't scroll when the last focused item was not the second row (focus is going the other\n    // direction)\n    if (e.relatedTarget !== beforeBoundaryElement) {\n      return;\n    }\n\n    // Remove old boundary element from array\n    let topBoundaryElement: HTMLElement;\n    let bottomBoundaryElement: HTMLElement;\n    if (position === BoundaryPosition.TOP) {\n      topBoundaryElement = boundaryElement;\n      bottomBoundaryElement = this._rowElements.pop()!;\n      this._rowContainer.removeChild(bottomBoundaryElement);\n    } else {\n      topBoundaryElement = this._rowElements.shift()!;\n      bottomBoundaryElement = boundaryElement;\n      this._rowContainer.removeChild(topBoundaryElement);\n    }\n\n    // Remove listeners from old boundary elements\n    topBoundaryElement.removeEventListener('focus', this._topBoundaryFocusListener);\n    bottomBoundaryElement.removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Add new element to array/DOM\n    if (position === BoundaryPosition.TOP) {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.unshift(newElement);\n      this._rowContainer.insertAdjacentElement('afterbegin', newElement);\n    } else {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.push(newElement);\n      this._rowContainer.appendChild(newElement);\n    }\n\n    // Add listeners to new boundary elements\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Scroll up\n    this._terminal.scrollLines(position === BoundaryPosition.TOP ? -1 : 1);\n\n    // Focus new boundary before element\n    this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2].focus();\n\n    // Prevent the standard behavior\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  private _handleResize(rows: number): void {\n    // Remove bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Grow rows as required\n    for (let i = this._rowContainer.children.length; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n    // Shrink rows as required\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n\n    // Add bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n  }\n\n  private _createAccessibilityTreeNode(): HTMLElement {\n    const element = document.createElement('div');\n    element.setAttribute('role', 'listitem');\n    element.tabIndex = -1;\n    this._refreshRowDimensions(element);\n    return element;\n  }\n\n  private _handleTab(spaceCount: number): void {\n    for (let i = 0; i < spaceCount; i++) {\n      this._handleChar(' ');\n    }\n  }\n\n  private _handleChar(char: string): void {\n    if (this._liveRegionLineCount < MAX_ROWS_TO_READ + 1) {\n      if (this._charsToConsume.length > 0) {\n        // Have the screen reader ignore the char if it was just input\n        const shiftedChar = this._charsToConsume.shift();\n        if (shiftedChar !== char) {\n          this._charsToAnnounce += char;\n        }\n      } else {\n        this._charsToAnnounce += char;\n      }\n\n      if (char === '\\n') {\n        this._liveRegionLineCount++;\n        if (this._liveRegionLineCount === MAX_ROWS_TO_READ + 1) {\n          this._liveRegion.textContent += Strings.tooMuchOutput;\n        }\n      }\n\n      // Only detach/attach on mac as otherwise messages can go unaccounced\n      if (isMac) {\n        if (this._liveRegion.textContent && this._liveRegion.textContent.length > 0 && !this._liveRegion.parentNode) {\n          setTimeout(() => {\n            this._accessibilityTreeRoot.appendChild(this._liveRegion);\n          }, 0);\n        }\n      }\n    }\n  }\n\n  private _clearLiveRegion(): void {\n    this._liveRegion.textContent = '';\n    this._liveRegionLineCount = 0;\n\n    // Only detach/attach on mac as otherwise messages can go unaccounced\n    if (isMac) {\n      removeElementFromParent(this._liveRegion);\n    }\n  }\n\n  private _handleKey(keyChar: string): void {\n    this._clearLiveRegion();\n    // Only add the char if there is no control character.\n    if (!/\\p{Control}/u.test(keyChar)) {\n      this._charsToConsume.push(keyChar);\n    }\n  }\n\n  private _refreshRows(start?: number, end?: number): void {\n    this._renderRowsDebouncer.refresh(start, end, this._terminal.rows);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    const buffer: IBuffer = this._terminal.buffer;\n    const setSize = buffer.lines.length.toString();\n    for (let i = start; i <= end; i++) {\n      const lineData = buffer.translateBufferLineToString(buffer.ydisp + i, true);\n      const posInSet = (buffer.ydisp + i + 1).toString();\n      const element = this._rowElements[i];\n      if (element) {\n        if (lineData.length === 0) {\n          element.innerText = '\\u00a0';\n        } else {\n          element.textContent = lineData;\n        }\n        element.setAttribute('aria-posinset', posInSet);\n        element.setAttribute('aria-setsize', setSize);\n      }\n    }\n    this._announceCharacters();\n  }\n\n  private _refreshRowsDimensions(): void {\n    if (!this._renderService.dimensions.css.cell.height) {\n      return;\n    }\n    this._accessibilityTreeRoot.style.width = `${this._renderService.dimensions.css.canvas.width}px`;\n    if (this._rowElements.length !== this._terminal.rows) {\n      this._handleResize(this._terminal.rows);\n    }\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._refreshRowDimensions(this._rowElements[i]);\n    }\n  }\n\n  private _refreshRowDimensions(element: HTMLElement): void {\n    element.style.height = `${this._renderService.dimensions.css.cell.height}px`;\n  }\n\n  private _announceCharacters(): void {\n    if (this._charsToAnnounce.length === 0) {\n      return;\n    }\n    this._liveRegion.textContent += this._charsToAnnounce;\n    this._charsToAnnounce = '';\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionService } from 'browser/services/Services';\nimport { ICoreService } from 'common/services/Services';\n\n/**\n * Prepares text to be pasted into the terminal by normalizing the line endings\n * @param text The pasted text that needs processing before inserting into the terminal\n */\nexport function prepareTextForTerminal(text: string): string {\n  return text.replace(/\\r?\\n/g, '\\r');\n}\n\n/**\n * Bracket text for paste, if necessary, as per https://cirw.in/blog/bracketed-paste\n * @param text The pasted text to bracket\n */\nexport function bracketTextForPaste(text: string, bracketedPasteMode: boolean): string {\n  if (bracketedPasteMode) {\n    return '\\x1b[200~' + text + '\\x1b[201~';\n  }\n  return text;\n}\n\n/**\n * Binds copy functionality to the given terminal.\n * @param ev The original copy event to be handled\n */\nexport function copyHandler(ev: ClipboardEvent, selectionService: ISelectionService): void {\n  if (ev.clipboardData) {\n    ev.clipboardData.setData('text/plain', selectionService.selectionText);\n  }\n  // Prevent or the original text will be copied.\n  ev.preventDefault();\n}\n\n/**\n * Redirect the clipboard's data to the terminal's input handler.\n */\nexport function handlePasteEvent(ev: ClipboardEvent, textarea: HTMLTextAreaElement, coreService: ICoreService): void {\n  ev.stopPropagation();\n  if (ev.clipboardData) {\n    const text = ev.clipboardData.getData('text/plain');\n    paste(text, textarea, coreService);\n  }\n}\n\nexport function paste(text: string, textarea: HTMLTextAreaElement, coreService: ICoreService): void {\n  text = prepareTextForTerminal(text);\n  text = bracketTextForPaste(text, coreService.decPrivateModes.bracketedPasteMode);\n  coreService.triggerDataEvent(text, true);\n  textarea.value = '';\n}\n\n/**\n * Moves the textarea under the mouse cursor and focuses it.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n */\nexport function moveTextAreaUnderMouseCursor(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement): void {\n\n  // Calculate textarea position relative to the screen element\n  const pos = screenElement.getBoundingClientRect();\n  const left = ev.clientX - pos.left - 10;\n  const top = ev.clientY - pos.top - 10;\n\n  // Bring textarea at the cursor position\n  textarea.style.width = '20px';\n  textarea.style.height = '20px';\n  textarea.style.left = `${left}px`;\n  textarea.style.top = `${top}px`;\n  textarea.style.zIndex = '1000';\n\n  textarea.focus();\n}\n\n/**\n * Bind to right-click event and allow right-click copy and paste.\n */\nexport function rightClickHandler(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement, selectionService: ISelectionService, shouldSelectWord: boolean): void {\n  moveTextAreaUnderMouseCursor(ev, textarea, screenElement);\n\n  if (shouldSelectWord) {\n    selectionService.rightClickSelect(ev);\n  }\n\n  // Get textarea ready to copy from the context menu\n  textarea.value = selectionService.selectionText;\n  textarea.select();\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorContrastCache } from 'browser/Types';\nimport { IColor } from 'common/Types';\nimport { TwoKeyMap } from 'common/MultiKeyMap';\n\nexport class ColorContrastCache implements IColorContrastCache {\n  private _color: TwoKeyMap</* bg */number, /* fg */number, IColor | null> = new TwoKeyMap();\n  private _css: TwoKeyMap</* bg */number, /* fg */number, string | null> = new TwoKeyMap();\n\n  public setCss(bg: number, fg: number, value: string | null): void {\n    this._css.set(bg, fg, value);\n  }\n\n  public getCss(bg: number, fg: number): string | null | undefined {\n    return this._css.get(bg, fg);\n  }\n\n  public setColor(bg: number, fg: number, value: IColor | null): void {\n    this._color.set(bg, fg, value);\n  }\n\n  public getColor(bg: number, fg: number): IColor | null | undefined {\n    return this._color.get(bg, fg);\n  }\n\n  public clear(): void {\n    this._color.clear();\n    this._css.clear();\n  }\n}\n","/**\n * Copyright (c) 2020 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function removeElementFromParent(...elements: (HTMLElement | undefined)[]): void {\n  for (const e of elements) {\n    e?.parentElement?.removeChild(e);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param node The node to add a listener to.\n * @param type The event type.\n * @param handler The handler for the listener.\n * @param options The boolean or options object to pass on to the event\n * listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  options?: boolean | AddEventListenerOptions\n): IDisposable {\n  node.addEventListener(type, handler, options);\n  let disposed = false;\n  return {\n    dispose: () => {\n      if (disposed) {\n        return;\n      }\n      disposed = true;\n      node.removeEventListener(type, handler, options);\n    }\n  };\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkifier2, ILinkProvider, IBufferCellPosition, ILink, ILinkifierEvent, ILinkDecorations, ILinkWithState } from 'browser/Types';\nimport { IDisposable } from 'common/Types';\nimport { IMouseService, IRenderService } from './services/Services';\nimport { IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable, getDisposeArrayDisposable, disposeArray, toDisposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\n\nexport class Linkifier2 extends Disposable implements ILinkifier2 {\n  private _element: HTMLElement | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _linkProviders: ILinkProvider[] = [];\n  public get currentLink(): ILinkWithState | undefined { return this._currentLink; }\n  protected _currentLink: ILinkWithState | undefined;\n  private _mouseDownLink: ILinkWithState | undefined;\n  private _lastMouseEvent: MouseEvent | undefined;\n  private _linkCacheDisposables: IDisposable[] = [];\n  private _lastBufferCell: IBufferCellPosition | undefined;\n  private _isMouseOut: boolean = true;\n  private _activeProviderReplies: Map<Number, ILinkWithState[] | undefined> | undefined;\n  private _activeLine: number = -1;\n\n  private readonly _onShowLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public readonly onShowLinkUnderline = this._onShowLinkUnderline.event;\n  private readonly _onHideLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public readonly onHideLinkUnderline = this._onHideLinkUnderline.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.register(getDisposeArrayDisposable(this._linkCacheDisposables));\n    this.register(toDisposable(() => {\n      this._lastMouseEvent = undefined;\n    }));\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._linkProviders.push(linkProvider);\n    return {\n      dispose: () => {\n        // Remove the link provider from the list\n        const providerIndex = this._linkProviders.indexOf(linkProvider);\n\n        if (providerIndex !== -1) {\n          this._linkProviders.splice(providerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public attachToDom(element: HTMLElement, mouseService: IMouseService, renderService: IRenderService): void {\n    this._element = element;\n    this._mouseService = mouseService;\n    this._renderService = renderService;\n\n    this.register(addDisposableDomListener(this._element, 'mouseleave', () => {\n      this._isMouseOut = true;\n      this._clearCurrentLink();\n    }));\n    this.register(addDisposableDomListener(this._element, 'mousemove', this._handleMouseMove.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mousedown', this._handleMouseDown.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mouseup', this._handleMouseUp.bind(this)));\n  }\n\n  private _handleMouseMove(event: MouseEvent): void {\n    this._lastMouseEvent = event;\n\n    if (!this._element || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n    this._isMouseOut = false;\n\n    // Ignore the event if it's an embedder created hover widget\n    const composedPath = event.composedPath() as HTMLElement[];\n    for (let i = 0; i < composedPath.length; i++) {\n      const target = composedPath[i];\n      // Hit Terminal.element, break and continue\n      if (target.classList.contains('xterm')) {\n        break;\n      }\n      // It's a hover, don't respect hover event\n      if (target.classList.contains('xterm-hover')) {\n        return;\n      }\n    }\n\n    if (!this._lastBufferCell || (position.x !== this._lastBufferCell.x || position.y !== this._lastBufferCell.y)) {\n      this._handleHover(position);\n      this._lastBufferCell = position;\n    }\n  }\n\n  private _handleHover(position: IBufferCellPosition): void {\n    // TODO: This currently does not cache link provider results across wrapped lines, activeLine should be something like `activeRange: {startY, endY}`\n    // Check if we need to clear the link\n    if (this._activeLine !== position.y) {\n      this._clearCurrentLink();\n      this._askForLink(position, false);\n      return;\n    }\n\n    // Check the if the link is in the mouse position\n    const isCurrentLinkInPosition = this._currentLink && this._linkAtPosition(this._currentLink.link, position);\n    if (!isCurrentLinkInPosition) {\n      this._clearCurrentLink();\n      this._askForLink(position, true);\n    }\n  }\n\n  private _askForLink(position: IBufferCellPosition, useLineCache: boolean): void {\n    if (!this._activeProviderReplies || !useLineCache) {\n      this._activeProviderReplies?.forEach(reply => {\n        reply?.forEach(linkWithState => {\n          if (linkWithState.link.dispose) {\n            linkWithState.link.dispose();\n          }\n        });\n      });\n      this._activeProviderReplies = new Map();\n      this._activeLine = position.y;\n    }\n    let linkProvided = false;\n\n    // There is no link cached, so ask for one\n    for (const [i, linkProvider] of this._linkProviders.entries()) {\n      if (useLineCache) {\n        const existingReply = this._activeProviderReplies?.get(i);\n        // If there isn't a reply, the provider hasn't responded yet.\n\n        // TODO: If there isn't a reply yet it means that the provider is still resolving. Ensuring\n        // provideLinks isn't triggered again saves ILink.hover firing twice though. This probably\n        // needs promises to get fixed\n        if (existingReply) {\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n        }\n      } else {\n        linkProvider.provideLinks(position.y, (links: ILink[] | undefined) => {\n          if (this._isMouseOut) {\n            return;\n          }\n          const linksWithState: ILinkWithState[] | undefined = links?.map(link  => ({ link }));\n          this._activeProviderReplies?.set(i, linksWithState);\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n\n          // If all providers have responded, remove lower priority links that intersect ranges of\n          // higher priority links\n          if (this._activeProviderReplies?.size === this._linkProviders.length) {\n            this._removeIntersectingLinks(position.y, this._activeProviderReplies);\n          }\n        });\n      }\n    }\n  }\n\n  private _removeIntersectingLinks(y: number, replies: Map<Number, ILinkWithState[] | undefined>): void {\n    const occupiedCells = new Set<number>();\n    for (let i = 0; i < replies.size; i++) {\n      const providerReply = replies.get(i);\n      if (!providerReply) {\n        continue;\n      }\n      for (let i = 0; i < providerReply.length; i++) {\n        const linkWithState = providerReply[i];\n        const startX = linkWithState.link.range.start.y < y ? 0 : linkWithState.link.range.start.x;\n        const endX = linkWithState.link.range.end.y > y ? this._bufferService.cols : linkWithState.link.range.end.x;\n        for (let x = startX; x <= endX; x++) {\n          if (occupiedCells.has(x)) {\n            providerReply.splice(i--, 1);\n            break;\n          }\n          occupiedCells.add(x);\n        }\n      }\n    }\n  }\n\n  private _checkLinkProviderResult(index: number, position: IBufferCellPosition, linkProvided: boolean): boolean {\n    if (!this._activeProviderReplies) {\n      return linkProvided;\n    }\n\n    const links = this._activeProviderReplies.get(index);\n\n    // Check if every provider before this one has come back undefined\n    let hasLinkBefore = false;\n    for (let j = 0; j < index; j++) {\n      if (!this._activeProviderReplies.has(j) || this._activeProviderReplies.get(j)) {\n        hasLinkBefore = true;\n      }\n    }\n\n    // If all providers with higher priority came back undefined, then this provider's link for\n    // the position should be used\n    if (!hasLinkBefore && links) {\n      const linkAtPosition = links.find(link => this._linkAtPosition(link.link, position));\n      if (linkAtPosition) {\n        linkProvided = true;\n        this._handleNewLink(linkAtPosition);\n      }\n    }\n\n    // Check if all the providers have responded\n    if (this._activeProviderReplies.size === this._linkProviders.length && !linkProvided) {\n      // Respect the order of the link providers\n      for (let j = 0; j < this._activeProviderReplies.size; j++) {\n        const currentLink = this._activeProviderReplies.get(j)?.find(link => this._linkAtPosition(link.link, position));\n        if (currentLink) {\n          linkProvided = true;\n          this._handleNewLink(currentLink);\n          break;\n        }\n      }\n    }\n\n    return linkProvided;\n  }\n\n  private _handleMouseDown(): void {\n    this._mouseDownLink = this._currentLink;\n  }\n\n  private _handleMouseUp(event: MouseEvent): void {\n    if (!this._element || !this._mouseService || !this._currentLink) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n\n    if (this._mouseDownLink === this._currentLink && this._linkAtPosition(this._currentLink.link, position)) {\n      this._currentLink.link.activate(event, this._currentLink.link.text);\n    }\n  }\n\n  private _clearCurrentLink(startRow?: number, endRow?: number): void {\n    if (!this._element || !this._currentLink || !this._lastMouseEvent) {\n      return;\n    }\n\n    // If we have a start and end row, check that the link is within it\n    if (!startRow || !endRow || (this._currentLink.link.range.start.y >= startRow && this._currentLink.link.range.end.y <= endRow)) {\n      this._linkLeave(this._element, this._currentLink.link, this._lastMouseEvent);\n      this._currentLink = undefined;\n      disposeArray(this._linkCacheDisposables);\n    }\n  }\n\n  private _handleNewLink(linkWithState: ILinkWithState): void {\n    if (!this._element || !this._lastMouseEvent || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    // Trigger hover if the we have a link at the position\n    if (this._linkAtPosition(linkWithState.link, position)) {\n      this._currentLink = linkWithState;\n      this._currentLink.state = {\n        decorations: {\n          underline: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.underline,\n          pointerCursor: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.pointerCursor\n        },\n        isHovered: true\n      };\n      this._linkHover(this._element, linkWithState.link, this._lastMouseEvent);\n\n      // Add listener for tracking decorations changes\n      linkWithState.link.decorations = {} as ILinkDecorations;\n      Object.defineProperties(linkWithState.link.decorations, {\n        pointerCursor: {\n          get: () => this._currentLink?.state?.decorations.pointerCursor,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink.state.decorations.pointerCursor !== v) {\n              this._currentLink.state.decorations.pointerCursor = v;\n              if (this._currentLink.state.isHovered) {\n                this._element?.classList.toggle('xterm-cursor-pointer', v);\n              }\n            }\n          }\n        },\n        underline: {\n          get: () => this._currentLink?.state?.decorations.underline,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink?.state?.decorations.underline !== v) {\n              this._currentLink.state.decorations.underline = v;\n              if (this._currentLink.state.isHovered) {\n                this._fireUnderlineEvent(linkWithState.link, v);\n              }\n            }\n          }\n        }\n      });\n\n      // Add listener for rerendering\n      if (this._renderService) {\n        this._linkCacheDisposables.push(this._renderService.onRenderedViewportChange(e => {\n          // When start is 0 a scroll most likely occurred, make sure links above the fold also get\n          // cleared.\n          const start = e.start === 0 ? 0 : e.start + 1 + this._bufferService.buffer.ydisp;\n          const oldEvent = this._currentLink ? this._lastMouseEvent : undefined;\n          this._clearCurrentLink(start, e.end + 1 + this._bufferService.buffer.ydisp);\n          if (oldEvent && this._element) {\n            // re-eval previously active link after changes\n            const position = this._positionFromMouseEvent(oldEvent, this._element, this._mouseService!);\n            if (position) {\n              this._askForLink(position, false);\n            }\n          }\n        }));\n      }\n    }\n  }\n\n  protected _linkHover(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = true;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, true);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.add('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.hover) {\n      link.hover(event, link.text);\n    }\n  }\n\n  private _fireUnderlineEvent(link: ILink, showEvent: boolean): void {\n    const range = link.range;\n    const scrollOffset = this._bufferService.buffer.ydisp;\n    const event = this._createLinkUnderlineEvent(range.start.x - 1, range.start.y - scrollOffset - 1, range.end.x, range.end.y - scrollOffset - 1, undefined);\n    const emitter = showEvent ? this._onShowLinkUnderline : this._onHideLinkUnderline;\n    emitter.fire(event);\n  }\n\n  protected _linkLeave(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = false;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, false);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.remove('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.leave) {\n      link.leave(event, link.text);\n    }\n  }\n\n  /**\n   * Check if the buffer position is within the link\n   * @param link\n   * @param position\n   */\n  private _linkAtPosition(link: ILink, position: IBufferCellPosition): boolean {\n    const lower = link.range.start.y * this._bufferService.cols + link.range.start.x;\n    const upper = link.range.end.y * this._bufferService.cols + link.range.end.x;\n    const current = position.y * this._bufferService.cols + position.x;\n    return (lower <= current && current <= upper);\n  }\n\n  /**\n   * Get the buffer position from a mouse event\n   * @param event\n   */\n  private _positionFromMouseEvent(event: MouseEvent, element: HTMLElement, mouseService: IMouseService): IBufferCellPosition | undefined {\n    const coords = mouseService.getCoords(event, element, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return;\n    }\n\n    return { x: coords[0], y: coords[1] + this._bufferService.buffer.ydisp };\n  }\n\n  private _createLinkUnderlineEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// This file contains strings that get exported in the API so they can be localized\n\n// eslint-disable-next-line prefer-const\nexport let promptLabel = 'Terminal input';\n\n// eslint-disable-next-line prefer-const\nexport let tooMuchOutput = 'Too much output to announce, navigate to rows manually to read';\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange, ILink, ILinkProvider } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService, IOptionsService, IOscLinkService } from 'common/services/Services';\n\nexport class OscLinkProvider implements ILinkProvider {\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IOscLinkService private readonly _oscLinkService: IOscLinkService\n  ) {\n  }\n\n  public provideLinks(y: number, callback: (links: ILink[] | undefined) => void): void {\n    const line = this._bufferService.buffer.lines.get(y - 1);\n    if (!line) {\n      callback(undefined);\n      return;\n    }\n\n    const result: ILink[] = [];\n    const linkHandler = this._optionsService.rawOptions.linkHandler;\n    const cell = new CellData();\n    const lineLength = line.getTrimmedLength();\n    let currentLinkId = -1;\n    let currentStart = -1;\n    let finishLink = false;\n    for (let x = 0; x < lineLength; x++) {\n      // Minor optimization, only check for content if there isn't a link in case the link ends with\n      // a null cell\n      if (currentStart === -1 && !line.hasContent(x)) {\n        continue;\n      }\n\n      line.loadCell(x, cell);\n      if (cell.hasExtendedAttrs() && cell.extended.urlId) {\n        if (currentStart === -1) {\n          currentStart = x;\n          currentLinkId = cell.extended.urlId;\n          continue;\n        } else {\n          finishLink = cell.extended.urlId !== currentLinkId;\n        }\n      } else {\n        if (currentStart !== -1) {\n          finishLink = true;\n        }\n      }\n\n      if (finishLink || (currentStart !== -1 && x === lineLength - 1)) {\n        const text = this._oscLinkService.getLinkData(currentLinkId)?.uri;\n        if (text) {\n          // These ranges are 1-based\n          const range: IBufferRange = {\n            start: {\n              x: currentStart + 1,\n              y\n            },\n            end: {\n              // Offset end x if it's a link that ends on the last cell in the line\n              x: x + (!finishLink && x === lineLength - 1 ? 1 : 0),\n              y\n            }\n          };\n\n          let ignoreLink = false;\n          if (!linkHandler?.allowNonHttpProtocols) {\n            try {\n              const parsed = new URL(text);\n              if (!['http:', 'https:'].includes(parsed.protocol)) {\n                ignoreLink = true;\n              }\n            } catch (e) {\n              // Ignore invalid URLs to prevent unexpected behaviors\n              ignoreLink = true;\n            }\n          }\n\n          if (!ignoreLink) {\n            // OSC links always use underline and pointer decorations\n            result.push({\n              text,\n              range,\n              activate: (e, text) => (linkHandler ? linkHandler.activate(e, text, range) : defaultActivate(e, text)),\n              hover: (e, text) => linkHandler?.hover?.(e, text, range),\n              leave: (e, text) => linkHandler?.leave?.(e, text, range)\n            });\n          }\n        }\n        finishLink = false;\n\n        // Clear link or start a new link if one starts immediately\n        if (cell.hasExtendedAttrs() && cell.extended.urlId) {\n          currentStart = x;\n          currentLinkId = cell.extended.urlId;\n        } else {\n          currentStart = -1;\n          currentLinkId = -1;\n        }\n      }\n    }\n\n    // TODO: Handle fetching and returning other link ranges to underline other links with the same id\n    callback(result);\n  }\n}\n\nfunction defaultActivate(e: MouseEvent, uri: string): void {\n  const answer = confirm(`Do you want to navigate to ${uri}?\\n\\nWARNING: This link could potentially be dangerous`);\n  if (answer) {\n    const newWindow = window.open();\n    if (newWindow) {\n      try {\n        newWindow.opener = null;\n      } catch {\n        // no-op, Electron can throw\n      }\n      newWindow.location.href = uri;\n    } else {\n      console.warn('Opening link blocked as opener could not be cleared');\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDebouncerWithCallback } from 'browser/Types';\n\n/**\n * Debounces calls to render terminal rows using animation frames.\n */\nexport class RenderDebouncer implements IRenderDebouncerWithCallback {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n  private _animationFrame: number | undefined;\n  private _refreshCallbacks: FrameRequestCallback[] = [];\n\n  constructor(\n    private _parentWindow: Window,\n    private _renderCallback: (start: number, end: number) => void\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._animationFrame) {\n      this._parentWindow.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    this._refreshCallbacks.push(callback);\n    if (!this._animationFrame) {\n      this._animationFrame = this._parentWindow.requestAnimationFrame(() => this._innerRefresh());\n    }\n    return this._animationFrame;\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    if (this._animationFrame) {\n      return;\n    }\n\n    this._animationFrame = this._parentWindow.requestAnimationFrame(() => this._innerRefresh());\n  }\n\n  private _innerRefresh(): void {\n    this._animationFrame = undefined;\n\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      this._runRefreshCallbacks();\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n    this._runRefreshCallbacks();\n  }\n\n  private _runRefreshCallbacks(): void {\n    for (const callback of this._refreshCallbacks) {\n      callback(0);\n    }\n    this._refreshCallbacks = [];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable, toDisposable } from 'common/Lifecycle';\n\nexport type ScreenDprListener = (newDevicePixelRatio?: number, oldDevicePixelRatio?: number) => void;\n\n/**\n * The screen device pixel ratio monitor allows listening for when the\n * window.devicePixelRatio value changes. This is done not with polling but with\n * the use of window.matchMedia to watch media queries. When the event fires,\n * the listener will be reattached using a different media query to ensure that\n * any further changes will register.\n *\n * The listener should fire on both window zoom changes and switching to a\n * monitor with a different DPI.\n */\nexport class ScreenDprMonitor extends Disposable {\n  private _currentDevicePixelRatio: number;\n  private _outerListener: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | undefined;\n  private _listener: ScreenDprListener | undefined;\n  private _resolutionMediaMatchList: MediaQueryList | undefined;\n\n  constructor(private _parentWindow: Window) {\n    super();\n    this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio;\n    this.register(toDisposable(() => {\n      this.clearListener();\n    }));\n  }\n\n  public setListener(listener: ScreenDprListener): void {\n    if (this._listener) {\n      this.clearListener();\n    }\n    this._listener = listener;\n    this._outerListener = () => {\n      if (!this._listener) {\n        return;\n      }\n      this._listener(this._parentWindow.devicePixelRatio, this._currentDevicePixelRatio);\n      this._updateDpr();\n    };\n    this._updateDpr();\n  }\n\n  private _updateDpr(): void {\n    if (!this._outerListener) {\n      return;\n    }\n\n    // Clear listeners for old DPR\n    this._resolutionMediaMatchList?.removeListener(this._outerListener);\n\n    // Add listeners for new DPR\n    this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio;\n    this._resolutionMediaMatchList = this._parentWindow.matchMedia(`screen and (resolution: ${this._parentWindow.devicePixelRatio}dppx)`);\n    this._resolutionMediaMatchList.addListener(this._outerListener);\n  }\n\n  public clearListener(): void {\n    if (!this._resolutionMediaMatchList || !this._listener || !this._outerListener) {\n      return;\n    }\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n    this._resolutionMediaMatchList = undefined;\n    this._listener = undefined;\n    this._outerListener = undefined;\n  }\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { ICompositionHelper, ITerminal, IBrowser, CustomKeyEventHandler, IViewport, ILinkifier2, CharacterJoinerHandler, IBufferRange } from 'browser/Types';\nimport { IRenderer } from 'browser/renderer/shared/Types';\nimport { CompositionHelper } from 'browser/input/CompositionHelper';\nimport { Viewport } from 'browser/Viewport';\nimport { rightClickHandler, moveTextAreaUnderMouseCursor, handlePasteEvent, copyHandler, paste } from 'browser/Clipboard';\nimport { C0, C1_ESCAPED } from 'common/data/EscapeSequences';\nimport { WindowsOptionsReportType } from '../common/InputHandler';\nimport { SelectionService } from 'browser/services/SelectionService';\nimport * as Browser from 'common/Platform';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { AccessibilityManager } from './AccessibilityManager';\nimport { ITheme, IMarker, IDisposable, ILinkProvider, IDecorationOptions, IDecoration } from 'xterm';\nimport { DomRenderer } from 'browser/renderer/dom/DomRenderer';\nimport { KeyboardResultType, CoreMouseEventType, CoreMouseButton, CoreMouseAction, ITerminalOptions, ScrollSource, IColorEvent, ColorIndex, ColorRequestType } from 'common/Types';\nimport { evaluateKeyboardEvent } from 'common/input/Keyboard';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { RenderService } from 'browser/services/RenderService';\nimport { ICharSizeService, IRenderService, IMouseService, ISelectionService, ICoreBrowserService, ICharacterJoinerService, IThemeService } from 'browser/services/Services';\nimport { CharSizeService } from 'browser/services/CharSizeService';\nimport { IBuffer } from 'common/buffer/Types';\nimport { MouseService } from 'browser/services/MouseService';\nimport { Linkifier2 } from 'browser/Linkifier2';\nimport { CoreBrowserService } from 'browser/services/CoreBrowserService';\nimport { CoreTerminal } from 'common/CoreTerminal';\nimport { color, rgba } from 'common/Color';\nimport { CharacterJoinerService } from 'browser/services/CharacterJoinerService';\nimport { toRgbString } from 'common/input/XParseColor';\nimport { BufferDecorationRenderer } from 'browser/decorations/BufferDecorationRenderer';\nimport { OverviewRulerRenderer } from 'browser/decorations/OverviewRulerRenderer';\nimport { DecorationService } from 'common/services/DecorationService';\nimport { IDecorationService } from 'common/services/Services';\nimport { OscLinkProvider } from 'browser/OscLinkProvider';\nimport { toDisposable } from 'common/Lifecycle';\nimport { ThemeService } from 'browser/services/ThemeService';\n\n// Let it work inside Node.js for automated testing purposes.\nconst document: Document = (typeof window !== 'undefined') ? window.document : null as any;\n\nexport class Terminal extends CoreTerminal implements ITerminal {\n  public textarea: HTMLTextAreaElement | undefined;\n  public element: HTMLElement | undefined;\n  public screenElement: HTMLElement | undefined;\n\n  private _document: Document | undefined;\n  private _viewportScrollArea: HTMLElement | undefined;\n  private _viewportElement: HTMLElement | undefined;\n  private _helperContainer: HTMLElement | undefined;\n  private _compositionView: HTMLElement | undefined;\n\n  private _overviewRulerRenderer: OverviewRulerRenderer | undefined;\n\n  // private _visualBellTimer: number;\n\n  public browser: IBrowser = Browser as any;\n\n  private _customKeyEventHandler: CustomKeyEventHandler | undefined;\n\n  // browser services\n  private _decorationService: DecorationService;\n  private _charSizeService: ICharSizeService | undefined;\n  private _coreBrowserService: ICoreBrowserService | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _themeService: IThemeService | undefined;\n  private _characterJoinerService: ICharacterJoinerService | undefined;\n  private _selectionService: ISelectionService | undefined;\n\n  /**\n   * Records whether the keydown event has already been handled and triggered a data event, if so\n   * the keypress event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyDownHandled: boolean = false;\n\n  /**\n   * Records whether a keydown event has occured since the last keyup event, i.e. whether a key\n   * is currently \"pressed\".\n   */\n  private _keyDownSeen: boolean = false;\n\n  /**\n   * Records whether the keypress event has already been handled and triggered a data event, if so\n   * the input event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyPressHandled: boolean = false;\n\n  /**\n   * Records whether there has been a keydown event for a dead key without a corresponding keydown\n   * event for the composed/alternative character. If we cancel the keydown event for the dead key,\n   * no events will be emitted for the final character.\n   */\n  private _unprocessedDeadKey: boolean = false;\n\n  public linkifier2: ILinkifier2;\n  public viewport: IViewport | undefined;\n  private _compositionHelper: ICompositionHelper | undefined;\n  private _accessibilityManager: AccessibilityManager | undefined;\n\n  private readonly _onCursorMove = this.register(new EventEmitter<void>());\n  public readonly onCursorMove = this._onCursorMove.event;\n  private readonly _onKey = this.register(new EventEmitter<{ key: string, domEvent: KeyboardEvent }>());\n  public readonly onKey = this._onKey.event;\n  private readonly _onRender = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRender = this._onRender.event;\n  private readonly _onSelectionChange = this.register(new EventEmitter<void>());\n  public readonly onSelectionChange = this._onSelectionChange.event;\n  private readonly _onTitleChange = this.register(new EventEmitter<string>());\n  public readonly onTitleChange = this._onTitleChange.event;\n  private readonly _onBell = this.register(new EventEmitter<void>());\n  public readonly onBell = this._onBell.event;\n\n  private _onFocus = this.register(new EventEmitter<void>());\n  public get onFocus(): IEvent<void> { return this._onFocus.event; }\n  private _onBlur = this.register(new EventEmitter<void>());\n  public get onBlur(): IEvent<void> { return this._onBlur.event; }\n  private _onA11yCharEmitter = this.register(new EventEmitter<string>());\n  public get onA11yChar(): IEvent<string> { return this._onA11yCharEmitter.event; }\n  private _onA11yTabEmitter = this.register(new EventEmitter<number>());\n  public get onA11yTab(): IEvent<number> { return this._onA11yTabEmitter.event; }\n  private _onWillOpen = this.register(new EventEmitter<HTMLElement>());\n  public get onWillOpen(): IEvent<HTMLElement> { return this._onWillOpen.event; }\n\n  /**\n   * Creates a new `Terminal` object.\n   *\n   * @param options An object containing a set of options, the available options are:\n   *   - `cursorBlink` (boolean): Whether the terminal cursor blinks\n   *   - `cols` (number): The number of columns of the terminal (horizontal size)\n   *   - `rows` (number): The number of rows of the terminal (vertical size)\n   *\n   * @public\n   * @class Xterm Xterm\n   * @alias module:xterm/src/xterm\n   */\n  constructor(\n    options: Partial<ITerminalOptions> = {}\n  ) {\n    super(options);\n\n    this._setup();\n\n    this.linkifier2 = this.register(this._instantiationService.createInstance(Linkifier2));\n    this.linkifier2.registerLinkProvider(this._instantiationService.createInstance(OscLinkProvider));\n    this._decorationService = this._instantiationService.createInstance(DecorationService);\n    this._instantiationService.setService(IDecorationService, this._decorationService);\n\n    // Setup InputHandler listeners\n    this.register(this._inputHandler.onRequestBell(() => this._onBell.fire()));\n    this.register(this._inputHandler.onRequestRefreshRows((start, end) => this.refresh(start, end)));\n    this.register(this._inputHandler.onRequestSendFocus(() => this._reportFocus()));\n    this.register(this._inputHandler.onRequestReset(() => this.reset()));\n    this.register(this._inputHandler.onRequestWindowsOptionsReport(type => this._reportWindowsOptions(type)));\n    this.register(this._inputHandler.onColor((event) => this._handleColorEvent(event)));\n    this.register(forwardEvent(this._inputHandler.onCursorMove, this._onCursorMove));\n    this.register(forwardEvent(this._inputHandler.onTitleChange, this._onTitleChange));\n    this.register(forwardEvent(this._inputHandler.onA11yChar, this._onA11yCharEmitter));\n    this.register(forwardEvent(this._inputHandler.onA11yTab, this._onA11yTabEmitter));\n\n    // Setup listeners\n    this.register(this._bufferService.onResize(e => this._afterResize(e.cols, e.rows)));\n\n    this.register(toDisposable(() => {\n      this._customKeyEventHandler = undefined;\n      this.element?.parentNode?.removeChild(this.element);\n    }));\n  }\n\n  /**\n   * Handle color event from inputhandler for OSC 4|104 | 10|110 | 11|111 | 12|112.\n   * An event from OSC 4|104 may contain multiple set or report requests, and multiple\n   * or none restore requests (resetting all),\n   * while an event from OSC 10|110 | 11|111 | 12|112 always contains a single request.\n   */\n  private _handleColorEvent(event: IColorEvent): void {\n    if (!this._themeService) return;\n    for (const req of event) {\n      let acc: 'foreground' | 'background' | 'cursor' | 'ansi';\n      let ident = '';\n      switch (req.index) {\n        case ColorIndex.FOREGROUND: // OSC 10 | 110\n          acc = 'foreground';\n          ident = '10';\n          break;\n        case ColorIndex.BACKGROUND: // OSC 11 | 111\n          acc = 'background';\n          ident = '11';\n          break;\n        case ColorIndex.CURSOR: // OSC 12 | 112\n          acc = 'cursor';\n          ident = '12';\n          break;\n        default: // OSC 4 | 104\n          // we can skip the [0..255] range check here (already done in inputhandler)\n          acc = 'ansi';\n          ident = '4;' + req.index;\n      }\n      switch (req.type) {\n        case ColorRequestType.REPORT:\n          const channels = color.toColorRGB(acc === 'ansi'\n            ? this._themeService.colors.ansi[req.index]\n            : this._themeService.colors[acc]);\n          this.coreService.triggerDataEvent(`${C0.ESC}]${ident};${toRgbString(channels)}${C1_ESCAPED.ST}`);\n          break;\n        case ColorRequestType.SET:\n          if (acc === 'ansi') {\n            this._themeService.modifyColors(colors => colors.ansi[req.index] = rgba.toColor(...req.color));\n          } else {\n            const narrowedAcc = acc;\n            this._themeService.modifyColors(colors => colors[narrowedAcc] = rgba.toColor(...req.color));\n          }\n          break;\n        case ColorRequestType.RESTORE:\n          this._themeService.restoreColor(req.index);\n          break;\n      }\n    }\n  }\n\n  protected _setup(): void {\n    super._setup();\n\n    this._customKeyEventHandler = undefined;\n  }\n\n  /**\n   * Convenience property to active buffer.\n   */\n  public get buffer(): IBuffer {\n    return this.buffers.active;\n  }\n\n  /**\n   * Focus the terminal. Delegates focus handling to the terminal's DOM element.\n   */\n  public focus(): void {\n    if (this.textarea) {\n      this.textarea.focus({ preventScroll: true });\n    }\n  }\n\n  private _handleScreenReaderModeOptionChange(value: boolean): void {\n    if (value) {\n      if (!this._accessibilityManager && this._renderService) {\n        this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n      }\n    } else {\n      this._accessibilityManager?.dispose();\n      this._accessibilityManager = undefined;\n    }\n  }\n\n  /**\n   * Binds the desired focus behavior on a given terminal object.\n   */\n  private _handleTextAreaFocus(ev: KeyboardEvent): void {\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    }\n    this.updateCursorStyle(ev);\n    this.element!.classList.add('focus');\n    this._showCursor();\n    this._onFocus.fire();\n  }\n\n  /**\n   * Blur the terminal, calling the blur function on the terminal's underlying\n   * textarea.\n   */\n  public blur(): void {\n    return this.textarea?.blur();\n  }\n\n  /**\n   * Binds the desired blur behavior on a given terminal object.\n   */\n  private _handleTextAreaBlur(): void {\n    // Text can safely be removed on blur. Doing it earlier could interfere with\n    // screen readers reading it out.\n    this.textarea!.value = '';\n    this.refresh(this.buffer.y, this.buffer.y);\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n    this.element!.classList.remove('focus');\n    this._onBlur.fire();\n  }\n\n  private _syncTextArea(): void {\n    if (!this.textarea || !this.buffer.isCursorInViewport || this._compositionHelper!.isComposing || !this._renderService) {\n      return;\n    }\n    const cursorY = this.buffer.ybase + this.buffer.y;\n    const bufferLine = this.buffer.lines.get(cursorY);\n    if (!bufferLine) {\n      return;\n    }\n    const cursorX = Math.min(this.buffer.x, this.cols - 1);\n    const cellHeight = this._renderService.dimensions.css.cell.height;\n    const width = bufferLine.getWidth(cursorX);\n    const cellWidth = this._renderService.dimensions.css.cell.width * width;\n    const cursorTop = this.buffer.y * this._renderService.dimensions.css.cell.height;\n    const cursorLeft = cursorX * this._renderService.dimensions.css.cell.width;\n\n    // Sync the textarea to the exact position of the composition view so the IME knows where the\n    // text is.\n    this.textarea.style.left = cursorLeft + 'px';\n    this.textarea.style.top = cursorTop + 'px';\n    this.textarea.style.width = cellWidth + 'px';\n    this.textarea.style.height = cellHeight + 'px';\n    this.textarea.style.lineHeight = cellHeight + 'px';\n    this.textarea.style.zIndex = '-5';\n  }\n\n  /**\n   * Initialize default behavior\n   */\n  private _initGlobal(): void {\n    this._bindKeys();\n\n    // Bind clipboard functionality\n    this.register(addDisposableDomListener(this.element!, 'copy', (event: ClipboardEvent) => {\n      // If mouse events are active it means the selection manager is disabled and\n      // copy should be handled by the host program.\n      if (!this.hasSelection()) {\n        return;\n      }\n      copyHandler(event, this._selectionService!);\n    }));\n    const pasteHandlerWrapper = (event: ClipboardEvent): void => handlePasteEvent(event, this.textarea!, this.coreService);\n    this.register(addDisposableDomListener(this.textarea!, 'paste', pasteHandlerWrapper));\n    this.register(addDisposableDomListener(this.element!, 'paste', pasteHandlerWrapper));\n\n    // Handle right click context menus\n    if (Browser.isFirefox) {\n      // Firefox doesn't appear to fire the contextmenu event on right click\n      this.register(addDisposableDomListener(this.element!, 'mousedown', (event: MouseEvent) => {\n        if (event.button === 2) {\n          rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n        }\n      }));\n    } else {\n      this.register(addDisposableDomListener(this.element!, 'contextmenu', (event: MouseEvent) => {\n        rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n      }));\n    }\n\n    // Move the textarea under the cursor when middle clicking on Linux to ensure\n    // middle click to paste selection works. This only appears to work in Chrome\n    // at the time is writing.\n    if (Browser.isLinux) {\n      // Use auxclick event over mousedown the latter doesn't seem to work. Note\n      // that the regular click event doesn't fire for the middle mouse button.\n      this.register(addDisposableDomListener(this.element!, 'auxclick', (event: MouseEvent) => {\n        if (event.button === 1) {\n          moveTextAreaUnderMouseCursor(event, this.textarea!, this.screenElement!);\n        }\n      }));\n    }\n  }\n\n  /**\n   * Apply key handling to the terminal\n   */\n  private _bindKeys(): void {\n    this.register(addDisposableDomListener(this.textarea!, 'keyup', (ev: KeyboardEvent) => this._keyUp(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keydown', (ev: KeyboardEvent) => this._keyDown(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keypress', (ev: KeyboardEvent) => this._keyPress(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionstart', () => this._compositionHelper!.compositionstart()));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionupdate', (e: CompositionEvent) => this._compositionHelper!.compositionupdate(e)));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionend', () => this._compositionHelper!.compositionend()));\n    this.register(addDisposableDomListener(this.textarea!, 'input', (ev: InputEvent) => this._inputEvent(ev), true));\n    this.register(this.onRender(() => this._compositionHelper!.updateCompositionElements()));\n  }\n\n  /**\n   * Opens the terminal within an element.\n   *\n   * @param parent The element to create the terminal within.\n   */\n  public open(parent: HTMLElement): void {\n    if (!parent) {\n      throw new Error('Terminal requires a parent element.');\n    }\n\n    if (!parent.isConnected) {\n      this._logService.debug('Terminal.open was called on an element that was not attached to the DOM');\n    }\n\n    this._document = parent.ownerDocument!;\n\n    // Create main element container\n    this.element = this._document.createElement('div');\n    this.element.dir = 'ltr';   // xterm.css assumes LTR\n    this.element.classList.add('terminal');\n    this.element.classList.add('xterm');\n    this.element.setAttribute('tabindex', '0');\n    parent.appendChild(this.element);\n\n    // Performance: Use a document fragment to build the terminal\n    // viewport and helper elements detached from the DOM\n    const fragment = document.createDocumentFragment();\n    this._viewportElement = document.createElement('div');\n    this._viewportElement.classList.add('xterm-viewport');\n    fragment.appendChild(this._viewportElement);\n\n    this._viewportScrollArea = document.createElement('div');\n    this._viewportScrollArea.classList.add('xterm-scroll-area');\n    this._viewportElement.appendChild(this._viewportScrollArea);\n\n    this.screenElement = document.createElement('div');\n    this.screenElement.classList.add('xterm-screen');\n    // Create the container that will hold helpers like the textarea for\n    // capturing DOM Events. Then produce the helpers.\n    this._helperContainer = document.createElement('div');\n    this._helperContainer.classList.add('xterm-helpers');\n    this.screenElement.appendChild(this._helperContainer);\n    fragment.appendChild(this.screenElement);\n\n    this.textarea = document.createElement('textarea');\n    this.textarea.classList.add('xterm-helper-textarea');\n    this.textarea.setAttribute('aria-label', Strings.promptLabel);\n    if (!Browser.isChromeOS) {\n      // ChromeVox on ChromeOS does not like this. See\n      // https://issuetracker.google.com/issues/260170397\n      this.textarea.setAttribute('aria-multiline', 'false');\n    }\n    this.textarea.setAttribute('autocorrect', 'off');\n    this.textarea.setAttribute('autocapitalize', 'off');\n    this.textarea.setAttribute('spellcheck', 'false');\n    this.textarea.tabIndex = 0;\n\n    // Register the core browser service before the generic textarea handlers are registered so it\n    // handles them first. Otherwise the renderers may use the wrong focus state.\n    this._coreBrowserService = this._instantiationService.createInstance(CoreBrowserService, this.textarea, this._document.defaultView ?? window);\n    this._instantiationService.setService(ICoreBrowserService, this._coreBrowserService);\n\n    this.register(addDisposableDomListener(this.textarea, 'focus', (ev: KeyboardEvent) => this._handleTextAreaFocus(ev)));\n    this.register(addDisposableDomListener(this.textarea, 'blur', () => this._handleTextAreaBlur()));\n    this._helperContainer.appendChild(this.textarea);\n\n\n    this._charSizeService = this._instantiationService.createInstance(CharSizeService, this._document, this._helperContainer);\n    this._instantiationService.setService(ICharSizeService, this._charSizeService);\n\n    this._themeService = this._instantiationService.createInstance(ThemeService);\n    this._instantiationService.setService(IThemeService, this._themeService);\n\n    this._characterJoinerService = this._instantiationService.createInstance(CharacterJoinerService);\n    this._instantiationService.setService(ICharacterJoinerService, this._characterJoinerService);\n\n    this._renderService = this.register(this._instantiationService.createInstance(RenderService, this.rows, this.screenElement));\n    this._instantiationService.setService(IRenderService, this._renderService);\n    this.register(this._renderService.onRenderedViewportChange(e => this._onRender.fire(e)));\n    this.onResize(e => this._renderService!.resize(e.cols, e.rows));\n\n    this._compositionView = document.createElement('div');\n    this._compositionView.classList.add('composition-view');\n    this._compositionHelper = this._instantiationService.createInstance(CompositionHelper, this.textarea, this._compositionView);\n    this._helperContainer.appendChild(this._compositionView);\n\n    // Performance: Add viewport and helper elements from the fragment\n    this.element.appendChild(fragment);\n\n    try {\n      this._onWillOpen.fire(this.element);\n    }\n    catch { /* fails to load addon for some reason */ }\n    if (!this._renderService.hasRenderer()) {\n      this._renderService.setRenderer(this._createRenderer());\n    }\n\n    this._mouseService = this._instantiationService.createInstance(MouseService);\n    this._instantiationService.setService(IMouseService, this._mouseService);\n\n    this.viewport = this._instantiationService.createInstance(Viewport,\n      (amount: number) => this.scrollLines(amount, true, ScrollSource.VIEWPORT),\n      this._viewportElement,\n      this._viewportScrollArea\n    );\n    this.register(this._inputHandler.onRequestSyncScrollBar(() => this.viewport!.syncScrollArea()));\n    this.register(this.viewport);\n\n    this.register(this.onCursorMove(() => {\n      this._renderService!.handleCursorMove();\n      this._syncTextArea();\n    }));\n    this.register(this.onResize(() => this._renderService!.handleResize(this.cols, this.rows)));\n    this.register(this.onBlur(() => this._renderService!.handleBlur()));\n    this.register(this.onFocus(() => this._renderService!.handleFocus()));\n    this.register(this._renderService.onDimensionsChange(() => this.viewport!.syncScrollArea()));\n\n    this._selectionService = this.register(this._instantiationService.createInstance(SelectionService,\n      this.element,\n      this.screenElement,\n      this.linkifier2\n    ));\n    this._instantiationService.setService(ISelectionService, this._selectionService);\n    this.register(this._selectionService.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent)));\n    this.register(this._selectionService.onSelectionChange(() => this._onSelectionChange.fire()));\n    this.register(this._selectionService.onRequestRedraw(e => this._renderService!.handleSelectionChanged(e.start, e.end, e.columnSelectMode)));\n    this.register(this._selectionService.onLinuxMouseSelection(text => {\n      // If there's a new selection, put it into the textarea, focus and select it\n      // in order to register it as a selection on the OS. This event is fired\n      // only on Linux to enable middle click to paste selection.\n      this.textarea!.value = text;\n      this.textarea!.focus();\n      this.textarea!.select();\n    }));\n    this.register(this._onScroll.event(ev => {\n      this.viewport!.syncScrollArea();\n      this._selectionService!.refresh();\n    }));\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', () => this._selectionService!.refresh()));\n\n    this.linkifier2.attachToDom(this.screenElement, this._mouseService, this._renderService);\n    this.register(this._instantiationService.createInstance(BufferDecorationRenderer, this.screenElement));\n    this.register(addDisposableDomListener(this.element, 'mousedown', (e: MouseEvent) => this._selectionService!.handleMouseDown(e)));\n\n    // apply mouse event classes set by escape codes before terminal was attached\n    if (this.coreMouseService.areMouseEventsActive) {\n      this._selectionService.disable();\n      this.element.classList.add('enable-mouse-events');\n    } else {\n      this._selectionService.enable();\n    }\n\n    if (this.options.screenReaderMode) {\n      // Note that this must be done *after* the renderer is created in order to\n      // ensure the correct order of the dprchange event\n      this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n    }\n    this.register(this.optionsService.onSpecificOptionChange('screenReaderMode', e => this._handleScreenReaderModeOptionChange(e)));\n\n    if (this.options.overviewRulerWidth) {\n      this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement));\n    }\n    this.optionsService.onSpecificOptionChange('overviewRulerWidth', value => {\n      if (!this._overviewRulerRenderer && value && this._viewportElement && this.screenElement) {\n        this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement));\n      }\n    });\n    // Measure the character size\n    this._charSizeService.measure();\n\n    // Setup loop that draws to screen\n    this.refresh(0, this.rows - 1);\n\n    // Initialize global actions that need to be taken on the document.\n    this._initGlobal();\n\n    // Listen for mouse events and translate\n    // them into terminal mouse protocols.\n    this.bindMouse();\n  }\n\n  private _createRenderer(): IRenderer {\n    return this._instantiationService.createInstance(DomRenderer, this.element!, this.screenElement!, this._viewportElement!, this.linkifier2);\n  }\n\n  /**\n   * Bind certain mouse events to the terminal.\n   * By default only 3 button + wheel up/down is ativated. For higher buttons\n   * no mouse report will be created. Typically the standard actions will be active.\n   *\n   * There are several reasons not to enable support for higher buttons/wheel:\n   * - Button 4 and 5 are typically used for history back and forward navigation,\n   *   there is no straight forward way to supress/intercept those standard actions.\n   * - Support for higher buttons does not work in some platform/browser combinations.\n   * - Left/right wheel was not tested.\n   * - Emulators vary in mouse button support, typically only 3 buttons and\n   *   wheel up/down work reliable.\n   *\n   * TODO: Move mouse event code into its own file.\n   */\n  public bindMouse(): void {\n    const self = this;\n    const el = this.element!;\n\n    // send event to CoreMouseService\n    function sendEvent(ev: MouseEvent | WheelEvent): boolean {\n      // get mouse coordinates\n      const pos = self._mouseService!.getMouseReportCoords(ev, self.screenElement!);\n      if (!pos) {\n        return false;\n      }\n\n      let but: CoreMouseButton;\n      let action: CoreMouseAction | undefined;\n      switch ((ev as any).overrideType || ev.type) {\n        case 'mousemove':\n          action = CoreMouseAction.MOVE;\n          if (ev.buttons === undefined) {\n            // buttons is not supported on macOS, try to get a value from button instead\n            but = CoreMouseButton.NONE;\n            if (ev.button !== undefined) {\n              but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n            }\n          } else {\n            // according to MDN buttons only reports up to button 5 (AUX2)\n            but = ev.buttons & 1 ? CoreMouseButton.LEFT :\n              ev.buttons & 4 ? CoreMouseButton.MIDDLE :\n                ev.buttons & 2 ? CoreMouseButton.RIGHT :\n                  CoreMouseButton.NONE; // fallback to NONE\n          }\n          break;\n        case 'mouseup':\n          action = CoreMouseAction.UP;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'mousedown':\n          action = CoreMouseAction.DOWN;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'wheel':\n          const amount = self.viewport!.getLinesScrolled(ev as WheelEvent);\n\n          if (amount === 0) {\n            return false;\n          }\n\n          action = (ev as WheelEvent).deltaY < 0 ? CoreMouseAction.UP : CoreMouseAction.DOWN;\n          but = CoreMouseButton.WHEEL;\n          break;\n        default:\n          // dont handle other event types by accident\n          return false;\n      }\n\n      // exit if we cannot determine valid button/action values\n      // do nothing for higher buttons than wheel\n      if (action === undefined || but === undefined || but > CoreMouseButton.WHEEL) {\n        return false;\n      }\n\n      return self.coreMouseService.triggerMouseEvent({\n        col: pos.col,\n        row: pos.row,\n        x: pos.x,\n        y: pos.y,\n        button: but,\n        action,\n        ctrl: ev.ctrlKey,\n        alt: ev.altKey,\n        shift: ev.shiftKey\n      });\n    }\n\n    /**\n     * Event listener state handling.\n     * We listen to the onProtocolChange event of CoreMouseService and put\n     * requested listeners in `requestedEvents`. With this the listeners\n     * have all bits to do the event listener juggling.\n     * Note: 'mousedown' currently is \"always on\" and not managed\n     * by onProtocolChange.\n     */\n    const requestedEvents: { [key: string]: ((ev: Event) => void) | null } = {\n      mouseup: null,\n      wheel: null,\n      mousedrag: null,\n      mousemove: null\n    };\n    const eventListeners: { [key: string]: (ev: any) => void | boolean } = {\n      mouseup: (ev: MouseEvent) => {\n        sendEvent(ev);\n        if (!ev.buttons) {\n          // if no other button is held remove global handlers\n          this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n          if (requestedEvents.mousedrag) {\n            this._document!.removeEventListener('mousemove', requestedEvents.mousedrag);\n          }\n        }\n        return this.cancel(ev);\n      },\n      wheel: (ev: WheelEvent) => {\n        sendEvent(ev);\n        return this.cancel(ev, true);\n      },\n      mousedrag: (ev: MouseEvent) => {\n        // deal only with move while a button is held\n        if (ev.buttons) {\n          sendEvent(ev);\n        }\n      },\n      mousemove: (ev: MouseEvent) => {\n        // deal only with move without any button\n        if (!ev.buttons) {\n          sendEvent(ev);\n        }\n      }\n    };\n    this.register(this.coreMouseService.onProtocolChange(events => {\n      // apply global changes on events\n      if (events) {\n        if (this.optionsService.rawOptions.logLevel === 'debug') {\n          this._logService.debug('Binding to mouse events:', this.coreMouseService.explainEvents(events));\n        }\n        this.element!.classList.add('enable-mouse-events');\n        this._selectionService!.disable();\n      } else {\n        this._logService.debug('Unbinding from mouse events.');\n        this.element!.classList.remove('enable-mouse-events');\n        this._selectionService!.enable();\n      }\n\n      // add/remove handlers from requestedEvents\n\n      if (!(events & CoreMouseEventType.MOVE)) {\n        el.removeEventListener('mousemove', requestedEvents.mousemove!);\n        requestedEvents.mousemove = null;\n      } else if (!requestedEvents.mousemove) {\n        el.addEventListener('mousemove', eventListeners.mousemove);\n        requestedEvents.mousemove = eventListeners.mousemove;\n      }\n\n      if (!(events & CoreMouseEventType.WHEEL)) {\n        el.removeEventListener('wheel', requestedEvents.wheel!);\n        requestedEvents.wheel = null;\n      } else if (!requestedEvents.wheel) {\n        el.addEventListener('wheel', eventListeners.wheel, { passive: false });\n        requestedEvents.wheel = eventListeners.wheel;\n      }\n\n      if (!(events & CoreMouseEventType.UP)) {\n        this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n        requestedEvents.mouseup = null;\n      } else if (!requestedEvents.mouseup) {\n        requestedEvents.mouseup = eventListeners.mouseup;\n      }\n\n      if (!(events & CoreMouseEventType.DRAG)) {\n        this._document!.removeEventListener('mousemove', requestedEvents.mousedrag!);\n        requestedEvents.mousedrag = null;\n      } else if (!requestedEvents.mousedrag) {\n        requestedEvents.mousedrag = eventListeners.mousedrag;\n      }\n    }));\n    // force initial onProtocolChange so we dont miss early mouse requests\n    this.coreMouseService.activeProtocol = this.coreMouseService.activeProtocol;\n\n    /**\n     * \"Always on\" event listeners.\n     */\n    this.register(addDisposableDomListener(el, 'mousedown', (ev: MouseEvent) => {\n      ev.preventDefault();\n      this.focus();\n\n      // Don't send the mouse button to the pty if mouse events are disabled or\n      // if the selection manager is having selection forced (ie. a modifier is\n      // held).\n      if (!this.coreMouseService.areMouseEventsActive || this._selectionService!.shouldForceSelection(ev)) {\n        return;\n      }\n\n      sendEvent(ev);\n\n      // Register additional global handlers which should keep reporting outside\n      // of the terminal element.\n      // Note: Other emulators also do this for 'mousedown' while a button\n      // is held, we currently limit 'mousedown' to the terminal only.\n      if (requestedEvents.mouseup) {\n        this._document!.addEventListener('mouseup', requestedEvents.mouseup);\n      }\n      if (requestedEvents.mousedrag) {\n        this._document!.addEventListener('mousemove', requestedEvents.mousedrag);\n      }\n\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      // do nothing, if app side handles wheel itself\n      if (requestedEvents.wheel) return;\n\n      if (!this.buffer.hasScrollback) {\n        // Convert wheel events into up/down events when the buffer does not have scrollback, this\n        // enables scrolling in apps hosted in the alt buffer such as vim or tmux.\n        const amount = this.viewport!.getLinesScrolled(ev);\n\n        // Do nothing if there's no vertical scroll\n        if (amount === 0) {\n          return;\n        }\n\n        // Construct and send sequences\n        const sequence = C0.ESC + (this.coreService.decPrivateModes.applicationCursorKeys ? 'O' : '[') + (ev.deltaY < 0 ? 'A' : 'B');\n        let data = '';\n        for (let i = 0; i < Math.abs(amount); i++) {\n          data += sequence;\n        }\n        this.coreService.triggerDataEvent(data, true);\n        return this.cancel(ev, true);\n      }\n\n      // normal viewport scrolling\n      // conditionally stop event, if the viewport still had rows to scroll within\n      if (this.viewport!.handleWheel(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n\n    this.register(addDisposableDomListener(el, 'touchstart', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      this.viewport!.handleTouchStart(ev);\n      return this.cancel(ev);\n    }, { passive: true }));\n\n    this.register(addDisposableDomListener(el, 'touchmove', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      if (!this.viewport!.handleTouchMove(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n  }\n\n\n  /**\n   * Tells the renderer to refresh terminal content between two rows (inclusive) at the next\n   * opportunity.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  public refresh(start: number, end: number): void {\n    this._renderService?.refreshRows(start, end);\n  }\n\n  /**\n   * Change the cursor style for different selection modes\n   */\n  public updateCursorStyle(ev: KeyboardEvent): void {\n    if (this._selectionService?.shouldColumnSelect(ev)) {\n      this.element!.classList.add('column-select');\n    } else {\n      this.element!.classList.remove('column-select');\n    }\n  }\n\n  /**\n   * Display the cursor element\n   */\n  private _showCursor(): void {\n    if (!this.coreService.isCursorInitialized) {\n      this.coreService.isCursorInitialized = true;\n      this.refresh(this.buffer.y, this.buffer.y);\n    }\n  }\n\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source = ScrollSource.TERMINAL): void {\n    super.scrollLines(disp, suppressScrollEvent, source);\n    this.refresh(0, this.rows - 1);\n  }\n\n  public paste(data: string): void {\n    paste(data, this.textarea!, this.coreService);\n  }\n\n  /**\n   * Attaches a custom key event handler which is run before keys are processed,\n   * giving consumers of xterm.js ultimate control as to what keys should be\n   * processed by the terminal and what keys should not.\n   * @param customKeyEventHandler The custom KeyboardEvent handler to attach.\n   * This is a function that takes a KeyboardEvent, allowing consumers to stop\n   * propagation and/or prevent the default action. The function returns whether\n   * the event should be processed by xterm.js.\n   */\n  public attachCustomKeyEventHandler(customKeyEventHandler: CustomKeyEventHandler): void {\n    this._customKeyEventHandler = customKeyEventHandler;\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this.linkifier2.registerLinkProvider(linkProvider);\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    const joinerId = this._characterJoinerService.register(handler);\n    this.refresh(0, this.rows - 1);\n    return joinerId;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): void {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    if (this._characterJoinerService.deregister(joinerId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public get markers(): IMarker[] {\n    return this.buffer.markers;\n  }\n\n  public addMarker(cursorYOffset: number): IMarker | undefined {\n    return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + cursorYOffset);\n  }\n\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    return this._decorationService.registerDecoration(decorationOptions);\n  }\n\n  /**\n   * Gets whether the terminal has an active selection.\n   */\n  public hasSelection(): boolean {\n    return this._selectionService ? this._selectionService.hasSelection : false;\n  }\n\n  /**\n   * Selects text within the terminal.\n   * @param column The column the selection starts at..\n   * @param row The row the selection starts at.\n   * @param length The length of the selection.\n   */\n  public select(column: number, row: number, length: number): void {\n    this._selectionService!.setSelection(column, row, length);\n  }\n\n  /**\n   * Gets the terminal's current selection, this is useful for implementing copy\n   * behavior outside of xterm.js.\n   */\n  public getSelection(): string {\n    return this._selectionService ? this._selectionService.selectionText : '';\n  }\n\n  public getSelectionPosition(): IBufferRange | undefined {\n    if (!this._selectionService || !this._selectionService.hasSelection) {\n      return undefined;\n    }\n\n    return {\n      start: {\n        x: this._selectionService.selectionStart![0],\n        y: this._selectionService.selectionStart![1]\n      },\n      end: {\n        x: this._selectionService.selectionEnd![0],\n        y: this._selectionService.selectionEnd![1]\n      }\n    };\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._selectionService?.clearSelection();\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._selectionService?.selectAll();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._selectionService?.selectLines(start, end);\n  }\n\n  /**\n   * Handle a keydown [KeyboardEvent].\n   *\n   * [KeyboardEvent]: https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   */\n  protected _keyDown(event: KeyboardEvent): boolean | undefined {\n    this._keyDownHandled = false;\n    this._keyDownSeen = true;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(event) === false) {\n      return false;\n    }\n\n    // Ignore composing with Alt key on Mac when macOptionIsMeta is enabled\n    const shouldIgnoreComposition = this.browser.isMac && this.options.macOptionIsMeta && event.altKey;\n\n    if (!shouldIgnoreComposition && !this._compositionHelper!.keydown(event)) {\n      if (this.options.scrollOnUserInput && this.buffer.ybase !== this.buffer.ydisp) {\n        this._bufferService.scrollToBottom();\n      }\n      return false;\n    }\n\n    if (!shouldIgnoreComposition && (event.key === 'Dead' || event.key === 'AltGraph')) {\n      this._unprocessedDeadKey = true;\n    }\n\n    const result = evaluateKeyboardEvent(event, this.coreService.decPrivateModes.applicationCursorKeys, this.browser.isMac, this.options.macOptionIsMeta);\n\n    this.updateCursorStyle(event);\n\n    if (result.type === KeyboardResultType.PAGE_DOWN || result.type === KeyboardResultType.PAGE_UP) {\n      const scrollCount = this.rows - 1;\n      this.scrollLines(result.type === KeyboardResultType.PAGE_UP ? -scrollCount : scrollCount);\n      return this.cancel(event, true);\n    }\n\n    if (result.type === KeyboardResultType.SELECT_ALL) {\n      this.selectAll();\n    }\n\n    if (this._isThirdLevelShift(this.browser, event)) {\n      return true;\n    }\n\n    if (result.cancel) {\n      // The event is canceled at the end already, is this necessary?\n      this.cancel(event, true);\n    }\n\n    if (!result.key) {\n      return true;\n    }\n\n    // HACK: Process A-Z in the keypress event to fix an issue with macOS IMEs where lower case\n    // letters cannot be input while caps lock is on.\n    if (event.key && !event.ctrlKey && !event.altKey && !event.metaKey && event.key.length === 1) {\n      if (event.key.charCodeAt(0) >= 65 && event.key.charCodeAt(0) <= 90) {\n        return true;\n      }\n    }\n\n    if (this._unprocessedDeadKey) {\n      this._unprocessedDeadKey = false;\n      return true;\n    }\n\n    // If ctrl+c or enter is being sent, clear out the textarea. This is done so that screen readers\n    // will announce deleted characters. This will not work 100% of the time but it should cover\n    // most scenarios.\n    if (result.key === C0.ETX || result.key === C0.CR) {\n      this.textarea!.value = '';\n    }\n\n    this._onKey.fire({ key: result.key, domEvent: event });\n    this._showCursor();\n    this.coreService.triggerDataEvent(result.key, true);\n\n    // Cancel events when not in screen reader mode so events don't get bubbled up and handled by\n    // other listeners. When screen reader mode is enabled, we don't cancel them (unless ctrl or alt\n    // is also depressed) so that the cursor textarea can be updated, which triggers the screen\n    // reader to read it.\n    if (!this.optionsService.rawOptions.screenReaderMode || event.altKey || event.ctrlKey) {\n      return this.cancel(event, true);\n    }\n\n    this._keyDownHandled = true;\n  }\n\n  private _isThirdLevelShift(browser: IBrowser, ev: KeyboardEvent): boolean {\n    const thirdLevelKey =\n      (browser.isMac && !this.options.macOptionIsMeta && ev.altKey && !ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.altKey && ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.getModifierState('AltGraph'));\n\n    if (ev.type === 'keypress') {\n      return thirdLevelKey;\n    }\n\n    // Don't invoke for arrows, pageDown, home, backspace, etc. (on non-keypress events)\n    return thirdLevelKey && (!ev.keyCode || ev.keyCode > 47);\n  }\n\n  protected _keyUp(ev: KeyboardEvent): void {\n    this._keyDownSeen = false;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return;\n    }\n\n    if (!wasModifierKeyOnlyEvent(ev)) {\n      this.focus();\n    }\n\n    this.updateCursorStyle(ev);\n    this._keyPressHandled = false;\n  }\n\n  /**\n   * Handle a keypress event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keypress event to be handled.\n   */\n  protected _keyPress(ev: KeyboardEvent): boolean {\n    let key;\n\n    this._keyPressHandled = false;\n\n    if (this._keyDownHandled) {\n      return false;\n    }\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return false;\n    }\n\n    this.cancel(ev);\n\n    if (ev.charCode) {\n      key = ev.charCode;\n    } else if (ev.which === null || ev.which === undefined) {\n      key = ev.keyCode;\n    } else if (ev.which !== 0 && ev.charCode !== 0) {\n      key = ev.which;\n    } else {\n      return false;\n    }\n\n    if (!key || (\n      (ev.altKey || ev.ctrlKey || ev.metaKey) && !this._isThirdLevelShift(this.browser, ev)\n    )) {\n      return false;\n    }\n\n    key = String.fromCharCode(key);\n\n    this._onKey.fire({ key, domEvent: ev });\n    this._showCursor();\n    this.coreService.triggerDataEvent(key, true);\n\n    this._keyPressHandled = true;\n\n    // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n    // keys could be ignored\n    this._unprocessedDeadKey = false;\n\n    return true;\n  }\n\n  /**\n   * Handle an input event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/Web/API/InputEvent\n   * @param ev The input event to be handled.\n   */\n  protected _inputEvent(ev: InputEvent): boolean {\n    // Only support emoji IMEs when screen reader mode is disabled as the event must bubble up to\n    // support reading out character input which can doubling up input characters\n    // Based on these event traces: https://github.com/xtermjs/xterm.js/issues/3679\n    if (ev.data && ev.inputType === 'insertText' && (!ev.composed || !this._keyDownSeen) && !this.optionsService.rawOptions.screenReaderMode) {\n      if (this._keyPressHandled) {\n        return false;\n      }\n\n      // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n      // keys could be ignored\n      this._unprocessedDeadKey = false;\n\n      const text = ev.data;\n      this.coreService.triggerDataEvent(text, true);\n\n      this.cancel(ev);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Resizes the terminal.\n   *\n   * @param x The number of columns to resize to.\n   * @param y The number of rows to resize to.\n   */\n  public resize(x: number, y: number): void {\n    if (x === this.cols && y === this.rows) {\n      // Check if we still need to measure the char size (fixes #785).\n      if (this._charSizeService && !this._charSizeService.hasValidSize) {\n        this._charSizeService.measure();\n      }\n      return;\n    }\n\n    super.resize(x, y);\n  }\n\n  private _afterResize(x: number, y: number): void {\n    this._charSizeService?.measure();\n\n    // Sync the scroll area to make sure scroll events don't fire and scroll the viewport to an\n    // invalid location\n    this.viewport?.syncScrollArea(true);\n  }\n\n  /**\n   * Clear the entire buffer, making the prompt line the new first line.\n   */\n  public clear(): void {\n    if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n      // Don't clear if it's already clear\n      return;\n    }\n    this.buffer.clearAllMarkers();\n    this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y)!);\n    this.buffer.lines.length = 1;\n    this.buffer.ydisp = 0;\n    this.buffer.ybase = 0;\n    this.buffer.y = 0;\n    for (let i = 1; i < this.rows; i++) {\n      this.buffer.lines.push(this.buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this.refresh(0, this.rows - 1);\n    this._onScroll.fire({ position: this.buffer.ydisp, source: ScrollSource.TERMINAL });\n  }\n\n  /**\n   * Reset terminal.\n   * Note: Calling this directly from JS is synchronous but does not clear\n   * input buffers and does not reset the parser, thus the terminal will\n   * continue to apply pending input data.\n   * If you need in band reset (synchronous with input data) consider\n   * using DECSTR (soft reset, CSI ! p) or RIS instead (hard reset, ESC c).\n   */\n  public reset(): void {\n    /**\n     * Since _setup handles a full terminal creation, we have to carry forward\n     * a few things that should not reset.\n     */\n    this.options.rows = this.rows;\n    this.options.cols = this.cols;\n    const customKeyEventHandler = this._customKeyEventHandler;\n\n    this._setup();\n    super.reset();\n    this._selectionService?.reset();\n    this._decorationService.reset();\n\n    // reattach\n    this._customKeyEventHandler = customKeyEventHandler;\n\n    // do a full screen refresh\n    this.refresh(0, this.rows - 1);\n    this.viewport?.syncScrollArea();\n  }\n\n  public clearTextureAtlas(): void {\n    this._renderService?.clearTextureAtlas();\n  }\n\n  private _reportFocus(): void {\n    if (this.element?.classList.contains('focus')) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    } else {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n  }\n\n  private _reportWindowsOptions(type: WindowsOptionsReportType): void {\n    if (!this._renderService) {\n      return;\n    }\n\n    switch (type) {\n      case WindowsOptionsReportType.GET_WIN_SIZE_PIXELS:\n        const canvasWidth = this._renderService.dimensions.css.canvas.width.toFixed(0);\n        const canvasHeight = this._renderService.dimensions.css.canvas.height.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[4;${canvasHeight};${canvasWidth}t`);\n        break;\n      case WindowsOptionsReportType.GET_CELL_SIZE_PIXELS:\n        const cellWidth = this._renderService.dimensions.css.cell.width.toFixed(0);\n        const cellHeight = this._renderService.dimensions.css.cell.height.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[6;${cellHeight};${cellWidth}t`);\n        break;\n    }\n  }\n\n  // TODO: Remove cancel function and cancelEvents option\n  public cancel(ev: Event, force?: boolean): boolean | undefined {\n    if (!this.options.cancelEvents && !force) {\n      return;\n    }\n    ev.preventDefault();\n    ev.stopPropagation();\n    return false;\n  }\n}\n\n/**\n * Helpers\n */\n\nfunction wasModifierKeyOnlyEvent(ev: KeyboardEvent): boolean {\n  return ev.keyCode === 16 || // Shift\n    ev.keyCode === 17 || // Ctrl\n    ev.keyCode === 18; // Alt\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nconst RENDER_DEBOUNCE_THRESHOLD_MS = 1000; // 1 Second\n\nimport { IRenderDebouncer } from 'browser/Types';\n\n/**\n * Debounces calls to update screen readers to update at most once configurable interval of time.\n */\nexport class TimeBasedDebouncer implements IRenderDebouncer {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n\n  // The last moment that the Terminal was refreshed at\n  private _lastRefreshMs = 0;\n  // Whether a trailing refresh should be triggered due to a refresh request that was throttled\n  private _additionalRefreshRequested = false;\n\n  private _refreshTimeoutID: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void,\n    private readonly _debounceThresholdMS = RENDER_DEBOUNCE_THRESHOLD_MS\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._refreshTimeoutID) {\n      clearTimeout(this._refreshTimeoutID);\n    }\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    // Only refresh if the time since last refresh is above a threshold, otherwise wait for\n    // enough time to pass before refreshing again.\n    const refreshRequestTime: number = Date.now();\n    if (refreshRequestTime - this._lastRefreshMs >= this._debounceThresholdMS) {\n      // Enough time has lapsed since the last refresh; refresh immediately\n      this._lastRefreshMs = refreshRequestTime;\n      this._innerRefresh();\n    } else if (!this._additionalRefreshRequested) {\n      // This is the first additional request throttled; set up trailing refresh\n      const elapsed = refreshRequestTime - this._lastRefreshMs;\n      const waitPeriodBeforeTrailingRefresh = this._debounceThresholdMS - elapsed;\n      this._additionalRefreshRequested = true;\n\n      this._refreshTimeoutID = window.setTimeout(() => {\n        this._lastRefreshMs = Date.now();\n        this._innerRefresh();\n        this._additionalRefreshRequested = false;\n        this._refreshTimeoutID = undefined; // No longer need to clear the timeout\n      }, waitPeriodBeforeTrailingRefresh);\n    }\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n  }\n}\n\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IViewport, ReadonlyColorSet } from 'browser/Types';\nimport { ICharSizeService, ICoreBrowserService, IRenderService, IThemeService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IRenderDimensions } from 'browser/renderer/shared/Types';\n\nconst FALLBACK_SCROLL_BAR_WIDTH = 15;\n\ninterface ISmoothScrollState {\n  startTime: number;\n  origin: number;\n  target: number;\n}\n\n/**\n * Represents the viewport of a terminal, the visible area within the larger buffer of output.\n * Logic for the virtual scroll bar is included in this object.\n */\nexport class Viewport extends Disposable implements IViewport {\n  public scrollBarWidth: number = 0;\n  private _currentRowHeight: number = 0;\n  private _currentDeviceCellHeight: number = 0;\n  private _lastRecordedBufferLength: number = 0;\n  private _lastRecordedViewportHeight: number = 0;\n  private _lastRecordedBufferHeight: number = 0;\n  private _lastTouchY: number = 0;\n  private _lastScrollTop: number = 0;\n  private _activeBuffer: IBuffer;\n  private _renderDimensions: IRenderDimensions;\n\n  // Stores a partial line amount when scrolling, this is used to keep track of how much of a line\n  // is scrolled so we can \"scroll\" over partial lines and feel natural on touchpads. This is a\n  // quick fix and could have a more robust solution in place that reset the value when needed.\n  private _wheelPartialScroll: number = 0;\n\n  private _refreshAnimationFrame: number | null = null;\n  private _ignoreNextScrollEvent: boolean = false;\n  private _smoothScrollState: ISmoothScrollState = {\n    startTime: 0,\n    origin: -1,\n    target: -1\n  };\n\n  constructor(\n    private readonly _scrollLines: (amount: number) => void,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _scrollArea: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n\n    // Measure the width of the scrollbar. If it is 0 we can assume it's an OSX overlay scrollbar.\n    // Unfortunately the overlay scrollbar would be hidden underneath the screen element in that case,\n    // therefore we account for a standard amount to make it visible\n    this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', this._handleScroll.bind(this)));\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n    this._renderDimensions = this._renderService.dimensions;\n    this.register(this._renderService.onDimensionsChange(e => this._renderDimensions = e));\n\n    this._handleThemeChange(themeService.colors);\n    this.register(themeService.onChangeColors(e => this._handleThemeChange(e)));\n    this.register(this._optionsService.onSpecificOptionChange('scrollback', () => this.syncScrollArea()));\n\n    // Perform this async to ensure the ICharSizeService is ready.\n    setTimeout(() => this.syncScrollArea(), 0);\n  }\n\n  private _handleThemeChange(colors: ReadonlyColorSet): void {\n    this._viewportElement.style.backgroundColor = colors.background.css;\n  }\n\n  /**\n   * Refreshes row height, setting line-height, viewport height and scroll area height if\n   * necessary.\n   */\n  private _refresh(immediate: boolean): void {\n    if (immediate) {\n      this._innerRefresh();\n      if (this._refreshAnimationFrame !== null) {\n        this._coreBrowserService.window.cancelAnimationFrame(this._refreshAnimationFrame);\n      }\n      return;\n    }\n    if (this._refreshAnimationFrame === null) {\n      this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._innerRefresh());\n    }\n  }\n\n  private _innerRefresh(): void {\n    if (this._charSizeService.height > 0) {\n      this._currentRowHeight = this._renderService.dimensions.device.cell.height / this._coreBrowserService.dpr;\n      this._currentDeviceCellHeight = this._renderService.dimensions.device.cell.height;\n      this._lastRecordedViewportHeight = this._viewportElement.offsetHeight;\n      const newBufferHeight = Math.round(this._currentRowHeight * this._lastRecordedBufferLength) + (this._lastRecordedViewportHeight - this._renderService.dimensions.css.canvas.height);\n      if (this._lastRecordedBufferHeight !== newBufferHeight) {\n        this._lastRecordedBufferHeight = newBufferHeight;\n        this._scrollArea.style.height = this._lastRecordedBufferHeight + 'px';\n      }\n    }\n\n    // Sync scrollTop\n    const scrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._viewportElement.scrollTop !== scrollTop) {\n      // Ignore the next scroll event which will be triggered by setting the scrollTop as we do not\n      // want this event to scroll the terminal\n      this._ignoreNextScrollEvent = true;\n      this._viewportElement.scrollTop = scrollTop;\n    }\n\n    this._refreshAnimationFrame = null;\n  }\n\n  /**\n   * Updates dimensions and synchronizes the scroll area if necessary.\n   */\n  public syncScrollArea(immediate: boolean = false): void {\n    // If buffer height changed\n    if (this._lastRecordedBufferLength !== this._bufferService.buffer.lines.length) {\n      this._lastRecordedBufferLength = this._bufferService.buffer.lines.length;\n      this._refresh(immediate);\n      return;\n    }\n\n    // If viewport height changed\n    if (this._lastRecordedViewportHeight !== this._renderService.dimensions.css.canvas.height) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If the buffer position doesn't match last scroll top\n    if (this._lastScrollTop !== this._activeBuffer.ydisp * this._currentRowHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If row height changed\n    if (this._renderDimensions.device.cell.height !== this._currentDeviceCellHeight) {\n      this._refresh(immediate);\n      return;\n    }\n  }\n\n  /**\n   * Handles scroll events on the viewport, calculating the new viewport and requesting the\n   * terminal to scroll to it.\n   * @param ev The scroll event.\n   */\n  private _handleScroll(ev: Event): void {\n    // Record current scroll top position\n    this._lastScrollTop = this._viewportElement.scrollTop;\n\n    // Don't attempt to scroll if the element is not visible, otherwise scrollTop will be corrupt\n    // which causes the terminal to scroll the buffer to the top\n    if (!this._viewportElement.offsetParent) {\n      return;\n    }\n\n    // Ignore the event if it was flagged to ignore (when the source of the event is from Viewport)\n    if (this._ignoreNextScrollEvent) {\n      this._ignoreNextScrollEvent = false;\n      // Still trigger the scroll so lines get refreshed\n      this._scrollLines(0);\n      return;\n    }\n\n    const newRow = Math.round(this._lastScrollTop / this._currentRowHeight);\n    const diff = newRow - this._bufferService.buffer.ydisp;\n    this._scrollLines(diff);\n  }\n\n  private _smoothScroll(): void {\n    // Check valid state\n    if (this._isDisposed || this._smoothScrollState.origin === -1 || this._smoothScrollState.target === -1) {\n      return;\n    }\n\n    // Calculate position complete\n    const percent = this._smoothScrollPercent();\n    this._viewportElement.scrollTop = this._smoothScrollState.origin + Math.round(percent * (this._smoothScrollState.target - this._smoothScrollState.origin));\n\n    // Continue or finish smooth scroll\n    if (percent < 1) {\n      this._coreBrowserService.window.requestAnimationFrame(() => this._smoothScroll());\n    } else {\n      this._clearSmoothScrollState();\n    }\n  }\n\n  private _smoothScrollPercent(): number {\n    if (!this._optionsService.rawOptions.smoothScrollDuration || !this._smoothScrollState.startTime) {\n      return 1;\n    }\n    return Math.max(Math.min((Date.now() - this._smoothScrollState.startTime) / this._optionsService.rawOptions.smoothScrollDuration, 1), 0);\n  }\n\n  private _clearSmoothScrollState(): void {\n    this._smoothScrollState.startTime = 0;\n    this._smoothScrollState.origin = -1;\n    this._smoothScrollState.target = -1;\n  }\n\n  /**\n   * Handles bubbling of scroll event in case the viewport has reached top or bottom\n   * @param ev The scroll event.\n   * @param amount The amount scrolled\n   */\n  private _bubbleScroll(ev: Event, amount: number): boolean {\n    const scrollPosFromTop = this._viewportElement.scrollTop + this._lastRecordedViewportHeight;\n    if ((amount < 0 && this._viewportElement.scrollTop !== 0) ||\n      (amount > 0 && scrollPosFromTop < this._lastRecordedBufferHeight)) {\n      if (ev.cancelable) {\n        ev.preventDefault();\n      }\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handles mouse wheel events by adjusting the viewport's scrollTop and delegating the actual\n   * scrolling to `onScroll`, this event needs to be attached manually by the consumer of\n   * `Viewport`.\n   * @param ev The mouse wheel event.\n   */\n  public handleWheel(ev: WheelEvent): boolean {\n    const amount = this._getPixelsScrolled(ev);\n    if (amount === 0) {\n      return false;\n    }\n    if (!this._optionsService.rawOptions.smoothScrollDuration) {\n      this._viewportElement.scrollTop += amount;\n    } else {\n      this._smoothScrollState.startTime = Date.now();\n      if (this._smoothScrollPercent() < 1) {\n        this._smoothScrollState.origin = this._viewportElement.scrollTop;\n        if (this._smoothScrollState.target === -1) {\n          this._smoothScrollState.target = this._viewportElement.scrollTop + amount;\n        } else {\n          this._smoothScrollState.target += amount;\n        }\n        this._smoothScrollState.target = Math.max(Math.min(this._smoothScrollState.target, this._viewportElement.scrollHeight), 0);\n        this._smoothScroll();\n      } else {\n        this._clearSmoothScrollState();\n      }\n    }\n    return this._bubbleScroll(ev, amount);\n  }\n\n  private _getPixelsScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_PIXEL\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      amount *= this._currentRowHeight;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._currentRowHeight * this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  /**\n   * Gets the number of pixels scrolled by the mouse event taking into account what type of delta\n   * is being used.\n   * @param ev The mouse wheel event.\n   */\n  public getLinesScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_LINE\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      amount /= this._currentRowHeight + 0.0; // Prevent integer division\n      this._wheelPartialScroll += amount;\n      amount = Math.floor(Math.abs(this._wheelPartialScroll)) * (this._wheelPartialScroll > 0 ? 1 : -1);\n      this._wheelPartialScroll %= 1;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  private _applyScrollModifier(amount: number, ev: WheelEvent): number {\n    const modifier = this._optionsService.rawOptions.fastScrollModifier;\n    // Multiply the scroll speed when the modifier is down\n    if ((modifier === 'alt' && ev.altKey) ||\n      (modifier === 'ctrl' && ev.ctrlKey) ||\n      (modifier === 'shift' && ev.shiftKey)) {\n      return amount * this._optionsService.rawOptions.fastScrollSensitivity * this._optionsService.rawOptions.scrollSensitivity;\n    }\n\n    return amount * this._optionsService.rawOptions.scrollSensitivity;\n  }\n\n  /**\n   * Handles the touchstart event, recording the touch occurred.\n   * @param ev The touch event.\n   */\n  public handleTouchStart(ev: TouchEvent): void {\n    this._lastTouchY = ev.touches[0].pageY;\n  }\n\n  /**\n   * Handles the touchmove event, scrolling the viewport if the position shifted.\n   * @param ev The touch event.\n   */\n  public handleTouchMove(ev: TouchEvent): boolean {\n    const deltaY = this._lastTouchY - ev.touches[0].pageY;\n    this._lastTouchY = ev.touches[0].pageY;\n    if (deltaY === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += deltaY;\n    return this._bubbleScroll(ev, deltaY);\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IRenderService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IInternalDecoration } from 'common/services/Services';\n\nexport class BufferDecorationRenderer extends Disposable {\n  private readonly _container: HTMLElement;\n  private readonly _decorationElements: Map<IInternalDecoration, HTMLElement> = new Map();\n\n  private _animationFrame: number | undefined;\n  private _altBufferIsActive: boolean = false;\n  private _dimensionsChanged: boolean = false;\n\n  constructor(\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    this._container = document.createElement('div');\n    this._container.classList.add('xterm-decoration-container');\n    this._screenElement.appendChild(this._container);\n\n    this.register(this._renderService.onRenderedViewportChange(() => this._doRefreshDecorations()));\n    this.register(this._renderService.onDimensionsChange(() => {\n      this._dimensionsChanged = true;\n      this._queueRefresh();\n    }));\n    this.register(addDisposableDomListener(window, 'resize', () => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._altBufferIsActive = this._bufferService.buffer === this._bufferService.buffers.alt;\n    }));\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh()));\n    this.register(this._decorationService.onDecorationRemoved(decoration => this._removeDecoration(decoration)));\n    this.register(toDisposable(() => {\n      this._container.remove();\n      this._decorationElements.clear();\n    }));\n  }\n\n  private _queueRefresh(): void {\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._renderService.addRefreshCallback(() => {\n      this._doRefreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n\n  private _doRefreshDecorations(): void {\n    for (const decoration of this._decorationService.decorations) {\n      this._renderDecoration(decoration);\n    }\n    this._dimensionsChanged = false;\n  }\n\n  private _renderDecoration(decoration: IInternalDecoration): void {\n    this._refreshStyle(decoration);\n    if (this._dimensionsChanged) {\n      this._refreshXPosition(decoration);\n    }\n  }\n\n  private _createElement(decoration: IInternalDecoration): HTMLElement {\n    const element = document.createElement('div');\n    element.classList.add('xterm-decoration');\n    element.style.width = `${Math.round((decoration.options.width || 1) * this._renderService.dimensions.css.cell.width)}px`;\n    element.style.height = `${(decoration.options.height || 1) * this._renderService.dimensions.css.cell.height}px`;\n    element.style.top = `${(decoration.marker.line - this._bufferService.buffers.active.ydisp) * this._renderService.dimensions.css.cell.height}px`;\n    element.style.lineHeight = `${this._renderService.dimensions.css.cell.height}px`;\n\n    const x = decoration.options.x ?? 0;\n    if (x && x > this._bufferService.cols) {\n      // exceeded the container width, so hide\n      element.style.display = 'none';\n    }\n    this._refreshXPosition(decoration, element);\n\n    return element;\n  }\n\n  private _refreshStyle(decoration: IInternalDecoration): void {\n    const line = decoration.marker.line - this._bufferService.buffers.active.ydisp;\n    if (line < 0 || line >= this._bufferService.rows) {\n      // outside of viewport\n      if (decoration.element) {\n        decoration.element.style.display = 'none';\n        decoration.onRenderEmitter.fire(decoration.element);\n      }\n    } else {\n      let element = this._decorationElements.get(decoration);\n      if (!element) {\n        element = this._createElement(decoration);\n        decoration.element = element;\n        this._decorationElements.set(decoration, element);\n        this._container.appendChild(element);\n      }\n      element.style.top = `${line * this._renderService.dimensions.css.cell.height}px`;\n      element.style.display = this._altBufferIsActive ? 'none' : 'block';\n      decoration.onRenderEmitter.fire(element);\n    }\n  }\n\n  private _refreshXPosition(decoration: IInternalDecoration, element: HTMLElement | undefined = decoration.element): void {\n    if (!element) {\n      return;\n    }\n    const x = decoration.options.x ?? 0;\n    if ((decoration.options.anchor || 'left') === 'right') {\n      element.style.right = x ? `${x * this._renderService.dimensions.css.cell.width}px` : '';\n    } else {\n      element.style.left = x ? `${x * this._renderService.dimensions.css.cell.width}px` : '';\n    }\n  }\n\n  private _removeDecoration(decoration: IInternalDecoration): void {\n    this._decorationElements.get(decoration)?.remove();\n    this._decorationElements.delete(decoration);\n    decoration.dispose();\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInternalDecoration } from 'common/services/Services';\n\nexport interface IColorZoneStore {\n  readonly zones: IColorZone[];\n  clear(): void;\n  addDecoration(decoration: IInternalDecoration): void;\n  /**\n   * Sets the amount of padding in lines that will be added between zones, if new lines intersect\n   * the padding they will be merged into the same zone.\n   */\n  setPadding(padding: { [position: string]: number }): void;\n}\n\nexport interface IColorZone {\n  /** Color in a format supported by canvas' fillStyle. */\n  color: string;\n  position: 'full' | 'left' | 'center' | 'right' | undefined;\n  startBufferLine: number;\n  endBufferLine: number;\n}\n\ninterface IMinimalDecorationForColorZone {\n  marker: Pick<IInternalDecoration['marker'], 'line'>;\n  options: Pick<IInternalDecoration['options'], 'overviewRulerOptions'>;\n}\n\nexport class ColorZoneStore implements IColorZoneStore {\n  private _zones: IColorZone[] = [];\n\n  // The zone pool is used to keep zone objects from being freed between clearing the color zone\n  // store and fetching the zones. This helps reduce GC pressure since the color zones are\n  // accumulated on potentially every scroll event.\n  private _zonePool: IColorZone[] = [];\n  private _zonePoolIndex = 0;\n\n  private _linePadding: { [position: string]: number } = {\n    full: 0,\n    left: 0,\n    center: 0,\n    right: 0\n  };\n\n  public get zones(): IColorZone[] {\n    // Trim the zone pool to free unused memory\n    this._zonePool.length = Math.min(this._zonePool.length, this._zones.length);\n    return this._zones;\n  }\n\n  public clear(): void {\n    this._zones.length = 0;\n    this._zonePoolIndex = 0;\n  }\n\n  public addDecoration(decoration: IMinimalDecorationForColorZone): void {\n    if (!decoration.options.overviewRulerOptions) {\n      return;\n    }\n    for (const z of this._zones) {\n      if (z.color === decoration.options.overviewRulerOptions.color &&\n          z.position === decoration.options.overviewRulerOptions.position) {\n        if (this._lineIntersectsZone(z, decoration.marker.line)) {\n          return;\n        }\n        if (this._lineAdjacentToZone(z, decoration.marker.line, decoration.options.overviewRulerOptions.position)) {\n          this._addLineToZone(z, decoration.marker.line);\n          return;\n        }\n      }\n    }\n    // Create using zone pool if possible\n    if (this._zonePoolIndex < this._zonePool.length) {\n      this._zonePool[this._zonePoolIndex].color = decoration.options.overviewRulerOptions.color;\n      this._zonePool[this._zonePoolIndex].position = decoration.options.overviewRulerOptions.position;\n      this._zonePool[this._zonePoolIndex].startBufferLine = decoration.marker.line;\n      this._zonePool[this._zonePoolIndex].endBufferLine = decoration.marker.line;\n      this._zones.push(this._zonePool[this._zonePoolIndex++]);\n      return;\n    }\n    // Create\n    this._zones.push({\n      color: decoration.options.overviewRulerOptions.color,\n      position: decoration.options.overviewRulerOptions.position,\n      startBufferLine: decoration.marker.line,\n      endBufferLine: decoration.marker.line\n    });\n    this._zonePool.push(this._zones[this._zones.length - 1]);\n    this._zonePoolIndex++;\n  }\n\n  public setPadding(padding: { [position: string]: number }): void {\n    this._linePadding = padding;\n  }\n\n  private _lineIntersectsZone(zone: IColorZone, line: number): boolean {\n    return (\n      line >= zone.startBufferLine &&\n      line <= zone.endBufferLine\n    );\n  }\n\n  private _lineAdjacentToZone(zone: IColorZone, line: number, position: IColorZone['position']): boolean {\n    return (\n      (line >= zone.startBufferLine - this._linePadding[position || 'full']) &&\n      (line <= zone.endBufferLine + this._linePadding[position || 'full'])\n    );\n  }\n\n  private _addLineToZone(zone: IColorZone, line: number): void {\n    zone.startBufferLine = Math.min(zone.startBufferLine, line);\n    zone.endBufferLine = Math.max(zone.endBufferLine, line);\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ColorZoneStore, IColorZone, IColorZoneStore } from 'browser/decorations/ColorZoneStore';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { ICoreBrowserService, IRenderService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\n\n// Helper objects to avoid excessive calculation and garbage collection during rendering. These are\n// static values for each render and can be accessed using the decoration position as the key.\nconst drawHeight = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawWidth = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawX = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\n\nexport class OverviewRulerRenderer extends Disposable {\n  private readonly _canvas: HTMLCanvasElement;\n  private readonly _ctx: CanvasRenderingContext2D;\n  private readonly _colorZoneStore: IColorZoneStore = new ColorZoneStore();\n  private get _width(): number {\n    return this._optionsService.options.overviewRulerWidth || 0;\n  }\n  private _animationFrame: number | undefined;\n\n  private _shouldUpdateDimensions: boolean | undefined = true;\n  private _shouldUpdateAnchor: boolean | undefined = true;\n  private _lastKnownBufferLength: number = 0;\n\n  private _containerHeight: number | undefined;\n\n  constructor(\n    private readonly _viewportElement: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreBrowserService private readonly _coreBrowseService: ICoreBrowserService\n  ) {\n    super();\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add('xterm-decoration-overview-ruler');\n    this._refreshCanvasDimensions();\n    this._viewportElement.parentElement?.insertBefore(this._canvas, this._viewportElement);\n    const ctx = this._canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Ctx cannot be null');\n    } else {\n      this._ctx = ctx;\n    }\n    this._registerDecorationListeners();\n    this._registerBufferChangeListeners();\n    this._registerDimensionChangeListeners();\n    this.register(toDisposable(() => {\n      this._canvas?.remove();\n    }));\n  }\n\n  /**\n   * On decoration add or remove, redraw\n   */\n  private _registerDecorationListeners(): void {\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh(undefined, true)));\n    this.register(this._decorationService.onDecorationRemoved(() => this._queueRefresh(undefined, true)));\n  }\n\n  /**\n   * On buffer change, redraw\n   * and hide the canvas if the alt buffer is active\n   */\n  private _registerBufferChangeListeners(): void {\n    this.register(this._renderService.onRenderedViewportChange(() => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._canvas!.style.display = this._bufferService.buffer === this._bufferService.buffers.alt ? 'none' : 'block';\n    }));\n    this.register(this._bufferService.onScroll(() => {\n      if (this._lastKnownBufferLength !== this._bufferService.buffers.normal.lines.length) {\n        this._refreshDrawHeightConstants();\n        this._refreshColorZonePadding();\n      }\n    }));\n  }\n  /**\n   * On dimension change, update canvas dimensions\n   * and then redraw\n   */\n  private _registerDimensionChangeListeners(): void {\n    // container height changed\n    this.register(this._renderService.onRender((): void => {\n      if (!this._containerHeight || this._containerHeight !== this._screenElement.clientHeight) {\n        this._queueRefresh(true);\n        this._containerHeight = this._screenElement.clientHeight;\n      }\n    }));\n    // overview ruler width changed\n    this.register(this._optionsService.onSpecificOptionChange('overviewRulerWidth', () => this._queueRefresh(true)));\n    // device pixel ratio changed\n    this.register(addDisposableDomListener(this._coreBrowseService.window, 'resize', () => this._queueRefresh(true)));\n    // set the canvas dimensions\n    this._queueRefresh(true);\n  }\n\n  private _refreshDrawConstants(): void {\n    // width\n    const outerWidth = Math.floor(this._canvas.width / 3);\n    const innerWidth = Math.ceil(this._canvas.width / 3);\n    drawWidth.full = this._canvas.width;\n    drawWidth.left = outerWidth;\n    drawWidth.center = innerWidth;\n    drawWidth.right = outerWidth;\n    // height\n    this._refreshDrawHeightConstants();\n    // x\n    drawX.full = 0;\n    drawX.left = 0;\n    drawX.center = drawWidth.left;\n    drawX.right = drawWidth.left + drawWidth.center;\n  }\n\n  private _refreshDrawHeightConstants(): void {\n    drawHeight.full = Math.round(2 * this._coreBrowseService.dpr);\n    // Calculate actual pixels per line\n    const pixelsPerLine = this._canvas.height / this._bufferService.buffer.lines.length;\n    // Clamp actual pixels within a range\n    const nonFullHeight = Math.round(Math.max(Math.min(pixelsPerLine, 12), 6) * this._coreBrowseService.dpr);\n    drawHeight.left = nonFullHeight;\n    drawHeight.center = nonFullHeight;\n    drawHeight.right = nonFullHeight;\n  }\n\n  private _refreshColorZonePadding(): void {\n    this._colorZoneStore.setPadding({\n      full: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.full),\n      left: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.left),\n      center: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.center),\n      right: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.right)\n    });\n    this._lastKnownBufferLength = this._bufferService.buffers.normal.lines.length;\n  }\n\n  private _refreshCanvasDimensions(): void {\n    this._canvas.style.width = `${this._width}px`;\n    this._canvas.width = Math.round(this._width * this._coreBrowseService.dpr);\n    this._canvas.style.height = `${this._screenElement.clientHeight}px`;\n    this._canvas.height = Math.round(this._screenElement.clientHeight * this._coreBrowseService.dpr);\n    this._refreshDrawConstants();\n    this._refreshColorZonePadding();\n  }\n\n  private _refreshDecorations(): void {\n    if (this._shouldUpdateDimensions) {\n      this._refreshCanvasDimensions();\n    }\n    this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    this._colorZoneStore.clear();\n    for (const decoration of this._decorationService.decorations) {\n      this._colorZoneStore.addDecoration(decoration);\n    }\n    this._ctx.lineWidth = 1;\n    const zones = this._colorZoneStore.zones;\n    for (const zone of zones) {\n      if (zone.position !== 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    for (const zone of zones) {\n      if (zone.position === 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    this._shouldUpdateDimensions = false;\n    this._shouldUpdateAnchor = false;\n  }\n\n  private _renderColorZone(zone: IColorZone): void {\n    this._ctx.fillStyle = zone.color;\n    this._ctx.fillRect(\n      /* x */ drawX[zone.position || 'full'],\n      /* y */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        (zone.startBufferLine / this._bufferService.buffers.active.lines.length) - drawHeight[zone.position || 'full'] / 2\n      ),\n      /* w */ drawWidth[zone.position || 'full'],\n      /* h */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        ((zone.endBufferLine - zone.startBufferLine) / this._bufferService.buffers.active.lines.length) + drawHeight[zone.position || 'full']\n      )\n    );\n  }\n\n  private _queueRefresh(updateCanvasDimensions?: boolean, updateAnchor?: boolean): void {\n    this._shouldUpdateDimensions = updateCanvasDimensions || this._shouldUpdateDimensions;\n    this._shouldUpdateAnchor = updateAnchor || this._shouldUpdateAnchor;\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._coreBrowseService.window.requestAnimationFrame(() => {\n      this._refreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderService } from 'browser/services/Services';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\nimport { C0 } from 'common/data/EscapeSequences';\n\ninterface IPosition {\n  start: number;\n  end: number;\n}\n\n/**\n * Encapsulates the logic for handling compositionstart, compositionupdate and compositionend\n * events, displaying the in-progress composition to the UI and forwarding the final composition\n * to the handler.\n */\nexport class CompositionHelper {\n  /**\n   * Whether input composition is currently happening, eg. via a mobile keyboard, speech input or\n   * IME. This variable determines whether the compositionText should be displayed on the UI.\n   */\n  private _isComposing: boolean;\n  public get isComposing(): boolean { return this._isComposing; }\n\n  /**\n   * The position within the input textarea's value of the current composition.\n   */\n  private _compositionPosition: IPosition;\n\n  /**\n   * Whether a composition is in the process of being sent, setting this to false will cancel any\n   * in-progress composition.\n   */\n  private _isSendingComposition: boolean;\n\n  /**\n   * Data already sent due to keydown event.\n   */\n  private _dataAlreadySent: string;\n\n  constructor(\n    private readonly _textarea: HTMLTextAreaElement,\n    private readonly _compositionView: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    this._isComposing = false;\n    this._isSendingComposition = false;\n    this._compositionPosition = { start: 0, end: 0 };\n    this._dataAlreadySent = '';\n  }\n\n  /**\n   * Handles the compositionstart event, activating the composition view.\n   */\n  public compositionstart(): void {\n    this._isComposing = true;\n    this._compositionPosition.start = this._textarea.value.length;\n    this._compositionView.textContent = '';\n    this._dataAlreadySent = '';\n    this._compositionView.classList.add('active');\n  }\n\n  /**\n   * Handles the compositionupdate event, updating the composition view.\n   * @param ev The event.\n   */\n  public compositionupdate(ev: Pick<CompositionEvent, 'data'>): void {\n    this._compositionView.textContent = ev.data;\n    this.updateCompositionElements();\n    setTimeout(() => {\n      this._compositionPosition.end = this._textarea.value.length;\n    }, 0);\n  }\n\n  /**\n   * Handles the compositionend event, hiding the composition view and sending the composition to\n   * the handler.\n   */\n  public compositionend(): void {\n    this._finalizeComposition(true);\n  }\n\n  /**\n   * Handles the keydown event, routing any necessary events to the CompositionHelper functions.\n   * @param ev The keydown event.\n   * @returns Whether the Terminal should continue processing the keydown event.\n   */\n  public keydown(ev: KeyboardEvent): boolean {\n    if (this._isComposing || this._isSendingComposition) {\n      if (ev.keyCode === 229) {\n        // Continue composing if the keyCode is the \"composition character\"\n        return false;\n      }\n      if (ev.keyCode === 16 || ev.keyCode === 17 || ev.keyCode === 18) {\n        // Continue composing if the keyCode is a modifier key\n        return false;\n      }\n      // Finish composition immediately. This is mainly here for the case where enter is\n      // pressed and the handler needs to be triggered before the command is executed.\n      this._finalizeComposition(false);\n    }\n\n    if (ev.keyCode === 229) {\n      // If the \"composition character\" is used but gets to this point it means a non-composition\n      // character (eg. numbers and punctuation) was pressed when the IME was active.\n      this._handleAnyTextareaChanges();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Finalizes the composition, resuming regular input actions. This is called when a composition\n   * is ending.\n   * @param waitForPropagation Whether to wait for events to propagate before sending\n   *   the input. This should be false if a non-composition keystroke is entered before the\n   *   compositionend event is triggered, such as enter, so that the composition is sent before\n   *   the command is executed.\n   */\n  private _finalizeComposition(waitForPropagation: boolean): void {\n    this._compositionView.classList.remove('active');\n    this._isComposing = false;\n\n    if (!waitForPropagation) {\n      // Cancel any delayed composition send requests and send the input immediately.\n      this._isSendingComposition = false;\n      const input = this._textarea.value.substring(this._compositionPosition.start, this._compositionPosition.end);\n      this._coreService.triggerDataEvent(input, true);\n    } else {\n      // Make a deep copy of the composition position here as a new compositionstart event may\n      // fire before the setTimeout executes.\n      const currentCompositionPosition = {\n        start: this._compositionPosition.start,\n        end: this._compositionPosition.end\n      };\n\n      // Since composition* events happen before the changes take place in the textarea on most\n      // browsers, use a setTimeout with 0ms time to allow the native compositionend event to\n      // complete. This ensures the correct character is retrieved.\n      // This solution was used because:\n      // - The compositionend event's data property is unreliable, at least on Chromium\n      // - The last compositionupdate event's data property does not always accurately describe\n      //   the character, a counter example being Korean where an ending consonsant can move to\n      //   the following character if the following input is a vowel.\n      this._isSendingComposition = true;\n      setTimeout(() => {\n        // Ensure that the input has not already been sent\n        if (this._isSendingComposition) {\n          this._isSendingComposition = false;\n          let input;\n          // Add length of data already sent due to keydown event,\n          // otherwise input characters can be duplicated. (Issue #3191)\n          currentCompositionPosition.start += this._dataAlreadySent.length;\n          if (this._isComposing) {\n            // Use the end position to get the string if a new composition has started.\n            input = this._textarea.value.substring(currentCompositionPosition.start, currentCompositionPosition.end);\n          } else {\n            // Don't use the end position here in order to pick up any characters after the\n            // composition has finished, for example when typing a non-composition character\n            // (eg. 2) after a composition character.\n            input = this._textarea.value.substring(currentCompositionPosition.start);\n          }\n          if (input.length > 0) {\n            this._coreService.triggerDataEvent(input, true);\n          }\n        }\n      }, 0);\n    }\n  }\n\n  /**\n   * Apply any changes made to the textarea after the current event chain is allowed to complete.\n   * This should be called when not currently composing but a keydown event with the \"composition\n   * character\" (229) is triggered, in order to allow non-composition text to be entered when an\n   * IME is active.\n   */\n  private _handleAnyTextareaChanges(): void {\n    const oldValue = this._textarea.value;\n    setTimeout(() => {\n      // Ignore if a composition has started since the timeout\n      if (!this._isComposing) {\n        const newValue = this._textarea.value;\n\n        const diff = newValue.replace(oldValue, '');\n\n        this._dataAlreadySent = diff;\n\n        if (newValue.length > oldValue.length) {\n          this._coreService.triggerDataEvent(diff, true);\n        } else if (newValue.length < oldValue.length) {\n          this._coreService.triggerDataEvent(`${C0.DEL}`, true);\n        } else if ((newValue.length === oldValue.length) && (newValue !== oldValue)) {\n          this._coreService.triggerDataEvent(newValue, true);\n        }\n\n      }\n    }, 0);\n  }\n\n  /**\n   * Positions the composition view on top of the cursor and the textarea just below it (so the\n   * IME helper dialog is positioned correctly).\n   * @param dontRecurse Whether to use setTimeout to recursively trigger another update, this is\n   *   necessary as the IME events across browsers are not consistently triggered.\n   */\n  public updateCompositionElements(dontRecurse?: boolean): void {\n    if (!this._isComposing) {\n      return;\n    }\n\n    if (this._bufferService.buffer.isCursorInViewport) {\n      const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n\n      const cellHeight = this._renderService.dimensions.css.cell.height;\n      const cursorTop = this._bufferService.buffer.y * this._renderService.dimensions.css.cell.height;\n      const cursorLeft = cursorX * this._renderService.dimensions.css.cell.width;\n\n      this._compositionView.style.left = cursorLeft + 'px';\n      this._compositionView.style.top = cursorTop + 'px';\n      this._compositionView.style.height = cellHeight + 'px';\n      this._compositionView.style.lineHeight = cellHeight + 'px';\n      this._compositionView.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n      this._compositionView.style.fontSize = this._optionsService.rawOptions.fontSize + 'px';\n      // Sync the textarea to the exact position of the composition view so the IME knows where the\n      // text is.\n      const compositionViewBounds = this._compositionView.getBoundingClientRect();\n      this._textarea.style.left = cursorLeft + 'px';\n      this._textarea.style.top = cursorTop + 'px';\n      // Ensure the text area is at least 1x1, otherwise certain IMEs may break\n      this._textarea.style.width = Math.max(compositionViewBounds.width, 1) + 'px';\n      this._textarea.style.height = Math.max(compositionViewBounds.height, 1) + 'px';\n      this._textarea.style.lineHeight = compositionViewBounds.height + 'px';\n    }\n\n    if (!dontRecurse) {\n      setTimeout(() => this.updateCompositionElements(true), 0);\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function getCoordsRelativeToElement(window: Pick<Window, 'getComputedStyle'>, event: {clientX: number, clientY: number}, element: HTMLElement): [number, number] {\n  const rect = element.getBoundingClientRect();\n  const elementStyle = window.getComputedStyle(element);\n  const leftPadding = parseInt(elementStyle.getPropertyValue('padding-left'));\n  const topPadding = parseInt(elementStyle.getPropertyValue('padding-top'));\n  return [\n    event.clientX - rect.left - leftPadding,\n    event.clientY - rect.top - topPadding\n  ];\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event. The result\n * is returned as an array in the form [x, y] instead of an object as it's a\n * little faster and this function is used in some low level code.\n * @param window The window object the element belongs to.\n * @param event The mouse event.\n * @param element The terminal's container element.\n * @param colCount The number of columns in the terminal.\n * @param rowCount The number of rows n the terminal.\n * @param hasValidCharSize Whether there is a valid character size available.\n * @param cssCellWidth The cell width device pixel render dimensions.\n * @param cssCellHeight The cell height device pixel render dimensions.\n * @param isSelection Whether the request is for the selection or not. This will\n * apply an offset to the x value such that the left half of the cell will\n * select that cell and the right half will select the next cell.\n */\nexport function getCoords(window: Pick<Window, 'getComputedStyle'>, event: Pick<MouseEvent, 'clientX' | 'clientY'>, element: HTMLElement, colCount: number, rowCount: number, hasValidCharSize: boolean, cssCellWidth: number, cssCellHeight: number, isSelection?: boolean): [number, number] | undefined {\n  // Coordinates cannot be measured if there are no valid\n  if (!hasValidCharSize) {\n    return undefined;\n  }\n\n  const coords = getCoordsRelativeToElement(window, event, element);\n  if (!coords) {\n    return undefined;\n  }\n\n  coords[0] = Math.ceil((coords[0] + (isSelection ? cssCellWidth / 2 : 0)) / cssCellWidth);\n  coords[1] = Math.ceil(coords[1] / cssCellHeight);\n\n  // Ensure coordinates are within the terminal viewport. Note that selections\n  // need an addition point of precision to cover the end point (as characters\n  // cover half of one char and half of the next).\n  coords[0] = Math.min(Math.max(coords[0], 1), colCount + (isSelection ? 1 : 0));\n  coords[1] = Math.min(Math.max(coords[1], 1), rowCount);\n\n  return coords;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { C0 } from 'common/data/EscapeSequences';\nimport { IBufferService } from 'common/services/Services';\n\nconst enum Direction {\n  UP = 'A',\n  DOWN = 'B',\n  RIGHT = 'C',\n  LEFT = 'D'\n}\n\n/**\n * Concatenates all the arrow sequences together.\n * Resets the starting row to an unwrapped row, moves to the requested row,\n * then moves to requested col.\n */\nexport function moveToCellSequence(targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startX = bufferService.buffer.x;\n  const startY = bufferService.buffer.y;\n\n  // The alt buffer should try to navigate between rows\n  if (!bufferService.buffer.hasScrollback) {\n    return resetStartingRow(startX, startY, targetX, targetY, bufferService, applicationCursor) +\n      moveToRequestedRow(startY, targetY, bufferService, applicationCursor) +\n      moveToRequestedCol(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  }\n\n  // Only move horizontally for the normal buffer\n  let direction;\n  if (startY === targetY) {\n    direction = startX > targetX ? Direction.LEFT : Direction.RIGHT;\n    return repeat(Math.abs(startX - targetX), sequence(direction, applicationCursor));\n  }\n  direction = startY > targetY ? Direction.LEFT : Direction.RIGHT;\n  const rowDifference = Math.abs(startY - targetY);\n  const cellsToMove = colsFromRowEnd(startY > targetY ? targetX : startX, bufferService) +\n    (rowDifference - 1) * bufferService.cols + 1 /* wrap around 1 row */ +\n    colsFromRowBeginning(startY > targetY ? startX : targetX, bufferService);\n  return repeat(cellsToMove, sequence(direction, applicationCursor));\n}\n\n/**\n * Find the number of cols from a row beginning to a col.\n */\nfunction colsFromRowBeginning(currX: number, bufferService: IBufferService): number {\n  return currX - 1;\n}\n\n/**\n * Find the number of cols from a col to row end.\n */\nfunction colsFromRowEnd(currX: number, bufferService: IBufferService): number {\n  return bufferService.cols - currX;\n}\n\n/**\n * If the initial position of the cursor is on a row that is wrapped, move the\n * cursor up to the first row that is not wrapped to have accurate vertical\n * positioning.\n */\nfunction resetStartingRow(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length === 0) {\n    return '';\n  }\n  return repeat(bufferLine(\n    startX, startY, startX,\n    startY - wrappedRowsForRow(startY, bufferService), false, bufferService\n  ).length, sequence(Direction.LEFT, applicationCursor));\n}\n\n/**\n * Using the reset starting and ending row, move to the requested row,\n * ignoring wrapped rows\n */\nfunction moveToRequestedRow(startY: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startRow = startY - wrappedRowsForRow(startY, bufferService);\n  const endRow = targetY - wrappedRowsForRow(targetY, bufferService);\n\n  const rowsToMove = Math.abs(startRow - endRow) - wrappedRowsCount(startY, targetY, bufferService);\n\n  return repeat(rowsToMove, sequence(verticalDirection(startY, targetY), applicationCursor));\n}\n\n/**\n * Move to the requested col on the ending row\n */\nfunction moveToRequestedCol(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  let startRow;\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(targetY, bufferService);\n  } else {\n    startRow = startY;\n  }\n\n  const endRow = targetY;\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n\n  return repeat(bufferLine(\n    startX, startRow, targetX, endRow,\n    direction === Direction.RIGHT, bufferService\n  ).length, sequence(direction, applicationCursor));\n}\n\n/**\n * Utility functions\n */\n\n/**\n * Calculates the number of wrapped rows between the unwrapped starting and\n * ending rows. These rows need to ignored since the cursor skips over them.\n */\nfunction wrappedRowsCount(startY: number, targetY: number, bufferService: IBufferService): number {\n  let wrappedRows = 0;\n  const startRow = startY - wrappedRowsForRow(startY, bufferService);\n  const endRow = targetY - wrappedRowsForRow(targetY, bufferService);\n\n  for (let i = 0; i < Math.abs(startRow - endRow); i++) {\n    const direction = verticalDirection(startY, targetY) === Direction.UP ? -1 : 1;\n    const line = bufferService.buffer.lines.get(startRow + (direction * i));\n    if (line?.isWrapped) {\n      wrappedRows++;\n    }\n  }\n\n  return wrappedRows;\n}\n\n/**\n * Calculates the number of wrapped rows that make up a given row.\n * @param currentRow The row to determine how many wrapped rows make it up\n */\nfunction wrappedRowsForRow(currentRow: number, bufferService: IBufferService): number {\n  let rowCount = 0;\n  let line = bufferService.buffer.lines.get(currentRow);\n  let lineWraps = line?.isWrapped;\n\n  while (lineWraps && currentRow >= 0 && currentRow < bufferService.rows) {\n    rowCount++;\n    line = bufferService.buffer.lines.get(--currentRow);\n    lineWraps = line?.isWrapped;\n  }\n\n  return rowCount;\n}\n\n/**\n * Direction determiners\n */\n\n/**\n * Determines if the right or left arrow is needed\n */\nfunction horizontalDirection(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): Direction {\n  let startRow;\n  if (moveToRequestedRow(targetX, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(targetY, bufferService);\n  } else {\n    startRow = startY;\n  }\n\n  if ((startX < targetX &&\n    startRow <= targetY) || // down/right or same y/right\n    (startX >= targetX &&\n    startRow < targetY)) {  // down/left or same y/left\n    return Direction.RIGHT;\n  }\n  return Direction.LEFT;\n}\n\n/**\n * Determines if the up or down arrow is needed\n */\nfunction verticalDirection(startY: number, targetY: number): Direction {\n  return startY > targetY ? Direction.UP : Direction.DOWN;\n}\n\n/**\n * Constructs the string of chars in the buffer from a starting row and col\n * to an ending row and col\n * @param startCol The starting column position\n * @param startRow The starting row position\n * @param endCol The ending column position\n * @param endRow The ending row position\n * @param forward Direction to move\n */\nfunction bufferLine(\n  startCol: number,\n  startRow: number,\n  endCol: number,\n  endRow: number,\n  forward: boolean,\n  bufferService: IBufferService\n): string {\n  let currentCol = startCol;\n  let currentRow = startRow;\n  let bufferStr = '';\n\n  while (currentCol !== endCol || currentRow !== endRow) {\n    currentCol += forward ? 1 : -1;\n\n    if (forward && currentCol > bufferService.cols - 1) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, startCol, currentCol\n      );\n      currentCol = 0;\n      startCol = 0;\n      currentRow++;\n    } else if (!forward && currentCol < 0) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, 0, startCol + 1\n      );\n      currentCol = bufferService.cols - 1;\n      startCol = currentCol;\n      currentRow--;\n    }\n  }\n\n  return bufferStr + bufferService.buffer.translateBufferLineToString(\n    currentRow, false, startCol, currentCol\n  );\n}\n\n/**\n * Constructs the escape sequence for clicking an arrow\n * @param direction The direction to move\n */\nfunction sequence(direction: Direction, applicationCursor: boolean): string {\n  const mod =  applicationCursor ? 'O' : '[';\n  return C0.ESC + mod + direction;\n}\n\n/**\n * Returns a string repeated a given number of times\n * Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n * @param count The number of times to repeat the string\n * @param str The string that is to be repeated\n */\nfunction repeat(count: number, str: string): string {\n  count = Math.floor(count);\n  let rpt = '';\n  for (let i = 0; i < count; i++) {\n    rpt += str;\n  }\n  return rpt;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { removeElementFromParent } from 'browser/Dom';\nimport { BOLD_CLASS, CURSOR_BLINK_CLASS, CURSOR_CLASS, CURSOR_STYLE_BAR_CLASS, CURSOR_STYLE_BLOCK_CLASS, CURSOR_STYLE_UNDERLINE_CLASS, DomRendererRowFactory, ITALIC_CLASS } from 'browser/renderer/dom/DomRendererRowFactory';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/shared/Constants';\nimport { createRenderDimensions } from 'browser/renderer/shared/RendererUtils';\nimport { IRenderDimensions, IRenderer, IRequestRedrawEvent } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { ILinkifier2, ILinkifierEvent, ReadonlyColorSet } from 'browser/Types';\nimport { color } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IInstantiationService, IOptionsService } from 'common/services/Services';\n\nconst TERMINAL_CLASS_PREFIX = 'xterm-dom-renderer-owner-';\nconst ROW_CONTAINER_CLASS = 'xterm-rows';\nconst FG_CLASS_PREFIX = 'xterm-fg-';\nconst BG_CLASS_PREFIX = 'xterm-bg-';\nconst FOCUS_CLASS = 'xterm-focus';\nconst SELECTION_CLASS = 'xterm-selection';\n\nlet nextTerminalId = 1;\n\n/**\n * A fallback renderer for when canvas is slow. This is not meant to be\n * particularly fast or feature complete, more just stable and usable for when\n * canvas is not an option.\n */\nexport class DomRenderer extends Disposable implements IRenderer {\n  private _rowFactory: DomRendererRowFactory;\n  private _terminalClass: number = nextTerminalId++;\n\n  private _themeStyleElement!: HTMLStyleElement;\n  private _dimensionsStyleElement!: HTMLStyleElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[] = [];\n  private _selectionContainer: HTMLElement;\n  private _cellToRowElements: Int16Array[] = [];\n\n  public dimensions: IRenderDimensions;\n\n  public readonly onRequestRedraw = this.register(new EventEmitter<IRequestRedrawEvent>()).event;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _linkifier2: ILinkifier2,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add(ROW_CONTAINER_CLASS);\n    this._rowContainer.style.lineHeight = 'normal';\n    this._rowContainer.setAttribute('aria-hidden', 'true');\n    this._refreshRowElements(this._bufferService.cols, this._bufferService.rows);\n    this._selectionContainer = document.createElement('div');\n    this._selectionContainer.classList.add(SELECTION_CLASS);\n    this._selectionContainer.setAttribute('aria-hidden', 'true');\n\n    this.dimensions = createRenderDimensions();\n    this._updateDimensions();\n    this.register(this._optionsService.onOptionChange(() => this._handleOptionsChanged()));\n\n    this.register(themeService.onChangeColors(e => this._injectCss(e)));\n    this._injectCss(themeService.colors);\n\n    this._rowFactory = instantiationService.createInstance(DomRendererRowFactory, document);\n\n    this._element.classList.add(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._screenElement.appendChild(this._rowContainer);\n    this._screenElement.appendChild(this._selectionContainer);\n\n    this.register(this._linkifier2.onShowLinkUnderline(e => this._handleLinkHover(e)));\n    this.register(this._linkifier2.onHideLinkUnderline(e => this._handleLinkLeave(e)));\n\n    this.register(toDisposable(() => {\n      this._element.classList.remove(TERMINAL_CLASS_PREFIX + this._terminalClass);\n\n      // Outside influences such as React unmounts may manipulate the DOM before our disposal.\n      // https://github.com/xtermjs/xterm.js/issues/2960\n      removeElementFromParent(this._rowContainer, this._selectionContainer, this._themeStyleElement, this._dimensionsStyleElement);\n    }));\n  }\n\n  private _updateDimensions(): void {\n    const dpr = this._coreBrowserService.dpr;\n    this.dimensions.device.char.width = this._charSizeService.width * dpr;\n    this.dimensions.device.char.height = Math.ceil(this._charSizeService.height * dpr);\n    this.dimensions.device.cell.width = this.dimensions.device.char.width + Math.round(this._optionsService.rawOptions.letterSpacing);\n    this.dimensions.device.cell.height = Math.floor(this.dimensions.device.char.height * this._optionsService.rawOptions.lineHeight);\n    this.dimensions.device.char.left = 0;\n    this.dimensions.device.char.top = 0;\n    this.dimensions.device.canvas.width = this.dimensions.device.cell.width * this._bufferService.cols;\n    this.dimensions.device.canvas.height = this.dimensions.device.cell.height * this._bufferService.rows;\n    this.dimensions.css.canvas.width = Math.round(this.dimensions.device.canvas.width / dpr);\n    this.dimensions.css.canvas.height = Math.round(this.dimensions.device.canvas.height / dpr);\n    this.dimensions.css.cell.width = this.dimensions.css.canvas.width / this._bufferService.cols;\n    this.dimensions.css.cell.height = this.dimensions.css.canvas.height / this._bufferService.rows;\n\n    for (const element of this._rowElements) {\n      element.style.width = `${this.dimensions.css.canvas.width}px`;\n      element.style.height = `${this.dimensions.css.cell.height}px`;\n      element.style.lineHeight = `${this.dimensions.css.cell.height}px`;\n      // Make sure rows don't overflow onto following row\n      element.style.overflow = 'hidden';\n    }\n\n    if (!this._dimensionsStyleElement) {\n      this._dimensionsStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._dimensionsStyleElement);\n    }\n\n    const styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} span {` +\n      ` display: inline-block;` +\n      ` height: 100%;` +\n      ` vertical-align: top;` +\n      ` width: ${this.dimensions.css.cell.width}px` +\n      `}`;\n\n    this._dimensionsStyleElement.textContent = styles;\n\n    this._selectionContainer.style.height = this._viewportElement.style.height;\n    this._screenElement.style.width = `${this.dimensions.css.canvas.width}px`;\n    this._screenElement.style.height = `${this.dimensions.css.canvas.height}px`;\n  }\n\n  private _injectCss(colors: ReadonlyColorSet): void {\n    if (!this._themeStyleElement) {\n      this._themeStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._themeStyleElement);\n    }\n\n    // Base CSS\n    let styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} {` +\n      ` color: ${colors.foreground.css};` +\n      ` font-family: ${this._optionsService.rawOptions.fontFamily};` +\n      ` font-size: ${this._optionsService.rawOptions.fontSize}px;` +\n      `}`;\n    // Text styles\n    styles +=\n      `${this._terminalSelector} span:not(.${BOLD_CLASS}) {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeight};` +\n      `}` +\n      `${this._terminalSelector} span.${BOLD_CLASS} {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeightBold};` +\n      `}` +\n      `${this._terminalSelector} span.${ITALIC_CLASS} {` +\n      ` font-style: italic;` +\n      `}`;\n    // Blink animation\n    styles +=\n      `@keyframes blink_box_shadow` + `_` + this._terminalClass + ` {` +\n      ` 50% {` +\n      `  box-shadow: none;` +\n      ` }` +\n      `}`;\n    styles +=\n      `@keyframes blink_block` + `_` + this._terminalClass + ` {` +\n      ` 0% {` +\n      `  background-color: ${colors.cursor.css};` +\n      `  color: ${colors.cursorAccent.css};` +\n      ` }` +\n      ` 50% {` +\n      `  background-color: ${colors.cursorAccent.css};` +\n      `  color: ${colors.cursor.css};` +\n      ` }` +\n      `}`;\n    // Cursor\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}:not(.${FOCUS_CLASS}) .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` outline: 1px solid ${colors.cursor.css};` +\n      ` outline-offset: -1px;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}:not(.${CURSOR_STYLE_BLOCK_CLASS}) {` +\n      ` animation: blink_box_shadow` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` animation: blink_block` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` background-color: ${colors.cursor.css};` +\n      ` color: ${colors.cursorAccent.css};` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BAR_CLASS} {` +\n      ` box-shadow: ${this._optionsService.rawOptions.cursorWidth}px 0 0 ${colors.cursor.css} inset;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_UNDERLINE_CLASS} {` +\n      ` box-shadow: 0 -1px 0 ${colors.cursor.css} inset;` +\n      `}`;\n    // Selection\n    styles +=\n      `${this._terminalSelector} .${SELECTION_CLASS} {` +\n      ` position: absolute;` +\n      ` top: 0;` +\n      ` left: 0;` +\n      ` z-index: 1;` +\n      ` pointer-events: none;` +\n      `}` +\n      `${this._terminalSelector}.focus .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${colors.selectionBackgroundOpaque.css};` +\n      `}` +\n      `${this._terminalSelector} .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${colors.selectionInactiveBackgroundOpaque.css};` +\n      `}`;\n    // Colors\n    for (const [i, c] of colors.ansi.entries()) {\n      styles +=\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i} { color: ${c.css}; }` +\n        `${this._terminalSelector} .${BG_CLASS_PREFIX}${i} { background-color: ${c.css}; }`;\n    }\n    styles +=\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { color: ${color.opaque(colors.background).css}; }` +\n      `${this._terminalSelector} .${BG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { background-color: ${colors.foreground.css}; }`;\n\n    this._themeStyleElement.textContent = styles;\n  }\n\n  public handleDevicePixelRatioChange(): void {\n    this._updateDimensions();\n  }\n\n  private _refreshRowElements(cols: number, rows: number): void {\n    // Add missing elements\n    for (let i = this._rowElements.length; i <= rows; i++) {\n      const row = document.createElement('div');\n      this._rowContainer.appendChild(row);\n      this._rowElements.push(row);\n    }\n    // Remove excess elements\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n  }\n\n  public handleResize(cols: number, rows: number): void {\n    this._refreshRowElements(cols, rows);\n    this._updateDimensions();\n  }\n\n  public handleCharSizeChanged(): void {\n    this._updateDimensions();\n  }\n\n  public handleBlur(): void {\n    this._rowContainer.classList.remove(FOCUS_CLASS);\n  }\n\n  public handleFocus(): void {\n    this._rowContainer.classList.add(FOCUS_CLASS);\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    // Remove all selections\n    while (this._selectionContainer.children.length) {\n      this._selectionContainer.removeChild(this._selectionContainer.children[0]);\n    }\n\n    this._rowFactory.handleSelectionChanged(start, end, columnSelectMode);\n    this.renderRows(0, this._bufferService.rows - 1);\n\n    // Selection does not exist\n    if (!start || !end) {\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    // Create the selections\n    const documentFragment = document.createDocumentFragment();\n\n    if (columnSelectMode) {\n      const isXFlipped = start[0] > end[0];\n      documentFragment.appendChild(\n        this._createSelectionElement(viewportCappedStartRow, isXFlipped ? end[0] : start[0], isXFlipped ? start[0] : end[0], viewportCappedEndRow - viewportCappedStartRow + 1)\n      );\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const endCol = viewportCappedStartRow === viewportEndRow ? end[0] : this._bufferService.cols;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow, startCol, endCol));\n      // Draw middle rows\n      const middleRowsCount = viewportCappedEndRow - viewportCappedStartRow - 1;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow + 1, 0, this._bufferService.cols, middleRowsCount));\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewporttartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        documentFragment.appendChild(this._createSelectionElement(viewportCappedEndRow, 0, endCol));\n      }\n    }\n    this._selectionContainer.appendChild(documentFragment);\n  }\n\n  /**\n   * Creates a selection element at the specified position.\n   * @param row The row of the selection.\n   * @param colStart The start column.\n   * @param colEnd The end columns.\n   */\n  private _createSelectionElement(row: number, colStart: number, colEnd: number, rowCount: number = 1): HTMLElement {\n    const element = document.createElement('div');\n    element.style.height = `${rowCount * this.dimensions.css.cell.height}px`;\n    element.style.top = `${row * this.dimensions.css.cell.height}px`;\n    element.style.left = `${colStart * this.dimensions.css.cell.width}px`;\n    element.style.width = `${this.dimensions.css.cell.width * (colEnd - colStart)}px`;\n    return element;\n  }\n\n  public handleCursorMove(): void {\n    // No-op, the cursor is drawn when rows are drawn\n  }\n\n  private _handleOptionsChanged(): void {\n    // Force a refresh\n    this._updateDimensions();\n  }\n\n  public clear(): void {\n    for (const e of this._rowElements) {\n      /**\n       * NOTE: This used to be `e.innerText = '';` but that doesn't work when using `jsdom` and `@testing-library/react`\n       *\n       * references:\n       * - https://github.com/testing-library/react-testing-library/issues/1146\n       * - https://github.com/jsdom/jsdom/issues/1245\n       */\n      e.replaceChildren();\n    }\n  }\n\n  public renderRows(start: number, end: number): void {\n    const cursorAbsoluteY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n    const cursorBlink = this._optionsService.rawOptions.cursorBlink;\n\n    for (let y = start; y <= end; y++) {\n      const rowElement = this._rowElements[y];\n      const row = y + this._bufferService.buffer.ydisp;\n      const lineData = this._bufferService.buffer.lines.get(row);\n      const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n      if (!this._cellToRowElements[y] || this._cellToRowElements[y].length !== this._bufferService.cols) {\n        this._cellToRowElements[y] = new Int16Array(this._bufferService.cols);\n      }\n      rowElement.replaceChildren(this._rowFactory.createRow(lineData!, row, row === cursorAbsoluteY, cursorStyle, cursorX, cursorBlink, this.dimensions.css.cell.width, this._bufferService.cols, this._cellToRowElements[y]));\n    }\n  }\n\n  private get _terminalSelector(): string {\n    return `.${TERMINAL_CLASS_PREFIX}${this._terminalClass}`;\n  }\n\n  private _handleLinkHover(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, true);\n  }\n\n  private _handleLinkLeave(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, false);\n  }\n\n  private _setCellUnderline(x: number, x2: number, y: number, y2: number, cols: number, enabled: boolean): void {\n    x = this._cellToRowElements[y][x];\n    x2 = this._cellToRowElements[y2][x2];\n\n    if (x === -1 || x2 === -1) {\n      return;\n    }\n\n    while (x !== x2 || y !== y2) {\n      const row = this._rowElements[y];\n      if (!row) {\n        return;\n      }\n      const span = row.children[x] as HTMLElement;\n      if (span) {\n        span.style.textDecoration = enabled ? 'underline' : 'none';\n      }\n      if (++x >= cols) {\n        x = 0;\n        y++;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, IColor } from 'common/Types';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/shared/Constants';\nimport { NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Attributes } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { ICoreService, IDecorationService, IOptionsService } from 'common/services/Services';\nimport { color, rgba } from 'common/Color';\nimport { IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { ICharacterJoinerService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { JoinedCellData } from 'browser/services/CharacterJoinerService';\nimport { excludeFromContrastRatioDemands } from 'browser/renderer/shared/RendererUtils';\nimport { AttributeData } from 'common/buffer/AttributeData';\n\nexport const BOLD_CLASS = 'xterm-bold';\nexport const DIM_CLASS = 'xterm-dim';\nexport const ITALIC_CLASS = 'xterm-italic';\nexport const UNDERLINE_CLASS = 'xterm-underline';\nexport const STRIKETHROUGH_CLASS = 'xterm-strikethrough';\nexport const CURSOR_CLASS = 'xterm-cursor';\nexport const CURSOR_BLINK_CLASS = 'xterm-cursor-blink';\nexport const CURSOR_STYLE_BLOCK_CLASS = 'xterm-cursor-block';\nexport const CURSOR_STYLE_BAR_CLASS = 'xterm-cursor-bar';\nexport const CURSOR_STYLE_UNDERLINE_CLASS = 'xterm-cursor-underline';\n\nexport class DomRendererRowFactory {\n  private _workCell: CellData = new CellData();\n\n  private _selectionStart: [number, number] | undefined;\n  private _selectionEnd: [number, number] | undefined;\n  private _columnSelectMode: boolean = false;\n\n  constructor(\n    private readonly _document: Document,\n    @ICharacterJoinerService private readonly _characterJoinerService: ICharacterJoinerService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IThemeService private readonly _themeService: IThemeService\n  ) {}\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionStart = start;\n    this._selectionEnd = end;\n    this._columnSelectMode = columnSelectMode;\n  }\n\n  public createRow(lineData: IBufferLine, row: number, isCursorRow: boolean, cursorStyle: string | undefined, cursorX: number, cursorBlink: boolean, cellWidth: number, cols: number, cellMap: Int16Array): DocumentFragment {\n    // NOTE: `cellMap` maps cell positions to a span element index in a row.\n    // All positions should be updated, even skipped ones after wide chars or left overs at the end,\n    // otherwise the mouse hover logic might mark the wrong elements as underlined.\n\n    const fragment = this._document.createDocumentFragment();\n\n    const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n    // Find the line length first, this prevents the need to output a bunch of\n    // empty cells at the end. This cannot easily be integrated into the main\n    // loop below because of the colCount feature (which can be removed after we\n    // properly support reflow and disallow data to go beyond the right-side of\n    // the viewport).\n    let lineLength = 0;\n    for (let x = Math.min(lineData.length, cols) - 1; x >= 0; x--) {\n      if (lineData.loadCell(x, this._workCell).getCode() !== NULL_CELL_CODE || (isCursorRow && x === cursorX)) {\n        lineLength = x + 1;\n        break;\n      }\n    }\n\n    const colors = this._themeService.colors;\n    let elemIndex = -1;\n\n    let x = 0;\n    for (; x < lineLength; x++) {\n      lineData.loadCell(x, this._workCell);\n      let width = this._workCell.getWidth();\n\n      // The character to the left is a wide character, drawing is owned by the char at x-1\n      // still have to update cellMap with current element index\n      if (width === 0) {\n        cellMap[x] = elemIndex;\n        continue;\n      }\n\n      // If true, indicates that the current character(s) to draw were joined.\n      let isJoined = false;\n      let lastCharX = x;\n\n      // Process any joined character ranges as needed. Because of how the\n      // ranges are produced, we know that they are valid for the characters\n      // and attributes of our input.\n      let cell = this._workCell;\n      if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n        isJoined = true;\n        const range = joinedRanges.shift()!;\n\n        // We already know the exact start and end column of the joined range,\n        // so we get the string and width representing it directly\n        cell = new JoinedCellData(\n          this._workCell,\n          lineData.translateToString(true, range[0], range[1]),\n          range[1] - range[0]\n        );\n\n        // Skip over the cells occupied by this range in the loop\n        lastCharX = range[1] - 1;\n\n        // Recalculate width\n        width = cell.getWidth();\n      }\n\n      const charElement = this._document.createElement('span');\n      if (width > 1) {\n        charElement.style.width = `${cellWidth * width}px`;\n      }\n\n      if (isJoined) {\n        // Ligatures in the DOM renderer must use display inline, as they may not show with\n        // inline-block if they are outside the bounds of the element\n        charElement.style.display = 'inline';\n\n        // The DOM renderer colors the background of the cursor but for ligatures all cells are\n        // joined. The workaround here is to show a cursor around the whole ligature so it shows up,\n        // the cursor looks the same when on any character of the ligature though\n        if (cursorX >= x && cursorX <= lastCharX) {\n          cursorX = x;\n        }\n      }\n\n      if (!this._coreService.isCursorHidden && isCursorRow && x === cursorX) {\n        charElement.classList.add(CURSOR_CLASS);\n\n        if (cursorBlink) {\n          charElement.classList.add(CURSOR_BLINK_CLASS);\n        }\n\n        switch (cursorStyle) {\n          case 'bar':\n            charElement.classList.add(CURSOR_STYLE_BAR_CLASS);\n            break;\n          case 'underline':\n            charElement.classList.add(CURSOR_STYLE_UNDERLINE_CLASS);\n            break;\n          default:\n            charElement.classList.add(CURSOR_STYLE_BLOCK_CLASS);\n            break;\n        }\n      }\n\n      if (cell.isBold()) {\n        charElement.classList.add(BOLD_CLASS);\n      }\n\n      if (cell.isItalic()) {\n        charElement.classList.add(ITALIC_CLASS);\n      }\n\n      if (cell.isDim()) {\n        charElement.classList.add(DIM_CLASS);\n      }\n\n      if (cell.isInvisible()) {\n        charElement.textContent = WHITESPACE_CELL_CHAR;\n      } else {\n        charElement.textContent = cell.getChars() || WHITESPACE_CELL_CHAR;\n      }\n\n      if (cell.isUnderline()) {\n        charElement.classList.add(`${UNDERLINE_CLASS}-${cell.extended.underlineStyle}`);\n        if (charElement.textContent === ' ') {\n          charElement.textContent = '\\xa0'; // = &nbsp;\n        }\n        if (!cell.isUnderlineColorDefault()) {\n          if (cell.isUnderlineColorRGB()) {\n            charElement.style.textDecorationColor = `rgb(${AttributeData.toColorRGB(cell.getUnderlineColor()).join(',')})`;\n          } else {\n            let fg = cell.getUnderlineColor();\n            if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n              fg += 8;\n            }\n            charElement.style.textDecorationColor = colors.ansi[fg].css;\n          }\n        }\n      }\n\n      if (cell.isStrikethrough()) {\n        charElement.classList.add(STRIKETHROUGH_CLASS);\n      }\n\n      let fg = cell.getFgColor();\n      let fgColorMode = cell.getFgColorMode();\n      let bg = cell.getBgColor();\n      let bgColorMode = cell.getBgColorMode();\n      const isInverse = !!cell.isInverse();\n      if (isInverse) {\n        const temp = fg;\n        fg = bg;\n        bg = temp;\n        const temp2 = fgColorMode;\n        fgColorMode = bgColorMode;\n        bgColorMode = temp2;\n      }\n\n      // Apply any decoration foreground/background overrides, this must happen after inverse has\n      // been applied\n      let bgOverride: IColor | undefined;\n      let fgOverride: IColor | undefined;\n      let isTop = false;\n      this._decorationService.forEachDecorationAtCell(x, row, undefined, d => {\n        if (d.options.layer !== 'top' && isTop) {\n          return;\n        }\n        if (d.backgroundColorRGB) {\n          bgColorMode = Attributes.CM_RGB;\n          bg = d.backgroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          bgOverride = d.backgroundColorRGB;\n        }\n        if (d.foregroundColorRGB) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = d.foregroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          fgOverride = d.foregroundColorRGB;\n        }\n        isTop = d.options.layer === 'top';\n      });\n\n      // Apply selection foreground if applicable\n      const isInSelection = this._isCellInSelection(x, row);\n      if (!isTop) {\n        if (colors.selectionForeground && isInSelection) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = colors.selectionForeground.rgba >> 8 & 0xFFFFFF;\n          fgOverride = colors.selectionForeground;\n        }\n      }\n\n      // If in the selection, force the element to be above the selection to improve contrast and\n      // support opaque selections\n      if (isInSelection) {\n        bgOverride = this._coreBrowserService.isFocused ? colors.selectionBackgroundOpaque : colors.selectionInactiveBackgroundOpaque;\n        isTop = true;\n      }\n\n      // If it's a top decoration, render above the selection\n      if (isTop) {\n        charElement.classList.add(`xterm-decoration-top`);\n      }\n\n      // Background\n      let resolvedBg: IColor;\n      switch (bgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          resolvedBg = colors.ansi[bg];\n          charElement.classList.add(`xterm-bg-${bg}`);\n          break;\n        case Attributes.CM_RGB:\n          resolvedBg = rgba.toColor(bg >> 16, bg >> 8 & 0xFF, bg & 0xFF);\n          this._addStyle(charElement, `background-color:#${padStart((bg >>> 0).toString(16), '0', 6)}`);\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (isInverse) {\n            resolvedBg = colors.foreground;\n            charElement.classList.add(`xterm-bg-${INVERTED_DEFAULT_COLOR}`);\n          } else {\n            resolvedBg = colors.background;\n          }\n      }\n\n      // If there is no background override by now it's the original color, so apply dim if needed\n      if (!bgOverride) {\n        if (cell.isDim()) {\n          bgOverride = color.multiplyOpacity(resolvedBg, 0.5);\n        }\n      }\n\n      // Foreground\n      switch (fgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          if (cell.isBold() && fg < 8 && this._optionsService.rawOptions.drawBoldTextInBrightColors) {\n            fg += 8;\n          }\n          if (!this._applyMinimumContrast(charElement, resolvedBg, colors.ansi[fg], cell, bgOverride, undefined)) {\n            charElement.classList.add(`xterm-fg-${fg}`);\n          }\n          break;\n        case Attributes.CM_RGB:\n          const color = rgba.toColor(\n            (fg >> 16) & 0xFF,\n            (fg >>  8) & 0xFF,\n            (fg      ) & 0xFF\n          );\n          if (!this._applyMinimumContrast(charElement, resolvedBg, color, cell, bgOverride, fgOverride)) {\n            this._addStyle(charElement, `color:#${padStart(fg.toString(16), '0', 6)}`);\n          }\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (!this._applyMinimumContrast(charElement, resolvedBg, colors.foreground, cell, bgOverride, undefined)) {\n            if (isInverse) {\n              charElement.classList.add(`xterm-fg-${INVERTED_DEFAULT_COLOR}`);\n            }\n          }\n      }\n\n      fragment.appendChild(charElement);\n      cellMap[x] = ++elemIndex;\n\n      x = lastCharX;\n    }\n\n    // since the loop above might exit early not handling all cells,\n    // also set remaining cell positions to last element index\n    if (x < cols - 1) {\n      cellMap.subarray(x).fill(++elemIndex);\n    }\n\n    return fragment;\n  }\n\n  private _applyMinimumContrast(element: HTMLElement, bg: IColor, fg: IColor, cell: ICellData, bgOverride: IColor | undefined, fgOverride: IColor | undefined): boolean {\n    if (this._optionsService.rawOptions.minimumContrastRatio === 1 || excludeFromContrastRatioDemands(cell.getCode())) {\n      return false;\n    }\n\n    // Try get from cache first, only use the cache when there are no decoration overrides\n    let adjustedColor: IColor | undefined | null = undefined;\n    if (!bgOverride && !fgOverride) {\n      adjustedColor = this._themeService.colors.contrastCache.getColor(bg.rgba, fg.rgba);\n    }\n\n    // Calculate and store in cache\n    if (adjustedColor === undefined) {\n      adjustedColor = color.ensureContrastRatio(bgOverride || bg, fgOverride || fg, this._optionsService.rawOptions.minimumContrastRatio);\n      this._themeService.colors.contrastCache.setColor((bgOverride || bg).rgba, (fgOverride || fg).rgba, adjustedColor ?? null);\n    }\n\n    if (adjustedColor) {\n      this._addStyle(element, `color:${adjustedColor.css}`);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _addStyle(element: HTMLElement, style: string): void {\n    element.setAttribute('style', `${element.getAttribute('style') || ''}${style};`);\n  }\n\n  private _isCellInSelection(x: number, y: number): boolean {\n    const start = this._selectionStart;\n    const end = this._selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    if (this._columnSelectMode) {\n      if (start[0] <= end[0]) {\n        return x >= start[0] && y >= start[1] &&\n          x < end[0] && y <= end[1];\n      }\n      return x < start[0] && y >= start[1] &&\n        x >= end[0] && y <= end[1];\n    }\n    return (y > start[1] && y < end[1]) ||\n        (start[1] === end[1] && y === start[1] && x >= start[0] && x < end[0]) ||\n        (start[1] < end[1] && y === end[1] && x < end[0]) ||\n        (start[1] < end[1] && y === start[1] && x >= start[0]);\n  }\n}\n\nfunction padStart(text: string, padChar: string, length: number): string {\n  while (text.length < length) {\n    text = padChar + text;\n  }\n  return text;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isFirefox, isLegacyEdge } from 'common/Platform';\n\nexport const INVERTED_DEFAULT_COLOR = 257;\n\nexport const DIM_OPACITY = 0.5;\n// The text baseline is set conditionally by browser. Using 'ideographic' for Firefox or Legacy Edge would\n// result in truncated text (Issue 3353). Using 'bottom' for Chrome would result in slightly\n// unaligned Powerline fonts (PR 3356#issuecomment-850928179).\nexport const TEXT_BASELINE: CanvasTextBaseline = isFirefox || isLegacyEdge ? 'bottom' : 'ideographic';\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDimensions, IOffset, IRenderDimensions } from 'browser/renderer/shared/Types';\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n\nexport function isPowerlineGlyph(codepoint: number): boolean {\n  // Only return true for Powerline symbols which require\n  // different padding and should be excluded from minimum contrast\n  // ratio standards\n  return 0xE0A4 <= codepoint && codepoint <= 0xE0D6;\n}\n\nexport function isRestrictedPowerlineGlyph(codepoint: number): boolean {\n  return 0xE0B0 <= codepoint && codepoint <= 0xE0B7;\n}\n\nfunction isBoxOrBlockGlyph(codepoint: number): boolean {\n  return 0x2500 <= codepoint && codepoint <= 0x259F;\n}\n\nexport function excludeFromContrastRatioDemands(codepoint: number): boolean {\n  return isPowerlineGlyph(codepoint) || isBoxOrBlockGlyph(codepoint);\n}\n\nexport function createRenderDimensions(): IRenderDimensions {\n  return {\n    css: {\n      canvas: createDimension(),\n      cell: createDimension()\n    },\n    device: {\n      canvas: createDimension(),\n      cell: createDimension(),\n      char: {\n        width: 0,\n        height: 0,\n        left: 0,\n        top: 0\n      }\n    }\n  };\n}\n\nfunction createDimension(): IDimensions {\n  return {\n    width: 0,\n    height: 0\n  };\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService } from 'common/services/Services';\n\n/**\n * Represents a selection within the buffer. This model only cares about column\n * and row coordinates, not wide characters.\n */\nexport class SelectionModel {\n  /**\n   * Whether select all is currently active.\n   */\n  public isSelectAllActive: boolean = false;\n\n  /**\n   * The minimal length of the selection from the start position. When double\n   * clicking on a word, the word will be selected which makes the selection\n   * start at the start of the word and makes this variable the length.\n   */\n  public selectionStartLength: number = 0;\n\n  /**\n   * The [x, y] position the selection starts at.\n   */\n  public selectionStart: [number, number] | undefined;\n\n  /**\n   * The [x, y] position the selection ends at.\n   */\n  public selectionEnd: [number, number] | undefined;\n\n  constructor(\n    private _bufferService: IBufferService\n  ) {\n  }\n\n  /**\n   * Clears the current selection.\n   */\n  public clearSelection(): void {\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n    this.isSelectAllActive = false;\n    this.selectionStartLength = 0;\n  }\n\n  /**\n   * The final selection start, taking into consideration select all.\n   */\n  public get finalSelectionStart(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [0, 0];\n    }\n\n    if (!this.selectionEnd || !this.selectionStart) {\n      return this.selectionStart;\n    }\n\n    return this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart;\n  }\n\n  /**\n   * The final selection end, taking into consideration select all, double click\n   * word selection and triple click line selection.\n   */\n  public get finalSelectionEnd(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [this._bufferService.cols, this._bufferService.buffer.ybase + this._bufferService.rows - 1];\n    }\n\n    if (!this.selectionStart) {\n      return undefined;\n    }\n\n    // Use the selection start + length if the end doesn't exist or they're reversed\n    if (!this.selectionEnd || this.areSelectionValuesReversed()) {\n      const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n      if (startPlusLength > this._bufferService.cols) {\n        // Ensure the trailing EOL isn't included when the selection ends on the right edge\n        if (startPlusLength % this._bufferService.cols === 0) {\n          return [this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols) - 1];\n        }\n        return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n      }\n      return [startPlusLength, this.selectionStart[1]];\n    }\n\n    // Ensure the the word/line is selected after a double/triple click\n    if (this.selectionStartLength) {\n      // Select the larger of the two when start and end are on the same line\n      if (this.selectionEnd[1] === this.selectionStart[1]) {\n        // Keep the whole wrapped word/line selected if the content wraps multiple lines\n        const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n        if (startPlusLength > this._bufferService.cols) {\n          return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n        }\n        return [Math.max(startPlusLength, this.selectionEnd[0]), this.selectionEnd[1]];\n      }\n    }\n    return this.selectionEnd;\n  }\n\n  /**\n   * Returns whether the selection start and end are reversed.\n   */\n  public areSelectionValuesReversed(): boolean {\n    const start = this.selectionStart;\n    const end = this.selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[1] > end[1] || (start[1] === end[1] && start[0] > end[0]);\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   * @returns Whether a refresh is necessary.\n   */\n  public handleTrim(amount: number): boolean {\n    // Adjust the selection position based on the trimmed amount.\n    if (this.selectionStart) {\n      this.selectionStart[1] -= amount;\n    }\n    if (this.selectionEnd) {\n      this.selectionEnd[1] -= amount;\n    }\n\n    // The selection has moved off the buffer, clear it.\n    if (this.selectionEnd && this.selectionEnd[1] < 0) {\n      this.clearSelection();\n      return true;\n    }\n\n    // If the selection start is trimmed, ensure the start column is 0.\n    if (this.selectionStart && this.selectionStart[1] < 0) {\n      this.selectionStart[1] = 0;\n    }\n    return false;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { Disposable } from 'common/Lifecycle';\nimport { ITerminalOptions } from 'common/Types';\n\nexport class CharSizeService extends Disposable implements ICharSizeService {\n  public serviceBrand: undefined;\n\n  public width: number = 0;\n  public height: number = 0;\n  private _measureStrategy: IMeasureStrategy;\n\n  public get hasValidSize(): boolean { return this.width > 0 && this.height > 0; }\n\n  private readonly _onCharSizeChange = this.register(new EventEmitter<void>());\n  public readonly onCharSizeChange = this._onCharSizeChange.event;\n\n  constructor(\n    document: Document,\n    parentElement: HTMLElement,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._measureStrategy = new DomMeasureStrategy(document, parentElement, this._optionsService);\n    this.register(this._optionsService.onMultipleOptionChange(['fontFamily', 'fontSize'], () => this.measure()));\n  }\n\n  public measure(): void {\n    const result = this._measureStrategy.measure();\n    if (result.width !== this.width || result.height !== this.height) {\n      this.width = result.width;\n      this.height = result.height;\n      this._onCharSizeChange.fire();\n    }\n  }\n}\n\ninterface IMeasureStrategy {\n  measure(): IReadonlyMeasureResult;\n}\n\ninterface IReadonlyMeasureResult {\n  readonly width: number;\n  readonly height: number;\n}\n\ninterface IMeasureResult {\n  width: number;\n  height: number;\n}\n\n// TODO: For supporting browsers we should also provide a CanvasCharDimensionsProvider that uses ctx.measureText\nclass DomMeasureStrategy implements IMeasureStrategy {\n  private _result: IMeasureResult = { width: 0, height: 0 };\n  private _measureElement: HTMLElement;\n\n  constructor(\n    private _document: Document,\n    private _parentElement: HTMLElement,\n    private _optionsService: IOptionsService\n  ) {\n    this._measureElement = this._document.createElement('span');\n    this._measureElement.classList.add('xterm-char-measure-element');\n    this._measureElement.textContent = 'W';\n    this._measureElement.setAttribute('aria-hidden', 'true');\n    this._parentElement.appendChild(this._measureElement);\n  }\n\n  public measure(): IReadonlyMeasureResult {\n    this._measureElement.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n    this._measureElement.style.fontSize = `${this._optionsService.rawOptions.fontSize}px`;\n\n    // Note that this triggers a synchronous layout\n    const geometry = this._measureElement.getBoundingClientRect();\n\n    // If values are 0 then the element is likely currently display:none, in which case we should\n    // retain the previous value.\n    if (geometry.width !== 0 && geometry.height !== 0) {\n      this._result.width = geometry.width;\n      this._result.height = Math.ceil(geometry.height);\n    }\n\n    return this._result;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, CharData } from 'common/Types';\nimport { ICharacterJoiner } from 'browser/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService } from 'common/services/Services';\nimport { ICharacterJoinerService } from 'browser/services/Services';\n\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n\nexport class CharacterJoinerService implements ICharacterJoinerService {\n  public serviceBrand: undefined;\n\n  private _characterJoiners: ICharacterJoiner[] = [];\n  private _nextCharacterJoinerId: number = 0;\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    @IBufferService private _bufferService: IBufferService\n  ) { }\n\n  public register(handler: (text: string) => [number, number][]): number {\n    const joiner: ICharacterJoiner = {\n      id: this._nextCharacterJoinerId++,\n      handler\n    };\n\n    this._characterJoiners.push(joiner);\n    return joiner.id;\n  }\n\n  public deregister(joinerId: number): boolean {\n    for (let i = 0; i < this._characterJoiners.length; i++) {\n      if (this._characterJoiners[i].id === joinerId) {\n        this._characterJoiners.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public getJoinedCharacters(row: number): [number, number][] {\n    if (this._characterJoiners.length === 0) {\n      return [];\n    }\n\n    const line = this._bufferService.buffer.lines.get(row);\n    if (!line || line.length === 0) {\n      return [];\n    }\n\n    const ranges: [number, number][] = [];\n    const lineStr = line.translateToString(true);\n\n    // Because some cells can be represented by multiple javascript characters,\n    // we track the cell and the string indexes separately. This allows us to\n    // translate the string ranges we get from the joiners back into cell ranges\n    // for use when rendering\n    let rangeStartColumn = 0;\n    let currentStringIndex = 0;\n    let rangeStartStringIndex = 0;\n    let rangeAttrFG = line.getFg(0);\n    let rangeAttrBG = line.getBg(0);\n\n    for (let x = 0; x < line.getTrimmedLength(); x++) {\n      line.loadCell(x, this._workCell);\n\n      if (this._workCell.getWidth() === 0) {\n        // If this character is of width 0, skip it.\n        continue;\n      }\n\n      // End of range\n      if (this._workCell.fg !== rangeAttrFG || this._workCell.bg !== rangeAttrBG) {\n        // If we ended up with a sequence of more than one character,\n        // look for ranges to join.\n        if (x - rangeStartColumn > 1) {\n          const joinedRanges = this._getJoinedRanges(\n            lineStr,\n            rangeStartStringIndex,\n            currentStringIndex,\n            line,\n            rangeStartColumn\n          );\n          for (let i = 0; i < joinedRanges.length; i++) {\n            ranges.push(joinedRanges[i]);\n          }\n        }\n\n        // Reset our markers for a new range.\n        rangeStartColumn = x;\n        rangeStartStringIndex = currentStringIndex;\n        rangeAttrFG = this._workCell.fg;\n        rangeAttrBG = this._workCell.bg;\n      }\n\n      currentStringIndex += this._workCell.getChars().length || WHITESPACE_CELL_CHAR.length;\n    }\n\n    // Process any trailing ranges.\n    if (this._bufferService.cols - rangeStartColumn > 1) {\n      const joinedRanges = this._getJoinedRanges(\n        lineStr,\n        rangeStartStringIndex,\n        currentStringIndex,\n        line,\n        rangeStartColumn\n      );\n      for (let i = 0; i < joinedRanges.length; i++) {\n        ranges.push(joinedRanges[i]);\n      }\n    }\n\n    return ranges;\n  }\n\n  /**\n   * Given a segment of a line of text, find all ranges of text that should be\n   * joined in a single rendering unit. Ranges are internally converted to\n   * column ranges, rather than string ranges.\n   * @param line String representation of the full line of text\n   * @param startIndex Start position of the range to search in the string (inclusive)\n   * @param endIndex End position of the range to search in the string (exclusive)\n   */\n  private _getJoinedRanges(line: string, startIndex: number, endIndex: number, lineData: IBufferLine, startCol: number): [number, number][] {\n    const text = line.substring(startIndex, endIndex);\n    // At this point we already know that there is at least one joiner so\n    // we can just pull its value and assign it directly rather than\n    // merging it into an empty array, which incurs unnecessary writes.\n    let allJoinedRanges: [number, number][] = [];\n    try {\n      allJoinedRanges = this._characterJoiners[0].handler(text);\n    } catch (error) {\n      console.error(error);\n    }\n    for (let i = 1; i < this._characterJoiners.length; i++) {\n      // We merge any overlapping ranges across the different joiners\n      try {\n        const joinerRanges = this._characterJoiners[i].handler(text);\n        for (let j = 0; j < joinerRanges.length; j++) {\n          CharacterJoinerService._mergeRanges(allJoinedRanges, joinerRanges[j]);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    this._stringRangesToCellRanges(allJoinedRanges, lineData, startCol);\n    return allJoinedRanges;\n  }\n\n  /**\n   * Modifies the provided ranges in-place to adjust for variations between\n   * string length and cell width so that the range represents a cell range,\n   * rather than the string range the joiner provides.\n   * @param ranges String ranges containing start (inclusive) and end (exclusive) index\n   * @param line Cell data for the relevant line in the terminal\n   * @param startCol Offset within the line to start from\n   */\n  private _stringRangesToCellRanges(ranges: [number, number][], line: IBufferLine, startCol: number): void {\n    let currentRangeIndex = 0;\n    let currentRangeStarted = false;\n    let currentStringIndex = 0;\n    let currentRange = ranges[currentRangeIndex];\n\n    // If we got through all of the ranges, stop searching\n    if (!currentRange) {\n      return;\n    }\n\n    for (let x = startCol; x < this._bufferService.cols; x++) {\n      const width = line.getWidth(x);\n      const length = line.getString(x).length || WHITESPACE_CELL_CHAR.length;\n\n      // We skip zero-width characters when creating the string to join the text\n      // so we do the same here\n      if (width === 0) {\n        continue;\n      }\n\n      // Adjust the start of the range\n      if (!currentRangeStarted && currentRange[0] <= currentStringIndex) {\n        currentRange[0] = x;\n        currentRangeStarted = true;\n      }\n\n      // Adjust the end of the range\n      if (currentRange[1] <= currentStringIndex) {\n        currentRange[1] = x;\n\n        // We're finished with this range, so we move to the next one\n        currentRange = ranges[++currentRangeIndex];\n\n        // If there are no more ranges left, stop searching\n        if (!currentRange) {\n          break;\n        }\n\n        // Ranges can be on adjacent characters. Because the end index of the\n        // ranges are exclusive, this means that the index for the start of a\n        // range can be the same as the end index of the previous range. To\n        // account for the start of the next range, we check here just in case.\n        if (currentRange[0] <= currentStringIndex) {\n          currentRange[0] = x;\n          currentRangeStarted = true;\n        } else {\n          currentRangeStarted = false;\n        }\n      }\n\n      // Adjust the string index based on the character length to line up with\n      // the column adjustment\n      currentStringIndex += length;\n    }\n\n    // If there is still a range left at the end, it must extend all the way to\n    // the end of the line.\n    if (currentRange) {\n      currentRange[1] = this._bufferService.cols;\n    }\n  }\n\n  /**\n   * Merges the range defined by the provided start and end into the list of\n   * existing ranges. The merge is done in place on the existing range for\n   * performance and is also returned.\n   * @param ranges Existing range list\n   * @param newRange Tuple of two numbers representing the new range to merge in.\n   * @returns The ranges input with the new range merged in place\n   */\n  private static _mergeRanges(ranges: [number, number][], newRange: [number, number]): [number, number][] {\n    let inRange = false;\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      if (!inRange) {\n        if (newRange[1] <= range[0]) {\n          // Case 1: New range is before the search range\n          ranges.splice(i, 0, newRange);\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 2: New range is either wholly contained within the\n          // search range or overlaps with the front of it\n          range[0] = Math.min(newRange[0], range[0]);\n          return ranges;\n        }\n\n        if (newRange[0] < range[1]) {\n          // Case 3: New range either wholly contains the search range\n          // or overlaps with the end of it\n          range[0] = Math.min(newRange[0], range[0]);\n          inRange = true;\n        }\n\n        // Case 4: New range starts after the search range\n        continue;\n      } else {\n        if (newRange[1] <= range[0]) {\n          // Case 5: New range extends from previous range but doesn't\n          // reach the current one\n          ranges[i - 1][1] = newRange[1];\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 6: New range extends from prvious range into the\n          // current range\n          ranges[i - 1][1] = Math.max(newRange[1], range[1]);\n          ranges.splice(i, 1);\n          return ranges;\n        }\n\n        // Case 7: New range extends from previous range past the\n        // end of the current range\n        ranges.splice(i, 1);\n        i--;\n      }\n    }\n\n    if (inRange) {\n      // Case 8: New range extends past the last existing range\n      ranges[ranges.length - 1][1] = newRange[1];\n    } else {\n      // Case 9: New range starts after the last existing range\n      ranges.push(newRange);\n    }\n\n    return ranges;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreBrowserService } from './Services';\n\nexport class CoreBrowserService implements ICoreBrowserService {\n  public serviceBrand: undefined;\n\n  private _isFocused = false;\n  private _cachedIsFocused: boolean | undefined = undefined;\n\n  constructor(\n    private _textarea: HTMLTextAreaElement,\n    public readonly window: Window & typeof globalThis\n  ) {\n    this._textarea.addEventListener('focus', () => this._isFocused = true);\n    this._textarea.addEventListener('blur', () => this._isFocused = false);\n  }\n\n  public get dpr(): number {\n    return this.window.devicePixelRatio;\n  }\n\n  public get isFocused(): boolean {\n    if (this._cachedIsFocused === undefined) {\n      this._cachedIsFocused = this._isFocused && this._textarea.ownerDocument.hasFocus();\n      queueMicrotask(() => this._cachedIsFocused = undefined);\n    }\n    return this._cachedIsFocused;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService, IRenderService, IMouseService } from './Services';\nimport { getCoords, getCoordsRelativeToElement } from 'browser/input/Mouse';\n\nexport class MouseService implements IMouseService {\n  public serviceBrand: undefined;\n\n  constructor(\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService\n  ) {\n  }\n\n  public getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined {\n    return getCoords(\n      window,\n      event,\n      element,\n      colCount,\n      rowCount,\n      this._charSizeService.hasValidSize,\n      this._renderService.dimensions.css.cell.width,\n      this._renderService.dimensions.css.cell.height,\n      isSelection\n    );\n  }\n\n  public getMouseReportCoords(event: MouseEvent, element: HTMLElement): { col: number, row: number, x: number, y: number } | undefined {\n    const coords = getCoordsRelativeToElement(window, event, element);\n\n    // due to rounding issues in zoom states pixel values might be negative or overflow actual canvas\n    // ignore those events effectively narrowing mouse area a tiny bit at the edges\n    if (!this._charSizeService.hasValidSize\n      || coords[0] < 0\n      || coords[1] < 0\n      || coords[0] >= this._renderService.dimensions.css.canvas.width\n      || coords[1] >= this._renderService.dimensions.css.canvas.height) {\n      return undefined;\n    }\n\n    return {\n      col: Math.floor(coords[0] / this._renderService.dimensions.css.cell.width),\n      row: Math.floor(coords[1] / this._renderService.dimensions.css.cell.height),\n      x: Math.floor(coords[0]),\n      y: Math.floor(coords[1])\n    };\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions } from 'browser/renderer/shared/Types';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IRenderDebouncerWithCallback, ReadonlyColorSet } from 'browser/Types';\nimport { IOptionsService, IBufferService, IDecorationService } from 'common/services/Services';\nimport { ICharSizeService, ICoreBrowserService, IRenderService, IThemeService } from 'browser/services/Services';\nimport { DebouncedIdleTask } from 'common/TaskQueue';\nimport { ThemeService } from 'browser/services/ThemeService';\n\ninterface ISelectionState {\n  start: [number, number] | undefined;\n  end: [number, number] | undefined;\n  columnSelectMode: boolean;\n}\n\nexport class RenderService extends Disposable implements IRenderService {\n  public serviceBrand: undefined;\n\n  private _renderer: IRenderer | undefined;\n  private _renderDebouncer: IRenderDebouncerWithCallback;\n  private _screenDprMonitor: ScreenDprMonitor;\n  private _pausedResizeTask = new DebouncedIdleTask();\n\n  private _isPaused: boolean = false;\n  private _needsFullRefresh: boolean = false;\n  private _isNextRenderRedrawOnly: boolean = true;\n  private _needsSelectionRefresh: boolean = false;\n  private _canvasWidth: number = 0;\n  private _canvasHeight: number = 0;\n  private _selectionState: ISelectionState = {\n    start: undefined,\n    end: undefined,\n    columnSelectMode: false\n  };\n\n  private readonly _onDimensionsChange = this.register(new EventEmitter<IRenderDimensions>());\n  public readonly onDimensionsChange =  this._onDimensionsChange.event;\n  private readonly _onRenderedViewportChange = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRenderedViewportChange = this._onRenderedViewportChange.event;\n  private readonly _onRender = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRender = this._onRender.event;\n  private readonly _onRefreshRequest = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRefreshRequest = this._onRefreshRequest.event;\n\n  public get dimensions(): IRenderDimensions { return this._renderer!.dimensions; }\n\n  constructor(\n    private _rowCount: number,\n    screenElement: HTMLElement,\n    @IOptionsService optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IDecorationService decorationService: IDecorationService,\n    @IBufferService bufferService: IBufferService,\n    @ICoreBrowserService coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n\n    this.register({ dispose: () => this._renderer?.dispose() });\n\n    this._renderDebouncer = new RenderDebouncer(coreBrowserService.window, (start, end) => this._renderRows(start, end));\n    this.register(this._renderDebouncer);\n\n    this._screenDprMonitor = new ScreenDprMonitor(coreBrowserService.window);\n    this._screenDprMonitor.setListener(() => this.handleDevicePixelRatioChange());\n    this.register(this._screenDprMonitor);\n\n    this.register(bufferService.onResize(() => this._fullRefresh()));\n    this.register(bufferService.buffers.onBufferActivate(() => this._renderer?.clear()));\n    this.register(optionsService.onOptionChange(() => this._handleOptionsChanged()));\n    this.register(this._charSizeService.onCharSizeChange(() => this.handleCharSizeChanged()));\n\n    // Do a full refresh whenever any decoration is added or removed. This may not actually result\n    // in changes but since decorations should be used sparingly or added/removed all in the same\n    // frame this should have minimal performance impact.\n    this.register(decorationService.onDecorationRegistered(() => this._fullRefresh()));\n    this.register(decorationService.onDecorationRemoved(() => this._fullRefresh()));\n\n    // Clear the renderer when the a change that could affect glyphs occurs\n    this.register(optionsService.onMultipleOptionChange([\n      'customGlyphs',\n      'drawBoldTextInBrightColors',\n      'letterSpacing',\n      'lineHeight',\n      'fontFamily',\n      'fontSize',\n      'fontWeight',\n      'fontWeightBold',\n      'minimumContrastRatio'\n    ], () => {\n      this.clear();\n      this.handleResize(bufferService.cols, bufferService.rows);\n      this._fullRefresh();\n    }));\n\n    // Refresh the cursor line when the cursor changes\n    this.register(optionsService.onMultipleOptionChange([\n      'cursorBlink',\n      'cursorStyle'\n    ], () => this.refreshRows(bufferService.buffer.y, bufferService.buffer.y, true)));\n\n    // dprchange should handle this case, we need this as well for browsers that don't support the\n    // matchMedia query.\n    this.register(addDisposableDomListener(coreBrowserService.window, 'resize', () => this.handleDevicePixelRatioChange()));\n\n    this.register(themeService.onChangeColors(() => this._fullRefresh()));\n\n    // Detect whether IntersectionObserver is detected and enable renderer pause\n    // and resume based on terminal visibility if so\n    if ('IntersectionObserver' in coreBrowserService.window) {\n      const observer = new coreBrowserService.window.IntersectionObserver(e => this._handleIntersectionChange(e[e.length - 1]), { threshold: 0 });\n      observer.observe(screenElement);\n      this.register({ dispose: () => observer.disconnect() });\n    }\n  }\n\n  private _handleIntersectionChange(entry: IntersectionObserverEntry): void {\n    this._isPaused = entry.isIntersecting === undefined ? (entry.intersectionRatio === 0) : !entry.isIntersecting;\n\n    // Terminal was hidden on open\n    if (!this._isPaused && !this._charSizeService.hasValidSize) {\n      this._charSizeService.measure();\n    }\n\n    if (!this._isPaused && this._needsFullRefresh) {\n      this._pausedResizeTask.flush();\n      this.refreshRows(0, this._rowCount - 1);\n      this._needsFullRefresh = false;\n    }\n  }\n\n  public refreshRows(start: number, end: number, isRedrawOnly: boolean = false): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n      return;\n    }\n    if (!isRedrawOnly) {\n      this._isNextRenderRedrawOnly = false;\n    }\n    this._renderDebouncer.refresh(start, end, this._rowCount);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    if (!this._renderer) {\n      return;\n    }\n    this._renderer.renderRows(start, end);\n\n    // Update selection if needed\n    if (this._needsSelectionRefresh) {\n      this._renderer.handleSelectionChanged(this._selectionState.start, this._selectionState.end, this._selectionState.columnSelectMode);\n      this._needsSelectionRefresh = false;\n    }\n\n    // Fire render event only if it was not a redraw\n    if (!this._isNextRenderRedrawOnly) {\n      this._onRenderedViewportChange.fire({ start, end });\n    }\n    this._onRender.fire({ start, end });\n    this._isNextRenderRedrawOnly = true;\n  }\n\n  public resize(cols: number, rows: number): void {\n    this._rowCount = rows;\n    this._fireOnCanvasResize();\n  }\n\n  private _handleOptionsChanged(): void {\n    if (!this._renderer) {\n      return;\n    }\n    this.refreshRows(0, this._rowCount - 1);\n    this._fireOnCanvasResize();\n  }\n\n  private _fireOnCanvasResize(): void {\n    if (!this._renderer) {\n      return;\n    }\n    // Don't fire the event if the dimensions haven't changed\n    if (this._renderer.dimensions.css.canvas.width === this._canvasWidth && this._renderer.dimensions.css.canvas.height === this._canvasHeight) {\n      return;\n    }\n    this._onDimensionsChange.fire(this._renderer.dimensions);\n  }\n\n  public hasRenderer(): boolean {\n    return !!this._renderer;\n  }\n\n  public setRenderer(renderer: IRenderer): void {\n    // TODO: RenderService should be the only one to dispose the renderer\n    this._renderer?.dispose();\n    this._renderer = renderer;\n    this._renderer.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n    // Force a refresh\n    this._needsSelectionRefresh = true;\n    this._fullRefresh();\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    return this._renderDebouncer.addRefreshCallback(callback);\n  }\n\n  private _fullRefresh(): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this.refreshRows(0, this._rowCount - 1);\n    }\n  }\n\n  public clearTextureAtlas(): void {\n    if (!this._renderer) {\n      return;\n    }\n    this._renderer.clearTextureAtlas?.();\n    this._fullRefresh();\n  }\n\n  public handleDevicePixelRatioChange(): void {\n    // Force char size measurement as DomMeasureStrategy(getBoundingClientRect) is not stable\n    // when devicePixelRatio changes\n    this._charSizeService.measure();\n\n    if (!this._renderer) {\n      return;\n    }\n    this._renderer.handleDevicePixelRatioChange();\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  public handleResize(cols: number, rows: number): void {\n    if (!this._renderer) {\n      return;\n    }\n    if (this._isPaused) {\n      this._pausedResizeTask.set(() => this._renderer!.handleResize(cols, rows));\n    } else {\n      this._renderer.handleResize(cols, rows);\n    }\n    this._fullRefresh();\n  }\n\n  // TODO: Is this useful when we have onResize?\n  public handleCharSizeChanged(): void {\n    this._renderer?.handleCharSizeChanged();\n  }\n\n  public handleBlur(): void {\n    this._renderer?.handleBlur();\n  }\n\n  public handleFocus(): void {\n    this._renderer?.handleFocus();\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionState.start = start;\n    this._selectionState.end = end;\n    this._selectionState.columnSelectMode = columnSelectMode;\n    this._renderer?.handleSelectionChanged(start, end, columnSelectMode);\n  }\n\n  public handleCursorMove(): void {\n    this._renderer?.handleCursorMove();\n  }\n\n  public clear(): void {\n    this._renderer?.clear();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionRedrawRequestEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferLine, IDisposable } from 'common/Types';\nimport * as Browser from 'common/Platform';\nimport { SelectionModel } from 'browser/selection/SelectionModel';\nimport { CellData } from 'common/buffer/CellData';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IMouseService, ISelectionService, IRenderService, ICoreBrowserService } from 'browser/services/Services';\nimport { IBufferRange, ILinkifier2 } from 'browser/Types';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { getCoordsRelativeToElement } from 'browser/input/Mouse';\nimport { moveToCellSequence } from 'browser/input/MoveToCell';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { getRangeLength } from 'common/buffer/BufferRange';\n\n/**\n * The number of pixels the mouse needs to be above or below the viewport in\n * order to scroll at the maximum speed.\n */\nconst DRAG_SCROLL_MAX_THRESHOLD = 50;\n\n/**\n * The maximum scrolling speed\n */\nconst DRAG_SCROLL_MAX_SPEED = 15;\n\n/**\n * The number of milliseconds between drag scroll updates.\n */\nconst DRAG_SCROLL_INTERVAL = 50;\n\n/**\n * The maximum amount of time that can have elapsed for an alt click to move the\n * cursor.\n */\nconst ALT_CLICK_MOVE_CURSOR_TIME = 500;\n\nconst NON_BREAKING_SPACE_CHAR = String.fromCharCode(160);\nconst ALL_NON_BREAKING_SPACE_REGEX = new RegExp(NON_BREAKING_SPACE_CHAR, 'g');\n\n/**\n * Represents a position of a word on a line.\n */\ninterface IWordPosition {\n  start: number;\n  length: number;\n}\n\n/**\n * A selection mode, this drives how the selection behaves on mouse move.\n */\nexport const enum SelectionMode {\n  NORMAL,\n  WORD,\n  LINE,\n  COLUMN\n}\n\n/**\n * A class that manages the selection of the terminal. With help from\n * SelectionModel, SelectionService handles with all logic associated with\n * dealing with the selection, including handling mouse interaction, wide\n * characters and fetching the actual text within the selection. Rendering is\n * not handled by the SelectionService but the onRedrawRequest event is fired\n * when the selection is ready to be redrawn (on an animation frame).\n */\nexport class SelectionService extends Disposable implements ISelectionService {\n  public serviceBrand: undefined;\n\n  protected _model: SelectionModel;\n\n  /**\n   * The amount to scroll every drag scroll update (depends on how far the mouse\n   * drag is above or below the terminal).\n   */\n  private _dragScrollAmount: number = 0;\n\n  /**\n   * The current selection mode.\n   */\n  protected _activeSelectionMode: SelectionMode;\n\n  /**\n   * A setInterval timer that is active while the mouse is down whose callback\n   * scrolls the viewport when necessary.\n   */\n  private _dragScrollIntervalTimer: number | undefined;\n\n  /**\n   * The animation frame ID used for refreshing the selection.\n   */\n  private _refreshAnimationFrame: number | undefined;\n\n  /**\n   * Whether selection is enabled.\n   */\n  private _enabled = true;\n\n  private _mouseMoveListener: EventListener;\n  private _mouseUpListener: EventListener;\n  private _trimListener: IDisposable;\n  private _workCell: CellData = new CellData();\n\n  private _mouseDownTimeStamp: number = 0;\n  private _oldHasSelection: boolean = false;\n  private _oldSelectionStart: [number, number] | undefined = undefined;\n  private _oldSelectionEnd: [number, number] | undefined = undefined;\n\n  private readonly _onLinuxMouseSelection = this.register(new EventEmitter<string>());\n  public readonly onLinuxMouseSelection = this._onLinuxMouseSelection.event;\n  private readonly _onRedrawRequest = this.register(new EventEmitter<ISelectionRedrawRequestEvent>());\n  public readonly onRequestRedraw = this._onRedrawRequest.event;\n  private readonly _onSelectionChange = this.register(new EventEmitter<void>());\n  public readonly onSelectionChange = this._onSelectionChange.event;\n  private readonly _onRequestScrollLines = this.register(new EventEmitter<ISelectionRequestScrollLinesEvent>());\n  public readonly onRequestScrollLines = this._onRequestScrollLines.event;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _linkifier: ILinkifier2,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService\n  ) {\n    super();\n\n    // Init listeners\n    this._mouseMoveListener = event => this._handleMouseMove(event as MouseEvent);\n    this._mouseUpListener = event => this._handleMouseUp(event as MouseEvent);\n    this._coreService.onUserInput(() => {\n      if (this.hasSelection) {\n        this.clearSelection();\n      }\n    });\n    this._trimListener = this._bufferService.buffer.lines.onTrim(amount => this._handleTrim(amount));\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._handleBufferActivate(e)));\n\n    this.enable();\n\n    this._model = new SelectionModel(this._bufferService);\n    this._activeSelectionMode = SelectionMode.NORMAL;\n\n    this.register(toDisposable(() => {\n      this._removeMouseDownListeners();\n    }));\n  }\n\n  public reset(): void {\n    this.clearSelection();\n  }\n\n  /**\n   * Disables the selection manager. This is useful for when terminal mouse\n   * are enabled.\n   */\n  public disable(): void {\n    this.clearSelection();\n    this._enabled = false;\n  }\n\n  /**\n   * Enable the selection manager.\n   */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  public get selectionStart(): [number, number] | undefined { return this._model.finalSelectionStart; }\n  public get selectionEnd(): [number, number] | undefined { return this._model.finalSelectionEnd; }\n\n  /**\n   * Gets whether there is an active text selection.\n   */\n  public get hasSelection(): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[0] !== end[0] || start[1] !== end[1];\n  }\n\n  /**\n   * Gets the text currently selected.\n   */\n  public get selectionText(): string {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return '';\n    }\n\n    const buffer = this._bufferService.buffer;\n    const result: string[] = [];\n\n    if (this._activeSelectionMode === SelectionMode.COLUMN) {\n      // Ignore zero width selections\n      if (start[0] === end[0]) {\n        return '';\n      }\n\n      // For column selection it's not enough to rely on final selection's swapping of reversed\n      // values, it also needs the x coordinates to swap independently of the y coordinate is needed\n      const startCol = start[0] < end[0] ? start[0] : end[0];\n      const endCol = start[0] < end[0] ? end[0] : start[0];\n      for (let i = start[1]; i <= end[1]; i++) {\n        const lineText = buffer.translateBufferLineToString(i, true, startCol, endCol);\n        result.push(lineText);\n      }\n    } else {\n      // Get first row\n      const startRowEndCol = start[1] === end[1] ? end[0] : undefined;\n      result.push(buffer.translateBufferLineToString(start[1], true, start[0], startRowEndCol));\n\n      // Get middle rows\n      for (let i = start[1] + 1; i <= end[1] - 1; i++) {\n        const bufferLine = buffer.lines.get(i);\n        const lineText = buffer.translateBufferLineToString(i, true);\n        if (bufferLine?.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n\n      // Get final row\n      if (start[1] !== end[1]) {\n        const bufferLine = buffer.lines.get(end[1]);\n        const lineText = buffer.translateBufferLineToString(end[1], true, 0, end[0]);\n        if (bufferLine && bufferLine!.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n    }\n\n    // Format string by replacing non-breaking space chars with regular spaces\n    // and joining the array into a multi-line string.\n    const formattedResult = result.map(line => {\n      return line.replace(ALL_NON_BREAKING_SPACE_REGEX, ' ');\n    }).join(Browser.isWindows ? '\\r\\n' : '\\n');\n\n    return formattedResult;\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Queues a refresh, redrawing the selection on the next opportunity.\n   * @param isLinuxMouseSelection Whether the selection should be registered as a new\n   * selection on Linux.\n   */\n  public refresh(isLinuxMouseSelection?: boolean): void {\n    // Queue the refresh for the renderer\n    if (!this._refreshAnimationFrame) {\n      this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._refresh());\n    }\n\n    // If the platform is Linux and the refresh call comes from a mouse event,\n    // we need to update the selection for middle click to paste selection.\n    if (Browser.isLinux && isLinuxMouseSelection) {\n      const selectionText = this.selectionText;\n      if (selectionText.length) {\n        this._onLinuxMouseSelection.fire(this.selectionText);\n      }\n    }\n  }\n\n  /**\n   * Fires the refresh event, causing consumers to pick it up and redraw the\n   * selection state.\n   */\n  private _refresh(): void {\n    this._refreshAnimationFrame = undefined;\n    this._onRedrawRequest.fire({\n      start: this._model.finalSelectionStart,\n      end: this._model.finalSelectionEnd,\n      columnSelectMode: this._activeSelectionMode === SelectionMode.COLUMN\n    });\n  }\n\n  /**\n   * Checks if the current click was inside the current selection\n   * @param event The mouse event\n   */\n  private _isClickInSelection(event: MouseEvent): boolean {\n    const coords = this._getMouseBufferCoords(event);\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n\n    if (!start || !end || !coords) {\n      return false;\n    }\n\n    return this._areCoordsInSelection(coords, start, end);\n  }\n\n  public isCellInSelection(x: number, y: number): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return this._areCoordsInSelection([x, y], start, end);\n  }\n\n  protected _areCoordsInSelection(coords: [number, number], start: [number, number], end: [number, number]): boolean {\n    return (coords[1] > start[1] && coords[1] < end[1]) ||\n        (start[1] === end[1] && coords[1] === start[1] && coords[0] >= start[0] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === end[1] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === start[1] && coords[0] >= start[0]);\n  }\n\n  /**\n   * Selects word at the current mouse event coordinates.\n   * @param event The mouse event.\n   */\n  private _selectWordAtCursor(event: MouseEvent, allowWhitespaceOnlySelection: boolean): boolean {\n    // Check if there is a link under the cursor first and select that if so\n    const range = this._linkifier.currentLink?.link?.range;\n    if (range) {\n      this._model.selectionStart = [range.start.x - 1, range.start.y - 1];\n      this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._selectWordAt(coords, allowWhitespaceOnlySelection);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._model.isSelectAllActive = true;\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._model.clearSelection();\n    start = Math.max(start, 0);\n    end = Math.min(end, this._bufferService.buffer.lines.length - 1);\n    this._model.selectionStart = [0, start];\n    this._model.selectionEnd = [this._bufferService.cols, end];\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   */\n  private _handleTrim(amount: number): void {\n    const needsRefresh = this._model.handleTrim(amount);\n    if (needsRefresh) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * Gets the 0-based [x, y] buffer coordinates of the current mouse event.\n   * @param event The mouse event.\n   */\n  private _getMouseBufferCoords(event: MouseEvent): [number, number] | undefined {\n    const coords = this._mouseService.getCoords(event, this._screenElement, this._bufferService.cols, this._bufferService.rows, true);\n    if (!coords) {\n      return undefined;\n    }\n\n    // Convert to 0-based\n    coords[0]--;\n    coords[1]--;\n\n    // Convert viewport coords to buffer coords\n    coords[1] += this._bufferService.buffer.ydisp;\n    return coords;\n  }\n\n  /**\n   * Gets the amount the viewport should be scrolled based on how far out of the\n   * terminal the mouse is.\n   * @param event The mouse event.\n   */\n  private _getMouseEventScrollAmount(event: MouseEvent): number {\n    let offset = getCoordsRelativeToElement(this._coreBrowserService.window, event, this._screenElement)[1];\n    const terminalHeight = this._renderService.dimensions.css.canvas.height;\n    if (offset >= 0 && offset <= terminalHeight) {\n      return 0;\n    }\n    if (offset > terminalHeight) {\n      offset -= terminalHeight;\n    }\n\n    offset = Math.min(Math.max(offset, -DRAG_SCROLL_MAX_THRESHOLD), DRAG_SCROLL_MAX_THRESHOLD);\n    offset /= DRAG_SCROLL_MAX_THRESHOLD;\n    return (offset / Math.abs(offset)) + Math.round(offset * (DRAG_SCROLL_MAX_SPEED - 1));\n  }\n\n  /**\n   * Returns whether the selection manager should force selection, regardless of\n   * whether the terminal is in mouse events mode.\n   * @param event The mouse event.\n   */\n  public shouldForceSelection(event: MouseEvent): boolean {\n    if (Browser.isMac) {\n      return event.altKey && this._optionsService.rawOptions.macOptionClickForcesSelection;\n    }\n\n    return event.shiftKey;\n  }\n\n  /**\n   * Handles te mousedown event, setting up for a new selection.\n   * @param event The mousedown event.\n   */\n  public handleMouseDown(event: MouseEvent): void {\n    this._mouseDownTimeStamp = event.timeStamp;\n    // If we have selection, we want the context menu on right click even if the\n    // terminal is in mouse mode.\n    if (event.button === 2 && this.hasSelection) {\n      return;\n    }\n\n    // Only action the primary button\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Allow selection when using a specific modifier key, even when disabled\n    if (!this._enabled) {\n      if (!this.shouldForceSelection(event)) {\n        return;\n      }\n\n      // Don't send the mouse down event to the current process, we want to select\n      event.stopPropagation();\n    }\n\n    // Tell the browser not to start a regular selection\n    event.preventDefault();\n\n    // Reset drag scroll state\n    this._dragScrollAmount = 0;\n\n    if (this._enabled && event.shiftKey) {\n      this._handleIncrementalClick(event);\n    } else {\n      if (event.detail === 1) {\n        this._handleSingleClick(event);\n      } else if (event.detail === 2) {\n        this._handleDoubleClick(event);\n      } else if (event.detail === 3) {\n        this._handleTripleClick(event);\n      }\n    }\n\n    this._addMouseDownListeners();\n    this.refresh(true);\n  }\n\n  /**\n   * Adds listeners when mousedown is triggered.\n   */\n  private _addMouseDownListeners(): void {\n    // Listen on the document so that dragging outside of viewport works\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.addEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.addEventListener('mouseup', this._mouseUpListener);\n    }\n    this._dragScrollIntervalTimer = this._coreBrowserService.window.setInterval(() => this._dragScroll(), DRAG_SCROLL_INTERVAL);\n  }\n\n  /**\n   * Removes the listeners that are registered when mousedown is triggered.\n   */\n  private _removeMouseDownListeners(): void {\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.removeEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.removeEventListener('mouseup', this._mouseUpListener);\n    }\n    this._coreBrowserService.window.clearInterval(this._dragScrollIntervalTimer);\n    this._dragScrollIntervalTimer = undefined;\n  }\n\n  /**\n   * Performs an incremental click, setting the selection end position to the mouse\n   * position.\n   * @param event The mouse event.\n   */\n  private _handleIncrementalClick(event: MouseEvent): void {\n    if (this._model.selectionStart) {\n      this._model.selectionEnd = this._getMouseBufferCoords(event);\n    }\n  }\n\n  /**\n   * Performs a single click, resetting relevant state and setting the selection\n   * start position.\n   * @param event The mouse event.\n   */\n  private _handleSingleClick(event: MouseEvent): void {\n    this._model.selectionStartLength = 0;\n    this._model.isSelectAllActive = false;\n    this._activeSelectionMode = this.shouldColumnSelect(event) ? SelectionMode.COLUMN : SelectionMode.NORMAL;\n\n    // Initialize the new selection\n    this._model.selectionStart = this._getMouseBufferCoords(event);\n    if (!this._model.selectionStart) {\n      return;\n    }\n    this._model.selectionEnd = undefined;\n\n    // Ensure the line exists\n    const line = this._bufferService.buffer.lines.get(this._model.selectionStart[1]);\n    if (!line) {\n      return;\n    }\n\n    // Return early if the click event is not in the buffer (eg. in scroll bar)\n    if (line.length === this._model.selectionStart[0]) {\n      return;\n    }\n\n    // If the mouse is over the second half of a wide character, adjust the\n    // selection to cover the whole character\n    if (line.hasWidth(this._model.selectionStart[0]) === 0) {\n      this._model.selectionStart[0]++;\n    }\n  }\n\n  /**\n   * Performs a double click, selecting the current word.\n   * @param event The mouse event.\n   */\n  private _handleDoubleClick(event: MouseEvent): void {\n    if (this._selectWordAtCursor(event, true)) {\n      this._activeSelectionMode = SelectionMode.WORD;\n    }\n  }\n\n  /**\n   * Performs a triple click, selecting the current line and activating line\n   * select mode.\n   * @param event The mouse event.\n   */\n  private _handleTripleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.LINE;\n      this._selectLineAt(coords[1]);\n    }\n  }\n\n  /**\n   * Returns whether the selection manager should operate in column select mode\n   * @param event the mouse or keyboard event\n   */\n  public shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean {\n    return event.altKey && !(Browser.isMac && this._optionsService.rawOptions.macOptionClickForcesSelection);\n  }\n\n  /**\n   * Handles the mousemove event when the mouse button is down, recording the\n   * end of the selection and refreshing the selection.\n   * @param event The mousemove event.\n   */\n  private _handleMouseMove(event: MouseEvent): void {\n    // If the mousemove listener is active it means that a selection is\n    // currently being made, we should stop propagation to prevent mouse events\n    // to be sent to the pty.\n    event.stopImmediatePropagation();\n\n    // Do nothing if there is no selection start, this can happen if the first\n    // click in the terminal is an incremental click\n    if (!this._model.selectionStart) {\n      return;\n    }\n\n    // Record the previous position so we know whether to redraw the selection\n    // at the end.\n    const previousSelectionEnd = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;\n\n    // Set the initial selection end based on the mouse coordinates\n    this._model.selectionEnd = this._getMouseBufferCoords(event);\n    if (!this._model.selectionEnd) {\n      this.refresh(true);\n      return;\n    }\n\n    // Select the entire line if line select mode is active.\n    if (this._activeSelectionMode === SelectionMode.LINE) {\n      if (this._model.selectionEnd[1] < this._model.selectionStart[1]) {\n        this._model.selectionEnd[0] = 0;\n      } else {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      }\n    } else if (this._activeSelectionMode === SelectionMode.WORD) {\n      this._selectToWordAt(this._model.selectionEnd);\n    }\n\n    // Determine the amount of scrolling that will happen.\n    this._dragScrollAmount = this._getMouseEventScrollAmount(event);\n\n    // If the cursor was above or below the viewport, make sure it's at the\n    // start or end of the viewport respectively. This should only happen when\n    // NOT in column select mode.\n    if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n      if (this._dragScrollAmount > 0) {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      } else if (this._dragScrollAmount < 0) {\n        this._model.selectionEnd[0] = 0;\n      }\n    }\n\n    // If the character is a wide character include the cell to the right in the\n    // selection. Note that selections at the very end of the line will never\n    // have a character.\n    const buffer = this._bufferService.buffer;\n    if (this._model.selectionEnd[1] < buffer.lines.length) {\n      const line = buffer.lines.get(this._model.selectionEnd[1]);\n      if (line && line.hasWidth(this._model.selectionEnd[0]) === 0) {\n        this._model.selectionEnd[0]++;\n      }\n    }\n\n    // Only draw here if the selection changes.\n    if (!previousSelectionEnd ||\n      previousSelectionEnd[0] !== this._model.selectionEnd[0] ||\n      previousSelectionEnd[1] !== this._model.selectionEnd[1]) {\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * The callback that occurs every DRAG_SCROLL_INTERVAL ms that does the\n   * scrolling of the viewport.\n   */\n  private _dragScroll(): void {\n    if (!this._model.selectionEnd || !this._model.selectionStart) {\n      return;\n    }\n    if (this._dragScrollAmount) {\n      this._onRequestScrollLines.fire({ amount: this._dragScrollAmount, suppressScrollEvent: false });\n      // Re-evaluate selection\n      // If the cursor was above or below the viewport, make sure it's at the\n      // start or end of the viewport respectively. This should only happen when\n      // NOT in column select mode.\n      const buffer = this._bufferService.buffer;\n      if (this._dragScrollAmount > 0) {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = this._bufferService.cols;\n        }\n        this._model.selectionEnd[1] = Math.min(buffer.ydisp + this._bufferService.rows, buffer.lines.length - 1);\n      } else {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = 0;\n        }\n        this._model.selectionEnd[1] = buffer.ydisp;\n      }\n      this.refresh();\n    }\n  }\n\n  /**\n   * Handles the mouseup event, removing the mousedown listeners.\n   * @param event The mouseup event.\n   */\n  private _handleMouseUp(event: MouseEvent): void {\n    const timeElapsed = event.timeStamp - this._mouseDownTimeStamp;\n\n    this._removeMouseDownListeners();\n\n    if (this.selectionText.length <= 1 && timeElapsed < ALT_CLICK_MOVE_CURSOR_TIME && event.altKey && this._optionsService.rawOptions.altClickMovesCursor) {\n      if (this._bufferService.buffer.ybase === this._bufferService.buffer.ydisp) {\n        const coordinates = this._mouseService.getCoords(\n          event,\n          this._element,\n          this._bufferService.cols,\n          this._bufferService.rows,\n          false\n        );\n        if (coordinates && coordinates[0] !== undefined && coordinates[1] !== undefined) {\n          const sequence = moveToCellSequence(coordinates[0] - 1, coordinates[1] - 1, this._bufferService, this._coreService.decPrivateModes.applicationCursorKeys);\n          this._coreService.triggerDataEvent(sequence, true);\n        }\n      }\n    } else {\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  private _fireEventIfSelectionChanged(): void {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    const hasSelection = !!start && !!end && (start[0] !== end[0] || start[1] !== end[1]);\n\n    if (!hasSelection) {\n      if (this._oldHasSelection) {\n        this._fireOnSelectionChange(start, end, hasSelection);\n      }\n      return;\n    }\n\n    // Sanity check, these should not be undefined as there is a selection\n    if (!start || !end) {\n      return;\n    }\n\n    if (!this._oldSelectionStart || !this._oldSelectionEnd || (\n      start[0] !== this._oldSelectionStart[0] || start[1] !== this._oldSelectionStart[1] ||\n      end[0] !== this._oldSelectionEnd[0] || end[1] !== this._oldSelectionEnd[1])) {\n\n      this._fireOnSelectionChange(start, end, hasSelection);\n    }\n  }\n\n  private _fireOnSelectionChange(start: [number, number] | undefined, end: [number, number] | undefined, hasSelection: boolean): void {\n    this._oldSelectionStart = start;\n    this._oldSelectionEnd = end;\n    this._oldHasSelection = hasSelection;\n    this._onSelectionChange.fire();\n  }\n\n  private _handleBufferActivate(e: {activeBuffer: IBuffer, inactiveBuffer: IBuffer}): void {\n    this.clearSelection();\n    // Only adjust the selection on trim, shiftElements is rarely used (only in\n    // reverseIndex) and delete in a splice is only ever used when the same\n    // number of elements was just added. Given this is could actually be\n    // beneficial to leave the selection as is for these cases.\n    this._trimListener.dispose();\n    this._trimListener = e.activeBuffer.lines.onTrim(amount => this._handleTrim(amount));\n  }\n\n  /**\n   * Converts a viewport column (0 to cols - 1) to the character index on the\n   * buffer line, the latter takes into account wide and null characters.\n   * @param bufferLine The buffer line to use.\n   * @param x The x index in the buffer line to convert.\n   */\n  private _convertViewportColToCharacterIndex(bufferLine: IBufferLine, x: number): number {\n    let charIndex = x;\n    for (let i = 0; x >= i; i++) {\n      const length = bufferLine.loadCell(i, this._workCell).getChars().length;\n      if (this._workCell.getWidth() === 0) {\n        // Wide characters aren't included in the line string so decrement the\n        // index so the index is back on the wide character.\n        charIndex--;\n      } else if (length > 1 && x !== i) {\n        // Emojis take up multiple characters, so adjust accordingly. For these\n        // we don't want ot include the character at the column as we're\n        // returning the start index in the string, not the end index.\n        charIndex += length - 1;\n      }\n    }\n    return charIndex;\n  }\n\n  public setSelection(col: number, row: number, length: number): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this._model.selectionStart = [col, row];\n    this._model.selectionStartLength = length;\n    this.refresh();\n    this._fireEventIfSelectionChanged();\n  }\n\n  public rightClickSelect(ev: MouseEvent): void {\n    if (!this._isClickInSelection(ev)) {\n      if (this._selectWordAtCursor(ev, false)) {\n        this.refresh(true);\n      }\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  /**\n   * Gets positional information for the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _getWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean, followWrappedLinesAbove: boolean = true, followWrappedLinesBelow: boolean = true): IWordPosition | undefined {\n    // Ensure coords are within viewport (eg. not within scroll bar)\n    if (coords[0] >= this._bufferService.cols) {\n      return undefined;\n    }\n\n    const buffer = this._bufferService.buffer;\n    const bufferLine = buffer.lines.get(coords[1]);\n    if (!bufferLine) {\n      return undefined;\n    }\n\n    const line = buffer.translateBufferLineToString(coords[1], false);\n\n    // Get actual index, taking into consideration wide characters\n    let startIndex = this._convertViewportColToCharacterIndex(bufferLine, coords[0]);\n    let endIndex = startIndex;\n\n    // Record offset to be used later\n    const charOffset = coords[0] - startIndex;\n    let leftWideCharCount = 0;\n    let rightWideCharCount = 0;\n    let leftLongCharOffset = 0;\n    let rightLongCharOffset = 0;\n\n    if (line.charAt(startIndex) === ' ') {\n      // Expand until non-whitespace is hit\n      while (startIndex > 0 && line.charAt(startIndex - 1) === ' ') {\n        startIndex--;\n      }\n      while (endIndex < line.length && line.charAt(endIndex + 1) === ' ') {\n        endIndex++;\n      }\n    } else {\n      // Expand until whitespace is hit. This algorithm works by scanning left\n      // and right from the starting position, keeping both the index format\n      // (line) and the column format (bufferLine) in sync. When a wide\n      // character is hit, it is recorded and the column index is adjusted.\n      let startCol = coords[0];\n      let endCol = coords[0];\n\n      // Consider the initial position, skip it and increment the wide char\n      // variable\n      if (bufferLine.getWidth(startCol) === 0) {\n        leftWideCharCount++;\n        startCol--;\n      }\n      if (bufferLine.getWidth(endCol) === 2) {\n        rightWideCharCount++;\n        endCol++;\n      }\n\n      // Adjust the end index for characters whose length are > 1 (emojis)\n      const length = bufferLine.getString(endCol).length;\n      if (length > 1) {\n        rightLongCharOffset += length - 1;\n        endIndex += length - 1;\n      }\n\n      // Expand the string in both directions until a space is hit\n      while (startCol > 0 && startIndex > 0 && !this._isCharWordSeparator(bufferLine.loadCell(startCol - 1, this._workCell))) {\n        bufferLine.loadCell(startCol - 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 0) {\n          // If the next character is a wide char, record it and skip the column\n          leftWideCharCount++;\n          startCol--;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          leftLongCharOffset += length - 1;\n          startIndex -= length - 1;\n        }\n        startIndex--;\n        startCol--;\n      }\n      while (endCol < bufferLine.length && endIndex + 1 < line.length && !this._isCharWordSeparator(bufferLine.loadCell(endCol + 1, this._workCell))) {\n        bufferLine.loadCell(endCol + 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 2) {\n          // If the next character is a wide char, record it and skip the column\n          rightWideCharCount++;\n          endCol++;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          rightLongCharOffset += length - 1;\n          endIndex += length - 1;\n        }\n        endIndex++;\n        endCol++;\n      }\n    }\n\n    // Incremenet the end index so it is at the start of the next character\n    endIndex++;\n\n    // Calculate the start _column_, converting the the string indexes back to\n    // column coordinates.\n    let start =\n        startIndex // The index of the selection's start char in the line string\n        + charOffset // The difference between the initial char's column and index\n        - leftWideCharCount // The number of wide chars left of the initial char\n        + leftLongCharOffset; // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n\n    // Calculate the length in _columns_, converting the the string indexes back\n    // to column coordinates.\n    let length = Math.min(this._bufferService.cols, // Disallow lengths larger than the terminal cols\n      endIndex // The index of the selection's end char in the line string\n      - startIndex // The index of the selection's start char in the line string\n      + leftWideCharCount // The number of wide chars left of the initial char\n      + rightWideCharCount // The number of wide chars right of the initial char (inclusive)\n      - leftLongCharOffset // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n      - rightLongCharOffset); // The number of additional chars right of the initial char (inclusive) added by columns with strings longer than 1 (emojis)\n\n    if (!allowWhitespaceOnlySelection && line.slice(startIndex, endIndex).trim() === '') {\n      return undefined;\n    }\n\n    // Recurse upwards if the line is wrapped and the word wraps to the above line\n    if (followWrappedLinesAbove) {\n      if (start === 0 && bufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n        const previousBufferLine = buffer.lines.get(coords[1] - 1);\n        if (previousBufferLine && bufferLine.isWrapped && previousBufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n          const previousLineWordPosition = this._getWordAt([this._bufferService.cols - 1, coords[1] - 1], false, true, false);\n          if (previousLineWordPosition) {\n            const offset = this._bufferService.cols - previousLineWordPosition.start;\n            start -= offset;\n            length += offset;\n          }\n        }\n      }\n    }\n\n    // Recurse downwards if the line is wrapped and the word wraps to the next line\n    if (followWrappedLinesBelow) {\n      if (start + length === this._bufferService.cols && bufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n        const nextBufferLine = buffer.lines.get(coords[1] + 1);\n        if (nextBufferLine?.isWrapped && nextBufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n          const nextLineWordPosition = this._getWordAt([0, coords[1] + 1], false, false, true);\n          if (nextLineWordPosition) {\n            length += nextLineWordPosition.length;\n          }\n        }\n      }\n    }\n\n    return { start, length };\n  }\n\n  /**\n   * Selects the word at the coordinates specified.\n   * @param coords The coordinates to get the word at.\n   * @param allowWhitespaceOnlySelection If whitespace should be selected\n   */\n  protected _selectWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean): void {\n    const wordPosition = this._getWordAt(coords, allowWhitespaceOnlySelection);\n    if (wordPosition) {\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        coords[1]--;\n      }\n      this._model.selectionStart = [wordPosition.start, coords[1]];\n      this._model.selectionStartLength = wordPosition.length;\n    }\n  }\n\n  /**\n   * Sets the selection end to the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _selectToWordAt(coords: [number, number]): void {\n    const wordPosition = this._getWordAt(coords, true);\n    if (wordPosition) {\n      let endRow = coords[1];\n\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        endRow--;\n      }\n\n      // Adjust wrapped length value, this only needs to happen when values are reversed as in that\n      // case we're interested in the start of the word, not the end\n      if (!this._model.areSelectionValuesReversed()) {\n        while (wordPosition.start + wordPosition.length > this._bufferService.cols) {\n          wordPosition.length -= this._bufferService.cols;\n          endRow++;\n        }\n      }\n\n      this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? wordPosition.start : wordPosition.start + wordPosition.length, endRow];\n    }\n  }\n\n  /**\n   * Gets whether the character is considered a word separator by the select\n   * word logic.\n   * @param cell The cell to check.\n   */\n  private _isCharWordSeparator(cell: CellData): boolean {\n    // Zero width characters are never separators as they are always to the\n    // right of wide characters\n    if (cell.getWidth() === 0) {\n      return false;\n    }\n    return this._optionsService.rawOptions.wordSeparator.indexOf(cell.getChars()) >= 0;\n  }\n\n  /**\n   * Selects the line specified.\n   * @param line The line index.\n   */\n  protected _selectLineAt(line: number): void {\n    const wrappedRange = this._bufferService.buffer.getWrappedRangeForLine(line);\n    const range: IBufferRange = {\n      start: { x: 0, y: wrappedRange.first },\n      end: { x: this._bufferService.cols - 1, y: wrappedRange.last }\n    };\n    this._model.selectionStart = [0, wrappedRange.first];\n    this._model.selectionEnd = undefined;\n    this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IRenderDimensions, IRenderer } from 'browser/renderer/shared/Types';\nimport { IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { ISelectionRedrawRequestEvent as ISelectionRequestRedrawEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { ColorIndex, IDisposable } from 'common/Types';\nimport { ITheme } from 'common/services/Services';\n\nexport const ICharSizeService = createDecorator<ICharSizeService>('CharSizeService');\nexport interface ICharSizeService {\n  serviceBrand: undefined;\n\n  readonly width: number;\n  readonly height: number;\n  readonly hasValidSize: boolean;\n\n  readonly onCharSizeChange: IEvent<void>;\n\n  measure(): void;\n}\n\nexport const ICoreBrowserService = createDecorator<ICoreBrowserService>('CoreBrowserService');\nexport interface ICoreBrowserService {\n  serviceBrand: undefined;\n\n  readonly isFocused: boolean;\n  /**\n   * Parent window that the terminal is rendered into. DOM and rendering APIs\n   * (e.g. requestAnimationFrame) should be invoked in the context of this\n   * window.\n   */\n  readonly window: Window & typeof globalThis;\n  /**\n   * Helper for getting the devicePixelRatio of the parent window.\n   */\n  readonly dpr: number;\n}\n\nexport const IMouseService = createDecorator<IMouseService>('MouseService');\nexport interface IMouseService {\n  serviceBrand: undefined;\n\n  getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined;\n  getMouseReportCoords(event: MouseEvent, element: HTMLElement): { col: number, row: number, x: number, y: number } | undefined;\n}\n\nexport const IRenderService = createDecorator<IRenderService>('RenderService');\nexport interface IRenderService extends IDisposable {\n  serviceBrand: undefined;\n\n  onDimensionsChange: IEvent<IRenderDimensions>;\n  /**\n   * Fires when buffer changes are rendered. This does not fire when only cursor\n   * or selections are rendered.\n   */\n  onRenderedViewportChange: IEvent<{ start: number, end: number }>;\n  /**\n   * Fires on render\n   */\n  onRender: IEvent<{ start: number, end: number }>;\n  onRefreshRequest: IEvent<{ start: number, end: number }>;\n\n  dimensions: IRenderDimensions;\n\n  addRefreshCallback(callback: FrameRequestCallback): number;\n\n  refreshRows(start: number, end: number): void;\n  clearTextureAtlas(): void;\n  resize(cols: number, rows: number): void;\n  hasRenderer(): boolean;\n  setRenderer(renderer: IRenderer): void;\n  handleDevicePixelRatioChange(): void;\n  handleResize(cols: number, rows: number): void;\n  handleCharSizeChanged(): void;\n  handleBlur(): void;\n  handleFocus(): void;\n  handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void;\n  handleCursorMove(): void;\n  clear(): void;\n}\n\nexport const ISelectionService = createDecorator<ISelectionService>('SelectionService');\nexport interface ISelectionService {\n  serviceBrand: undefined;\n\n  readonly selectionText: string;\n  readonly hasSelection: boolean;\n  readonly selectionStart: [number, number] | undefined;\n  readonly selectionEnd: [number, number] | undefined;\n\n  readonly onLinuxMouseSelection: IEvent<string>;\n  readonly onRequestRedraw: IEvent<ISelectionRequestRedrawEvent>;\n  readonly onRequestScrollLines: IEvent<ISelectionRequestScrollLinesEvent>;\n  readonly onSelectionChange: IEvent<void>;\n\n  disable(): void;\n  enable(): void;\n  reset(): void;\n  setSelection(row: number, col: number, length: number): void;\n  selectAll(): void;\n  selectLines(start: number, end: number): void;\n  clearSelection(): void;\n  rightClickSelect(event: MouseEvent): void;\n  shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean;\n  shouldForceSelection(event: MouseEvent): boolean;\n  refresh(isLinuxMouseSelection?: boolean): void;\n  handleMouseDown(event: MouseEvent): void;\n  isCellInSelection(x: number, y: number): boolean;\n}\n\nexport const ICharacterJoinerService = createDecorator<ICharacterJoinerService>('CharacterJoinerService');\nexport interface ICharacterJoinerService {\n  serviceBrand: undefined;\n\n  register(handler: (text: string) => [number, number][]): number;\n  deregister(joinerId: number): boolean;\n  getJoinedCharacters(row: number): [number, number][];\n}\n\nexport const IThemeService = createDecorator<IThemeService>('ThemeService');\nexport interface IThemeService {\n  serviceBrand: undefined;\n\n  readonly colors: ReadonlyColorSet;\n\n  readonly onChangeColors: IEvent<ReadonlyColorSet>;\n\n  restoreColor(slot?: ColorIndex): void;\n  /**\n   * Allows external modifying of colors in the theme, this is used instead of {@link colors} to\n   * prevent accidental writes.\n   */\n  modifyColors(callback: (colors: IColorSet) => void): void;\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ColorContrastCache } from 'browser/ColorContrastCache';\nimport { IThemeService } from 'browser/services/Services';\nimport { IColorContrastCache, IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { channels, color, css, NULL_COLOR } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IOptionsService, ITheme } from 'common/services/Services';\nimport { ColorIndex, IColor } from 'common/Types';\n\ninterface IRestoreColorSet {\n  foreground: IColor;\n  background: IColor;\n  cursor: IColor;\n  ansi: IColor[];\n}\n\n\nconst DEFAULT_FOREGROUND = css.toColor('#ffffff');\nconst DEFAULT_BACKGROUND = css.toColor('#000000');\nconst DEFAULT_CURSOR = css.toColor('#ffffff');\nconst DEFAULT_CURSOR_ACCENT = css.toColor('#000000');\nconst DEFAULT_SELECTION = {\n  css: 'rgba(255, 255, 255, 0.3)',\n  rgba: 0xFFFFFF4D\n};\n\n// An IIFE to generate DEFAULT_ANSI_COLORS.\nexport const DEFAULT_ANSI_COLORS = Object.freeze((() => {\n  const colors = [\n    // dark:\n    css.toColor('#2e3436'),\n    css.toColor('#cc0000'),\n    css.toColor('#4e9a06'),\n    css.toColor('#c4a000'),\n    css.toColor('#3465a4'),\n    css.toColor('#75507b'),\n    css.toColor('#06989a'),\n    css.toColor('#d3d7cf'),\n    // bright:\n    css.toColor('#555753'),\n    css.toColor('#ef2929'),\n    css.toColor('#8ae234'),\n    css.toColor('#fce94f'),\n    css.toColor('#729fcf'),\n    css.toColor('#ad7fa8'),\n    css.toColor('#34e2e2'),\n    css.toColor('#eeeeec')\n  ];\n\n  // Fill in the remaining 240 ANSI colors.\n  // Generate colors (16-231)\n  const v = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n  for (let i = 0; i < 216; i++) {\n    const r = v[(i / 36) % 6 | 0];\n    const g = v[(i / 6) % 6 | 0];\n    const b = v[i % 6];\n    colors.push({\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    });\n  }\n\n  // Generate greys (232-255)\n  for (let i = 0; i < 24; i++) {\n    const c = 8 + i * 10;\n    colors.push({\n      css: channels.toCss(c, c, c),\n      rgba: channels.toRgba(c, c, c)\n    });\n  }\n\n  return colors;\n})());\n\nexport class ThemeService extends Disposable implements IThemeService {\n  public serviceBrand: undefined;\n\n  private _colors: IColorSet;\n  private _contrastCache: IColorContrastCache;\n  private _restoreColors!: IRestoreColorSet;\n\n  public get colors(): ReadonlyColorSet { return this._colors; }\n\n  private readonly _onChangeColors = this.register(new EventEmitter<ReadonlyColorSet>());\n  public readonly onChangeColors = this._onChangeColors.event;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n\n    this._contrastCache = new ColorContrastCache();\n    this._colors = {\n      foreground: DEFAULT_FOREGROUND,\n      background: DEFAULT_BACKGROUND,\n      cursor: DEFAULT_CURSOR,\n      cursorAccent: DEFAULT_CURSOR_ACCENT,\n      selectionForeground: undefined,\n      selectionBackgroundTransparent: DEFAULT_SELECTION,\n      selectionBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      selectionInactiveBackgroundTransparent: DEFAULT_SELECTION,\n      selectionInactiveBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      ansi: DEFAULT_ANSI_COLORS.slice(),\n      contrastCache: this._contrastCache\n    };\n    this._updateRestoreColors();\n    this._setTheme(this._optionsService.rawOptions.theme);\n\n    this.register(this._optionsService.onSpecificOptionChange('minimumContrastRatio', () => this._contrastCache.clear()));\n    this.register(this._optionsService.onSpecificOptionChange('theme', () => this._setTheme(this._optionsService.rawOptions.theme)));\n  }\n\n  /**\n   * Sets the terminal's theme.\n   * @param theme The  theme to use. If a partial theme is provided then default\n   * colors will be used where colors are not defined.\n   */\n  private _setTheme(theme: ITheme = {}): void {\n    const colors = this._colors;\n    colors.foreground = parseColor(theme.foreground, DEFAULT_FOREGROUND);\n    colors.background = parseColor(theme.background, DEFAULT_BACKGROUND);\n    colors.cursor = parseColor(theme.cursor, DEFAULT_CURSOR);\n    colors.cursorAccent = parseColor(theme.cursorAccent, DEFAULT_CURSOR_ACCENT);\n    colors.selectionBackgroundTransparent = parseColor(theme.selectionBackground, DEFAULT_SELECTION);\n    colors.selectionBackgroundOpaque = color.blend(colors.background, colors.selectionBackgroundTransparent);\n    colors.selectionInactiveBackgroundTransparent = parseColor(theme.selectionInactiveBackground, colors.selectionBackgroundTransparent);\n    colors.selectionInactiveBackgroundOpaque = color.blend(colors.background, colors.selectionInactiveBackgroundTransparent);\n    colors.selectionForeground = theme.selectionForeground ? parseColor(theme.selectionForeground, NULL_COLOR) : undefined;\n    if (colors.selectionForeground === NULL_COLOR) {\n      colors.selectionForeground = undefined;\n    }\n\n    /**\n     * If selection color is opaque, blend it with background with 0.3 opacity\n     * Issue #2737\n     */\n    if (color.isOpaque(colors.selectionBackgroundTransparent)) {\n      const opacity = 0.3;\n      colors.selectionBackgroundTransparent = color.opacity(colors.selectionBackgroundTransparent, opacity);\n    }\n    if (color.isOpaque(colors.selectionInactiveBackgroundTransparent)) {\n      const opacity = 0.3;\n      colors.selectionInactiveBackgroundTransparent = color.opacity(colors.selectionInactiveBackgroundTransparent, opacity);\n    }\n    colors.ansi = DEFAULT_ANSI_COLORS.slice();\n    colors.ansi[0] = parseColor(theme.black, DEFAULT_ANSI_COLORS[0]);\n    colors.ansi[1] = parseColor(theme.red, DEFAULT_ANSI_COLORS[1]);\n    colors.ansi[2] = parseColor(theme.green, DEFAULT_ANSI_COLORS[2]);\n    colors.ansi[3] = parseColor(theme.yellow, DEFAULT_ANSI_COLORS[3]);\n    colors.ansi[4] = parseColor(theme.blue, DEFAULT_ANSI_COLORS[4]);\n    colors.ansi[5] = parseColor(theme.magenta, DEFAULT_ANSI_COLORS[5]);\n    colors.ansi[6] = parseColor(theme.cyan, DEFAULT_ANSI_COLORS[6]);\n    colors.ansi[7] = parseColor(theme.white, DEFAULT_ANSI_COLORS[7]);\n    colors.ansi[8] = parseColor(theme.brightBlack, DEFAULT_ANSI_COLORS[8]);\n    colors.ansi[9] = parseColor(theme.brightRed, DEFAULT_ANSI_COLORS[9]);\n    colors.ansi[10] = parseColor(theme.brightGreen, DEFAULT_ANSI_COLORS[10]);\n    colors.ansi[11] = parseColor(theme.brightYellow, DEFAULT_ANSI_COLORS[11]);\n    colors.ansi[12] = parseColor(theme.brightBlue, DEFAULT_ANSI_COLORS[12]);\n    colors.ansi[13] = parseColor(theme.brightMagenta, DEFAULT_ANSI_COLORS[13]);\n    colors.ansi[14] = parseColor(theme.brightCyan, DEFAULT_ANSI_COLORS[14]);\n    colors.ansi[15] = parseColor(theme.brightWhite, DEFAULT_ANSI_COLORS[15]);\n    if (theme.extendedAnsi) {\n      const colorCount = Math.min(colors.ansi.length - 16, theme.extendedAnsi.length);\n      for (let i = 0; i < colorCount; i++) {\n        colors.ansi[i + 16] = parseColor(theme.extendedAnsi[i], DEFAULT_ANSI_COLORS[i + 16]);\n      }\n    }\n    // Clear our the cache\n    this._contrastCache.clear();\n    this._updateRestoreColors();\n    this._onChangeColors.fire(this.colors);\n  }\n\n  public restoreColor(slot?: ColorIndex): void {\n    this._restoreColor(slot);\n    this._onChangeColors.fire(this.colors);\n  }\n\n  private _restoreColor(slot: ColorIndex | undefined): void {\n    // unset slot restores all ansi colors\n    if (slot === undefined) {\n      for (let i = 0; i < this._restoreColors.ansi.length; ++i) {\n        this._colors.ansi[i] = this._restoreColors.ansi[i];\n      }\n      return;\n    }\n    switch (slot) {\n      case ColorIndex.FOREGROUND:\n        this._colors.foreground = this._restoreColors.foreground;\n        break;\n      case ColorIndex.BACKGROUND:\n        this._colors.background = this._restoreColors.background;\n        break;\n      case ColorIndex.CURSOR:\n        this._colors.cursor = this._restoreColors.cursor;\n        break;\n      default:\n        this._colors.ansi[slot] = this._restoreColors.ansi[slot];\n    }\n  }\n\n  public modifyColors(callback: (colors: IColorSet) => void): void {\n    callback(this._colors);\n    // Assume the change happened\n    this._onChangeColors.fire(this.colors);\n  }\n\n  private _updateRestoreColors(): void {\n    this._restoreColors = {\n      foreground: this._colors.foreground,\n      background: this._colors.background,\n      cursor: this._colors.cursor,\n      ansi: this._colors.ansi.slice()\n    };\n  }\n}\n\nfunction parseColor(\n  cssString: string | undefined,\n  fallback: IColor\n): IColor {\n  if (cssString !== undefined) {\n    try {\n      return css.toColor(cssString);\n    } catch {\n      // no-op\n    }\n  }\n  return fallback;\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICircularList } from 'common/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\n\nexport interface IInsertEvent {\n  index: number;\n  amount: number;\n}\n\nexport interface IDeleteEvent {\n  index: number;\n  amount: number;\n}\n\n/**\n * Represents a circular list; a list with a maximum size that wraps around when push is called,\n * overriding values at the start of the list.\n */\nexport class CircularList<T> extends Disposable implements ICircularList<T> {\n  protected _array: (T | undefined)[];\n  private _startIndex: number;\n  private _length: number;\n\n  public readonly onDeleteEmitter = this.register(new EventEmitter<IDeleteEvent>());\n  public readonly onDelete = this.onDeleteEmitter.event;\n  public readonly onInsertEmitter = this.register(new EventEmitter<IInsertEvent>());\n  public readonly onInsert = this.onInsertEmitter.event;\n  public readonly onTrimEmitter = this.register(new EventEmitter<number>());\n  public readonly onTrim = this.onTrimEmitter.event;\n\n  constructor(\n    private _maxLength: number\n  ) {\n    super();\n    this._array = new Array<T>(this._maxLength);\n    this._startIndex = 0;\n    this._length = 0;\n  }\n\n  public get maxLength(): number {\n    return this._maxLength;\n  }\n\n  public set maxLength(newMaxLength: number) {\n    // There was no change in maxLength, return early.\n    if (this._maxLength === newMaxLength) {\n      return;\n    }\n\n    // Reconstruct array, starting at index 0. Only transfer values from the\n    // indexes 0 to length.\n    const newArray = new Array<T | undefined>(newMaxLength);\n    for (let i = 0; i < Math.min(newMaxLength, this.length); i++) {\n      newArray[i] = this._array[this._getCyclicIndex(i)];\n    }\n    this._array = newArray;\n    this._maxLength = newMaxLength;\n    this._startIndex = 0;\n  }\n\n  public get length(): number {\n    return this._length;\n  }\n\n  public set length(newLength: number) {\n    if (newLength > this._length) {\n      for (let i = this._length; i < newLength; i++) {\n        this._array[i] = undefined;\n      }\n    }\n    this._length = newLength;\n  }\n\n  /**\n   * Gets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index of the value to get.\n   * @returns The value corresponding to the index.\n   */\n  public get(index: number): T | undefined {\n    return this._array[this._getCyclicIndex(index)];\n  }\n\n  /**\n   * Sets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index to set.\n   * @param value The value to set.\n   */\n  public set(index: number, value: T | undefined): void {\n    this._array[this._getCyclicIndex(index)] = value;\n  }\n\n  /**\n   * Pushes a new value onto the list, wrapping around to the start of the array, overriding index 0\n   * if the maximum length is reached.\n   * @param value The value to push onto the list.\n   */\n  public push(value: T): void {\n    this._array[this._getCyclicIndex(this._length)] = value;\n    if (this._length === this._maxLength) {\n      this._startIndex = ++this._startIndex % this._maxLength;\n      this.onTrimEmitter.fire(1);\n    } else {\n      this._length++;\n    }\n  }\n\n  /**\n   * Advance ringbuffer index and return current element for recycling.\n   * Note: The buffer must be full for this method to work.\n   * @throws When the buffer is not full.\n   */\n  public recycle(): T {\n    if (this._length !== this._maxLength) {\n      throw new Error('Can only recycle when the buffer is full');\n    }\n    this._startIndex = ++this._startIndex % this._maxLength;\n    this.onTrimEmitter.fire(1);\n    return this._array[this._getCyclicIndex(this._length - 1)]!;\n  }\n\n  /**\n   * Ringbuffer is at max length.\n   */\n  public get isFull(): boolean {\n    return this._length === this._maxLength;\n  }\n\n  /**\n   * Removes and returns the last value on the list.\n   * @returns The popped value.\n   */\n  public pop(): T | undefined {\n    return this._array[this._getCyclicIndex(this._length-- - 1)];\n  }\n\n  /**\n   * Deletes and/or inserts items at a particular index (in that order). Unlike\n   * Array.prototype.splice, this operation does not return the deleted items as a new array in\n   * order to save creating a new array. Note that this operation may shift all values in the list\n   * in the worst case.\n   * @param start The index to delete and/or insert.\n   * @param deleteCount The number of elements to delete.\n   * @param items The items to insert.\n   */\n  public splice(start: number, deleteCount: number, ...items: T[]): void {\n    // Delete items\n    if (deleteCount) {\n      for (let i = start; i < this._length - deleteCount; i++) {\n        this._array[this._getCyclicIndex(i)] = this._array[this._getCyclicIndex(i + deleteCount)];\n      }\n      this._length -= deleteCount;\n      this.onDeleteEmitter.fire({ index: start, amount: deleteCount });\n    }\n\n    // Add items\n    for (let i = this._length - 1; i >= start; i--) {\n      this._array[this._getCyclicIndex(i + items.length)] = this._array[this._getCyclicIndex(i)];\n    }\n    for (let i = 0; i < items.length; i++) {\n      this._array[this._getCyclicIndex(start + i)] = items[i];\n    }\n    if (items.length) {\n      this.onInsertEmitter.fire({ index: start, amount: items.length });\n    }\n\n    // Adjust length as needed\n    if (this._length + items.length > this._maxLength) {\n      const countToTrim = (this._length + items.length) - this._maxLength;\n      this._startIndex += countToTrim;\n      this._length = this._maxLength;\n      this.onTrimEmitter.fire(countToTrim);\n    } else {\n      this._length += items.length;\n    }\n  }\n\n  /**\n   * Trims a number of items from the start of the list.\n   * @param count The number of items to remove.\n   */\n  public trimStart(count: number): void {\n    if (count > this._length) {\n      count = this._length;\n    }\n    this._startIndex += count;\n    this._length -= count;\n    this.onTrimEmitter.fire(count);\n  }\n\n  public shiftElements(start: number, count: number, offset: number): void {\n    if (count <= 0) {\n      return;\n    }\n    if (start < 0 || start >= this._length) {\n      throw new Error('start argument out of range');\n    }\n    if (start + offset < 0) {\n      throw new Error('Cannot shift elements in list beyond index 0');\n    }\n\n    if (offset > 0) {\n      for (let i = count - 1; i >= 0; i--) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n      const expandListBy = (start + count + offset) - this._length;\n      if (expandListBy > 0) {\n        this._length += expandListBy;\n        while (this._length > this._maxLength) {\n          this._length--;\n          this._startIndex++;\n          this.onTrimEmitter.fire(1);\n        }\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n    }\n  }\n\n  /**\n   * Gets the cyclic index for the specified regular index. The cyclic index can then be used on the\n   * backing array to get the element associated with the regular index.\n   * @param index The regular index.\n   * @returns The cyclic index.\n   */\n  private _getCyclicIndex(index: number): number {\n    return (this._startIndex + index) % this._maxLength;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/*\n * A simple utility for cloning values\n */\nexport function clone<T>(val: T, depth: number = 5): T {\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  // If we're cloning an array, use an array as the base, otherwise use an object\n  const clonedObject: any = Array.isArray(val) ? [] : {};\n\n  for (const key in val) {\n    // Recursively clone eack item unless we're at the maximum depth\n    clonedObject[key] = depth <= 1 ? val[key] : (val[key] && clone(val[key], depth - 1));\n  }\n\n  return clonedObject as T;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\nimport { IColor, IColorRGB } from 'common/Types';\n\nlet $r = 0;\nlet $g = 0;\nlet $b = 0;\nlet $a = 0;\n\nexport const NULL_COLOR: IColor = {\n  css: '#00000000',\n  rgba: 0\n};\n\n/**\n * Helper functions where the source type is \"channels\" (individual color channels as numbers).\n */\nexport namespace channels {\n  export function toCss(r: number, g: number, b: number, a?: number): string {\n    if (a !== undefined) {\n      return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}${toPaddedHex(a)}`;\n    }\n    return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n  }\n\n  export function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n    // Note: The aggregated number is RGBA32 (BE), thus needs to be converted to ABGR32\n    // on LE systems, before it can be used for direct 32-bit buffer writes.\n    // >>> 0 forces an unsigned int\n    return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n  }\n}\n\n/**\n * Helper functions where the source type is `IColor`.\n */\nexport namespace color {\n  export function blend(bg: IColor, fg: IColor): IColor {\n    $a = (fg.rgba & 0xFF) / 255;\n    if ($a === 1) {\n      return {\n        css: fg.css,\n        rgba: fg.rgba\n      };\n    }\n    const fgR = (fg.rgba >> 24) & 0xFF;\n    const fgG = (fg.rgba >> 16) & 0xFF;\n    const fgB = (fg.rgba >> 8) & 0xFF;\n    const bgR = (bg.rgba >> 24) & 0xFF;\n    const bgG = (bg.rgba >> 16) & 0xFF;\n    const bgB = (bg.rgba >> 8) & 0xFF;\n    $r = bgR + Math.round((fgR - bgR) * $a);\n    $g = bgG + Math.round((fgG - bgG) * $a);\n    $b = bgB + Math.round((fgB - bgB) * $a);\n    const css = channels.toCss($r, $g, $b);\n    const rgba = channels.toRgba($r, $g, $b);\n    return { css, rgba };\n  }\n\n  export function isOpaque(color: IColor): boolean {\n    return (color.rgba & 0xFF) === 0xFF;\n  }\n\n  export function ensureContrastRatio(bg: IColor, fg: IColor, ratio: number): IColor | undefined {\n    const result = rgba.ensureContrastRatio(bg.rgba, fg.rgba, ratio);\n    if (!result) {\n      return undefined;\n    }\n    return rgba.toColor(\n      (result >> 24 & 0xFF),\n      (result >> 16 & 0xFF),\n      (result >> 8  & 0xFF)\n    );\n  }\n\n  export function opaque(color: IColor): IColor {\n    const rgbaColor = (color.rgba | 0xFF) >>> 0;\n    [$r, $g, $b] = rgba.toChannels(rgbaColor);\n    return {\n      css: channels.toCss($r, $g, $b),\n      rgba: rgbaColor\n    };\n  }\n\n  export function opacity(color: IColor, opacity: number): IColor {\n    $a = Math.round(opacity * 0xFF);\n    [$r, $g, $b] = rgba.toChannels(color.rgba);\n    return {\n      css: channels.toCss($r, $g, $b, $a),\n      rgba: channels.toRgba($r, $g, $b, $a)\n    };\n  }\n\n  export function multiplyOpacity(color: IColor, factor: number): IColor {\n    $a = color.rgba & 0xFF;\n    return opacity(color, ($a * factor) / 0xFF);\n  }\n\n  export function toColorRGB(color: IColor): IColorRGB {\n    return [(color.rgba >> 24) & 0xFF, (color.rgba >> 16) & 0xFF, (color.rgba >> 8) & 0xFF];\n  }\n}\n\n/**\n * Helper functions where the source type is \"css\" (string: '#rgb', '#rgba', '#rrggbb', '#rrggbbaa').\n */\nexport namespace css {\n  let $ctx: CanvasRenderingContext2D | undefined;\n  let $litmusColor: CanvasGradient | undefined;\n  if (!isNode) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d', {\n      willReadFrequently: true\n    });\n    if (ctx) {\n      $ctx = ctx;\n      $ctx.globalCompositeOperation = 'copy';\n      $litmusColor = $ctx.createLinearGradient(0, 0, 1, 1);\n    }\n  }\n\n  /**\n   * Converts a css string to an IColor, this should handle all valid CSS color strings and will\n   * throw if it's invalid. The ideal format to use is `#rrggbb[aa]` as it's the fastest to parse.\n   *\n   * Only `#rgb[a]`, `#rrggbb[aa]`, `rgb()` and `rgba()` formats are supported when run in a Node\n   * environment.\n   */\n  export function toColor(css: string): IColor {\n    // Formats: #rgb[a] and #rrggbb[aa]\n    if (css.match(/#[\\da-f]{3,8}/i)) {\n      switch (css.length) {\n        case 4: { // #rgb\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          return rgba.toColor($r, $g, $b);\n        }\n        case 5: { // #rgba\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          $a = parseInt(css.slice(4, 5).repeat(2), 16);\n          return rgba.toColor($r, $g, $b, $a);\n        }\n        case 7: // #rrggbb\n          return {\n            css,\n            rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n          };\n        case 9: // #rrggbbaa\n          return {\n            css,\n            rgba: parseInt(css.slice(1), 16) >>> 0\n          };\n      }\n    }\n\n    // Formats: rgb() or rgba()\n    const rgbaMatch = css.match(/rgba?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*(,\\s*(0|1|\\d?\\.(\\d+))\\s*)?\\)/);\n    if (rgbaMatch) {\n      $r = parseInt(rgbaMatch[1]);\n      $g = parseInt(rgbaMatch[2]);\n      $b = parseInt(rgbaMatch[3]);\n      $a = Math.round((rgbaMatch[5] === undefined ? 1 : parseFloat(rgbaMatch[5])) * 0xFF);\n      return rgba.toColor($r, $g, $b, $a);\n    }\n\n    // Validate the context is available for canvas-based color parsing\n    if (!$ctx || !$litmusColor) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Validate the color using canvas fillStyle\n    // See https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    $ctx.fillStyle = $litmusColor;\n    $ctx.fillStyle = css;\n    if (typeof $ctx.fillStyle !== 'string') {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    $ctx.fillRect(0, 0, 1, 1);\n    [$r, $g, $b, $a] = $ctx.getImageData(0, 0, 1, 1).data;\n\n    // Validate the color is non-transparent as color hue gets lost when drawn to the canvas\n    if ($a !== 0xFF) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Extract the color from the canvas' fillStyle property which exposes the color value in rgba()\n    // format\n    // See https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n    return {\n      rgba: channels.toRgba($r, $g, $b, $a),\n      css\n    };\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgb\" (number: 0xrrggbb).\n */\nexport namespace rgb {\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param rgb The color to use.\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance(rgb: number): number {\n    return relativeLuminance2(\n      (rgb >> 16) & 0xFF,\n      (rgb >> 8 ) & 0xFF,\n      (rgb      ) & 0xFF);\n  }\n\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param r The red channel (0x00 to 0xFF).\n   * @param g The green channel (0x00 to 0xFF).\n   * @param b The blue channel (0x00 to 0xFF).\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance2(r: number, g: number, b: number): number {\n    const rs = r / 255;\n    const gs = g / 255;\n    const bs = b / 255;\n    const rr = rs <= 0.03928 ? rs / 12.92 : Math.pow((rs + 0.055) / 1.055, 2.4);\n    const rg = gs <= 0.03928 ? gs / 12.92 : Math.pow((gs + 0.055) / 1.055, 2.4);\n    const rb = bs <= 0.03928 ? bs / 12.92 : Math.pow((bs + 0.055) / 1.055, 2.4);\n    return rr * 0.2126 + rg * 0.7152 + rb * 0.0722;\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgba\" (number: 0xrrggbbaa).\n */\nexport namespace rgba {\n  /**\n   * Given a foreground color and a background color, either increase or reduce the luminance of the\n   * foreground color until the specified contrast ratio is met. If pure white or black is hit\n   * without the contrast ratio being met, go the other direction using the background color as the\n   * foreground color and take either the first or second result depending on which has the higher\n   * contrast ratio.\n   *\n   * `undefined` will be returned if the contrast ratio is already met.\n   *\n   * @param bgRgba The background color in rgba format.\n   * @param fgRgba The foreground color in rgba format.\n   * @param ratio The contrast ratio to achieve.\n   */\n  export function ensureContrastRatio(bgRgba: number, fgRgba: number, ratio: number): number | undefined {\n    const bgL = rgb.relativeLuminance(bgRgba >> 8);\n    const fgL = rgb.relativeLuminance(fgRgba >> 8);\n    const cr = contrastRatio(bgL, fgL);\n    if (cr < ratio) {\n      if (fgL < bgL) {\n        const resultA = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n        if (resultARatio < ratio) {\n          const resultB = increaseLuminance(bgRgba, fgRgba, ratio);\n          const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n          return resultARatio > resultBRatio ? resultA : resultB;\n        }\n        return resultA;\n      }\n      const resultA = increaseLuminance(bgRgba, fgRgba, ratio);\n      const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n      if (resultARatio < ratio) {\n        const resultB = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n        return resultARatio > resultBRatio ? resultA : resultB;\n      }\n      return resultA;\n    }\n    return undefined;\n  }\n\n  export function reduceLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to reducing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n      // Reduce by 10% until the ratio is hit\n      fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n      fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n      fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function increaseLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to increasing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n      // Increase by 10% until the ratio is hit\n      fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n      fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n      fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  // FIXME: Move this to channels NS?\n  export function toChannels(value: number): [number, number, number, number] {\n    return [(value >> 24) & 0xFF, (value >> 16) & 0xFF, (value >> 8) & 0xFF, value & 0xFF];\n  }\n\n  export function toColor(r: number, g: number, b: number, a?: number): IColor {\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Gets the contrast ratio between two relative luminance values.\n * @param l1 The first relative luminance.\n * @param l2 The first relative luminance.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function contrastRatio(l1: number, l2: number): number {\n  if (l1 < l2) {\n    return (l2 + 0.05) / (l1 + 0.05);\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n","/**\n * Copyright (c) 2014-2020 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IInstantiationService, IOptionsService, IBufferService, ILogService, ICharsetService, ICoreService, ICoreMouseService, IUnicodeService, LogLevelEnum, ITerminalOptions, IOscLinkService } from 'common/services/Services';\nimport { InstantiationService } from 'common/services/InstantiationService';\nimport { LogService } from 'common/services/LogService';\nimport { BufferService, MINIMUM_COLS, MINIMUM_ROWS } from 'common/services/BufferService';\nimport { OptionsService } from 'common/services/OptionsService';\nimport { IDisposable, IAttributeData, ICoreTerminal, IScrollEvent, ScrollSource } from 'common/Types';\nimport { CoreService } from 'common/services/CoreService';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { CoreMouseService } from 'common/services/CoreMouseService';\nimport { UnicodeService } from 'common/services/UnicodeService';\nimport { CharsetService } from 'common/services/CharsetService';\nimport { updateWindowsModeWrappedState } from 'common/WindowsMode';\nimport { IFunctionIdentifier, IParams } from 'common/parser/Types';\nimport { IBufferSet } from 'common/buffer/Types';\nimport { InputHandler } from 'common/InputHandler';\nimport { WriteBuffer } from 'common/input/WriteBuffer';\nimport { OscLinkService } from 'common/services/OscLinkService';\n\n// Only trigger this warning a single time per session\nlet hasWriteSyncWarnHappened = false;\n\nexport abstract class CoreTerminal extends Disposable implements ICoreTerminal {\n  protected readonly _instantiationService: IInstantiationService;\n  protected readonly _bufferService: IBufferService;\n  protected readonly _logService: ILogService;\n  protected readonly _charsetService: ICharsetService;\n  protected readonly _oscLinkService: IOscLinkService;\n\n  public readonly coreMouseService: ICoreMouseService;\n  public readonly coreService: ICoreService;\n  public readonly unicodeService: IUnicodeService;\n  public readonly optionsService: IOptionsService;\n\n  protected _inputHandler: InputHandler;\n  private _writeBuffer: WriteBuffer;\n  private _windowsMode: IDisposable | undefined;\n\n  private readonly _onBinary = this.register(new EventEmitter<string>());\n  public readonly onBinary = this._onBinary.event;\n  private readonly _onData = this.register(new EventEmitter<string>());\n  public readonly onData = this._onData.event;\n  protected _onLineFeed = this.register(new EventEmitter<void>());\n  public readonly onLineFeed = this._onLineFeed.event;\n  private readonly _onResize = this.register(new EventEmitter<{ cols: number, rows: number }>());\n  public readonly onResize = this._onResize.event;\n  protected readonly _onWriteParsed = this.register(new EventEmitter<void>());\n  public readonly onWriteParsed = this._onWriteParsed.event;\n\n  /**\n   * Internally we track the source of the scroll but this is meaningless outside the library so\n   * it's filtered out.\n   */\n  protected _onScrollApi?: EventEmitter<number, void>;\n  protected _onScroll = this.register(new EventEmitter<IScrollEvent, void>());\n  public get onScroll(): IEvent<number, void> {\n    if (!this._onScrollApi) {\n      this._onScrollApi = this.register(new EventEmitter<number, void>());\n      this._onScroll.event(ev => {\n        this._onScrollApi?.fire(ev.position);\n      });\n    }\n    return this._onScrollApi.event;\n  }\n\n  public get cols(): number { return this._bufferService.cols; }\n  public get rows(): number { return this._bufferService.rows; }\n  public get buffers(): IBufferSet { return this._bufferService.buffers; }\n  public get options(): Required<ITerminalOptions> { return this.optionsService.options; }\n  public set options(options: ITerminalOptions) {\n    for (const key in options) {\n      this.optionsService.options[key] = options[key];\n    }\n  }\n\n  constructor(\n    options: Partial<ITerminalOptions>\n  ) {\n    super();\n\n    // Setup and initialize services\n    this._instantiationService = new InstantiationService();\n    this.optionsService = this.register(new OptionsService(options));\n    this._instantiationService.setService(IOptionsService, this.optionsService);\n    this._bufferService = this.register(this._instantiationService.createInstance(BufferService));\n    this._instantiationService.setService(IBufferService, this._bufferService);\n    this._logService = this.register(this._instantiationService.createInstance(LogService));\n    this._instantiationService.setService(ILogService, this._logService);\n    this.coreService = this.register(this._instantiationService.createInstance(CoreService));\n    this._instantiationService.setService(ICoreService, this.coreService);\n    this.coreMouseService = this.register(this._instantiationService.createInstance(CoreMouseService));\n    this._instantiationService.setService(ICoreMouseService, this.coreMouseService);\n    this.unicodeService = this.register(this._instantiationService.createInstance(UnicodeService));\n    this._instantiationService.setService(IUnicodeService, this.unicodeService);\n    this._charsetService = this._instantiationService.createInstance(CharsetService);\n    this._instantiationService.setService(ICharsetService, this._charsetService);\n    this._oscLinkService = this._instantiationService.createInstance(OscLinkService);\n    this._instantiationService.setService(IOscLinkService, this._oscLinkService);\n\n    // Register input handler and handle/forward events\n    this._inputHandler = this.register(new InputHandler(this._bufferService, this._charsetService, this.coreService, this._logService, this.optionsService, this._oscLinkService, this.coreMouseService, this.unicodeService));\n    this.register(forwardEvent(this._inputHandler.onLineFeed, this._onLineFeed));\n    this.register(this._inputHandler);\n\n    // Setup listeners\n    this.register(forwardEvent(this._bufferService.onResize, this._onResize));\n    this.register(forwardEvent(this.coreService.onData, this._onData));\n    this.register(forwardEvent(this.coreService.onBinary, this._onBinary));\n    this.register(this.coreService.onRequestScrollToBottom(() => this.scrollToBottom()));\n    this.register(this.coreService.onUserInput(() =>  this._writeBuffer.handleUserInput()));\n    this.register(this.optionsService.onSpecificOptionChange('windowsMode', e => this._handleWindowsModeOptionChange(e)));\n    this.register(this._bufferService.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n    this.register(this._inputHandler.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n\n    // Setup WriteBuffer\n    this._writeBuffer = this.register(new WriteBuffer((data, promiseResult) => this._inputHandler.parse(data, promiseResult)));\n    this.register(forwardEvent(this._writeBuffer.onWriteParsed, this._onWriteParsed));\n\n    this.register(toDisposable(() => {\n      this._windowsMode?.dispose();\n      this._windowsMode = undefined;\n    }));\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._writeBuffer.write(data, callback);\n  }\n\n  /**\n   * Write data to terminal synchonously.\n   *\n   * This method is unreliable with async parser handlers, thus should not\n   * be used anymore. If you need blocking semantics on data input consider\n   * `write` with a callback instead.\n   *\n   * @deprecated Unreliable, will be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    if (this._logService.logLevel <= LogLevelEnum.WARN && !hasWriteSyncWarnHappened) {\n      this._logService.warn('writeSync is unreliable and will be removed soon.');\n      hasWriteSyncWarnHappened = true;\n    }\n    this._writeBuffer.writeSync(data, maxSubsequentCalls);\n  }\n\n  public resize(x: number, y: number): void {\n    if (isNaN(x) || isNaN(y)) {\n      return;\n    }\n\n    x = Math.max(x, MINIMUM_COLS);\n    y = Math.max(y, MINIMUM_ROWS);\n\n    this._bufferService.resize(x, y);\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param eraseAttr The attribute data to use the for blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    this._bufferService.scroll(eraseAttr, isWrapped);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    this._bufferService.scrollLines(disp, suppressScrollEvent, source);\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this._bufferService.scrollPages(pageCount);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this._bufferService.scrollToTop();\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this._bufferService.scrollToBottom();\n  }\n\n  public scrollToLine(line: number): void {\n    this._bufferService.scrollToLine(line);\n  }\n\n  /** Add handler for ESC escape sequence. See xterm.d.ts for details. */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerEscHandler(id, callback);\n  }\n\n  /** Add handler for DCS escape sequence. See xterm.d.ts for details. */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerDcsHandler(id, callback);\n  }\n\n  /** Add handler for CSI escape sequence. See xterm.d.ts for details. */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerCsiHandler(id, callback);\n  }\n\n  /** Add handler for OSC escape sequence. See xterm.d.ts for details. */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerOscHandler(ident, callback);\n  }\n\n  protected _setup(): void {\n    if (this.optionsService.rawOptions.windowsMode) {\n      this._enableWindowsMode();\n    }\n  }\n\n  public reset(): void {\n    this._inputHandler.reset();\n    this._bufferService.reset();\n    this._charsetService.reset();\n    this.coreService.reset();\n    this.coreMouseService.reset();\n  }\n\n  private _handleWindowsModeOptionChange(value: boolean): void {\n    if (value) {\n      this._enableWindowsMode();\n    } else {\n      this._windowsMode?.dispose();\n      this._windowsMode = undefined;\n    }\n  }\n\n  protected _enableWindowsMode(): void {\n    if (!this._windowsMode) {\n      const disposables: IDisposable[] = [];\n      disposables.push(this.onLineFeed(updateWindowsModeWrappedState.bind(null, this._bufferService)));\n      disposables.push(this.registerCsiHandler({ final: 'H' }, () => {\n        updateWindowsModeWrappedState(this._bufferService);\n        return false;\n      }));\n      this._windowsMode = {\n        dispose: () => {\n          for (const d of disposables) {\n            d.dispose();\n          }\n        }\n      };\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n    this._disposed = true;\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IInputHandler, IAttributeData, IDisposable, IWindowOptions, IColorEvent, IParseStack, ColorIndex, ColorRequestType } from 'common/Types';\nimport { C0, C1 } from 'common/data/EscapeSequences';\nimport { CHARSETS, DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { EscapeSequenceParser } from 'common/parser/EscapeSequenceParser';\nimport { Disposable } from 'common/Lifecycle';\nimport { StringToUtf32, stringFromCodePoint, Utf8ToUtf32 } from 'common/input/TextDecoder';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { IParsingState, IEscapeSequenceParser, IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { NULL_CELL_CODE, NULL_CELL_WIDTH, Attributes, FgFlags, BgFlags, Content, UnderlineStyle } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { ICoreService, IBufferService, IOptionsService, ILogService, ICoreMouseService, ICharsetService, IUnicodeService, LogLevelEnum, IOscLinkService } from 'common/services/Services';\nimport { OscHandler } from 'common/parser/OscParser';\nimport { DcsHandler } from 'common/parser/DcsParser';\nimport { IBuffer } from 'common/buffer/Types';\nimport { parseColor } from 'common/input/XParseColor';\n\n/**\n * Map collect to glevel. Used in `selectCharset`.\n */\nconst GLEVEL: { [key: string]: number } = { '(': 0, ')': 1, '*': 2, '+': 3, '-': 1, '.': 2 };\n\n/**\n * VT commands done by the parser - FIXME: move this to the parser?\n */\n// @vt: #Y   ESC   CSI   \"Control Sequence Introducer\"   \"ESC [\"   \"Start of a CSI sequence.\"\n// @vt: #Y   ESC   OSC   \"Operating System Command\"      \"ESC ]\"   \"Start of an OSC sequence.\"\n// @vt: #Y   ESC   DCS   \"Device Control String\"         \"ESC P\"   \"Start of a DCS sequence.\"\n// @vt: #Y   ESC   ST    \"String Terminator\"             \"ESC \\\"   \"Terminator used for string type sequences.\"\n// @vt: #Y   ESC   PM    \"Privacy Message\"               \"ESC ^\"   \"Start of a privacy message.\"\n// @vt: #Y   ESC   APC   \"Application Program Command\"   \"ESC _\"   \"Start of an APC sequence.\"\n// @vt: #Y   C1    CSI   \"Control Sequence Introducer\"   \"\\x9B\"    \"Start of a CSI sequence.\"\n// @vt: #Y   C1    OSC   \"Operating System Command\"      \"\\x9D\"    \"Start of an OSC sequence.\"\n// @vt: #Y   C1    DCS   \"Device Control String\"         \"\\x90\"    \"Start of a DCS sequence.\"\n// @vt: #Y   C1    ST    \"String Terminator\"             \"\\x9C\"    \"Terminator used for string type sequences.\"\n// @vt: #Y   C1    PM    \"Privacy Message\"               \"\\x9E\"    \"Start of a privacy message.\"\n// @vt: #Y   C1    APC   \"Application Program Command\"   \"\\x9F\"    \"Start of an APC sequence.\"\n// @vt: #Y   C0    NUL   \"Null\"                          \"\\0, \\x00\"  \"NUL is ignored.\"\n// @vt: #Y   C0    ESC   \"Escape\"                        \"\\e, \\x1B\"  \"Start of a sequence. Cancels any other sequence.\"\n\n/**\n * Document xterm VT features here that are currently unsupported\n */\n// @vt: #E[Supported via xterm-addon-image.]  DCS   SIXEL       \"SIXEL Graphics\"          \"DCS Ps ; Ps ; Ps ; q \tPt ST\"  \"Draw SIXEL image.\"\n// @vt: #N  DCS   DECUDK      \"User Defined Keys\"       \"DCS Ps ; Ps \\| Pt ST\"           \"Definitions for user-defined keys.\"\n// @vt: #N  DCS   XTGETTCAP   \"Request Terminfo String\" \"DCS + q Pt ST\"                 \"Request Terminfo String.\"\n// @vt: #N  DCS   XTSETTCAP   \"Set Terminfo Data\"       \"DCS + p Pt ST\"                 \"Set Terminfo Data.\"\n// @vt: #N  OSC   1           \"Set Icon Name\"           \"OSC 1 ; Pt BEL\"                \"Set icon name.\"\n\n/**\n * Max length of the UTF32 input buffer. Real memory consumption is 4 times higher.\n */\nconst MAX_PARSEBUFFER_LENGTH = 131072;\n\n/**\n * Limit length of title and icon name stacks.\n */\nconst STACK_LIMIT = 10;\n\n// map params to window option\nfunction paramToWindowOption(n: number, opts: IWindowOptions): boolean {\n  if (n > 24) {\n    return opts.setWinLines || false;\n  }\n  switch (n) {\n    case 1: return !!opts.restoreWin;\n    case 2: return !!opts.minimizeWin;\n    case 3: return !!opts.setWinPosition;\n    case 4: return !!opts.setWinSizePixels;\n    case 5: return !!opts.raiseWin;\n    case 6: return !!opts.lowerWin;\n    case 7: return !!opts.refreshWin;\n    case 8: return !!opts.setWinSizeChars;\n    case 9: return !!opts.maximizeWin;\n    case 10: return !!opts.fullscreenWin;\n    case 11: return !!opts.getWinState;\n    case 13: return !!opts.getWinPosition;\n    case 14: return !!opts.getWinSizePixels;\n    case 15: return !!opts.getScreenSizePixels;\n    case 16: return !!opts.getCellSizePixels;\n    case 18: return !!opts.getWinSizeChars;\n    case 19: return !!opts.getScreenSizeChars;\n    case 20: return !!opts.getIconTitle;\n    case 21: return !!opts.getWinTitle;\n    case 22: return !!opts.pushTitle;\n    case 23: return !!opts.popTitle;\n    case 24: return !!opts.setWinLines;\n  }\n  return false;\n}\n\nexport enum WindowsOptionsReportType {\n  GET_WIN_SIZE_PIXELS = 0,\n  GET_CELL_SIZE_PIXELS = 1\n}\n\n// create a warning log if an async handler takes longer than the limit (in ms)\nconst SLOW_ASYNC_LIMIT = 5000;\n\n// Work variables to avoid garbage collection\nlet $temp = 0;\n\n/**\n * The terminal's standard implementation of IInputHandler, this handles all\n * input from the Parser.\n *\n * Refer to http://invisible-island.net/xterm/ctlseqs/ctlseqs.html to understand\n * each function's header comment.\n */\nexport class InputHandler extends Disposable implements IInputHandler {\n  private _parseBuffer: Uint32Array = new Uint32Array(4096);\n  private _stringDecoder: StringToUtf32 = new StringToUtf32();\n  private _utf8Decoder: Utf8ToUtf32 = new Utf8ToUtf32();\n  private _workCell: CellData = new CellData();\n  private _windowTitle = '';\n  private _iconName = '';\n  private _dirtyRowTracker: IDirtyRowTracker;\n  protected _windowTitleStack: string[] = [];\n  protected _iconNameStack: string[] = [];\n\n  private _curAttrData: IAttributeData = DEFAULT_ATTR_DATA.clone();\n  public getAttrData(): IAttributeData { return this._curAttrData; }\n  private _eraseAttrDataInternal: IAttributeData = DEFAULT_ATTR_DATA.clone();\n\n  private _activeBuffer: IBuffer;\n\n  private readonly _onRequestBell = this.register(new EventEmitter<void>());\n  public readonly onRequestBell = this._onRequestBell.event;\n  private readonly _onRequestRefreshRows = this.register(new EventEmitter<number, number>());\n  public readonly onRequestRefreshRows = this._onRequestRefreshRows.event;\n  private readonly _onRequestReset = this.register(new EventEmitter<void>());\n  public readonly onRequestReset = this._onRequestReset.event;\n  private readonly _onRequestSendFocus = this.register(new EventEmitter<void>());\n  public readonly onRequestSendFocus = this._onRequestSendFocus.event;\n  private readonly _onRequestSyncScrollBar = this.register(new EventEmitter<void>());\n  public readonly onRequestSyncScrollBar = this._onRequestSyncScrollBar.event;\n  private readonly _onRequestWindowsOptionsReport = this.register(new EventEmitter<WindowsOptionsReportType>());\n  public readonly onRequestWindowsOptionsReport = this._onRequestWindowsOptionsReport.event;\n\n  private readonly _onA11yChar = this.register(new EventEmitter<string>());\n  public readonly onA11yChar = this._onA11yChar.event;\n  private readonly _onA11yTab = this.register(new EventEmitter<number>());\n  public readonly onA11yTab = this._onA11yTab.event;\n  private readonly _onCursorMove = this.register(new EventEmitter<void>());\n  public readonly onCursorMove = this._onCursorMove.event;\n  private readonly _onLineFeed = this.register(new EventEmitter<void>());\n  public readonly onLineFeed = this._onLineFeed.event;\n  private readonly _onScroll = this.register(new EventEmitter<number>());\n  public readonly onScroll = this._onScroll.event;\n  private readonly _onTitleChange = this.register(new EventEmitter<string>());\n  public readonly onTitleChange = this._onTitleChange.event;\n  private readonly _onColor = this.register(new EventEmitter<IColorEvent>());\n  public readonly onColor = this._onColor.event;\n\n  private _parseStack: IParseStack = {\n    paused: false,\n    cursorStartX: 0,\n    cursorStartY: 0,\n    decodedLength: 0,\n    position: 0\n  };\n\n  constructor(\n    private readonly _bufferService: IBufferService,\n    private readonly _charsetService: ICharsetService,\n    private readonly _coreService: ICoreService,\n    private readonly _logService: ILogService,\n    private readonly _optionsService: IOptionsService,\n    private readonly _oscLinkService: IOscLinkService,\n    private readonly _coreMouseService: ICoreMouseService,\n    private readonly _unicodeService: IUnicodeService,\n    private readonly _parser: IEscapeSequenceParser = new EscapeSequenceParser()\n  ) {\n    super();\n    this.register(this._parser);\n    this._dirtyRowTracker = new DirtyRowTracker(this._bufferService);\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n\n    /**\n     * custom fallback handlers\n     */\n    this._parser.setCsiHandlerFallback((ident, params) => {\n      this._logService.debug('Unknown CSI code: ', { identifier: this._parser.identToString(ident), params: params.toArray() });\n    });\n    this._parser.setEscHandlerFallback(ident => {\n      this._logService.debug('Unknown ESC code: ', { identifier: this._parser.identToString(ident) });\n    });\n    this._parser.setExecuteHandlerFallback(code => {\n      this._logService.debug('Unknown EXECUTE code: ', { code });\n    });\n    this._parser.setOscHandlerFallback((identifier, action, data) => {\n      this._logService.debug('Unknown OSC code: ', { identifier, action, data });\n    });\n    this._parser.setDcsHandlerFallback((ident, action, payload) => {\n      if (action === 'HOOK') {\n        payload = payload.toArray();\n      }\n      this._logService.debug('Unknown DCS code: ', { identifier: this._parser.identToString(ident), action, payload });\n    });\n\n    /**\n     * print handler\n     */\n    this._parser.setPrintHandler((data, start, end) => this.print(data, start, end));\n\n    /**\n     * CSI handler\n     */\n    this._parser.registerCsiHandler({ final: '@' }, params => this.insertChars(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: '@' }, params => this.scrollLeft(params));\n    this._parser.registerCsiHandler({ final: 'A' }, params => this.cursorUp(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'A' }, params => this.scrollRight(params));\n    this._parser.registerCsiHandler({ final: 'B' }, params => this.cursorDown(params));\n    this._parser.registerCsiHandler({ final: 'C' }, params => this.cursorForward(params));\n    this._parser.registerCsiHandler({ final: 'D' }, params => this.cursorBackward(params));\n    this._parser.registerCsiHandler({ final: 'E' }, params => this.cursorNextLine(params));\n    this._parser.registerCsiHandler({ final: 'F' }, params => this.cursorPrecedingLine(params));\n    this._parser.registerCsiHandler({ final: 'G' }, params => this.cursorCharAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'H' }, params => this.cursorPosition(params));\n    this._parser.registerCsiHandler({ final: 'I' }, params => this.cursorForwardTab(params));\n    this._parser.registerCsiHandler({ final: 'J' }, params => this.eraseInDisplay(params, false));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'J' }, params => this.eraseInDisplay(params, true));\n    this._parser.registerCsiHandler({ final: 'K' }, params => this.eraseInLine(params, false));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'K' }, params => this.eraseInLine(params, true));\n    this._parser.registerCsiHandler({ final: 'L' }, params => this.insertLines(params));\n    this._parser.registerCsiHandler({ final: 'M' }, params => this.deleteLines(params));\n    this._parser.registerCsiHandler({ final: 'P' }, params => this.deleteChars(params));\n    this._parser.registerCsiHandler({ final: 'S' }, params => this.scrollUp(params));\n    this._parser.registerCsiHandler({ final: 'T' }, params => this.scrollDown(params));\n    this._parser.registerCsiHandler({ final: 'X' }, params => this.eraseChars(params));\n    this._parser.registerCsiHandler({ final: 'Z' }, params => this.cursorBackwardTab(params));\n    this._parser.registerCsiHandler({ final: '`' }, params => this.charPosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'a' }, params => this.hPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'b' }, params => this.repeatPrecedingCharacter(params));\n    this._parser.registerCsiHandler({ final: 'c' }, params => this.sendDeviceAttributesPrimary(params));\n    this._parser.registerCsiHandler({ prefix: '>', final: 'c' }, params => this.sendDeviceAttributesSecondary(params));\n    this._parser.registerCsiHandler({ final: 'd' }, params => this.linePosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'e' }, params => this.vPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'f' }, params => this.hVPosition(params));\n    this._parser.registerCsiHandler({ final: 'g' }, params => this.tabClear(params));\n    this._parser.registerCsiHandler({ final: 'h' }, params => this.setMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'h' }, params => this.setModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'l' }, params => this.resetMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'l' }, params => this.resetModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'm' }, params => this.charAttributes(params));\n    this._parser.registerCsiHandler({ final: 'n' }, params => this.deviceStatus(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'n' }, params => this.deviceStatusPrivate(params));\n    this._parser.registerCsiHandler({ intermediates: '!', final: 'p' }, params => this.softReset(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'q' }, params => this.setCursorStyle(params));\n    this._parser.registerCsiHandler({ final: 'r' }, params => this.setScrollRegion(params));\n    this._parser.registerCsiHandler({ final: 's' }, params => this.saveCursor(params));\n    this._parser.registerCsiHandler({ final: 't' }, params => this.windowOptions(params));\n    this._parser.registerCsiHandler({ final: 'u' }, params => this.restoreCursor(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '}' }, params => this.insertColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '~' }, params => this.deleteColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\"', final: 'q' }, params => this.selectProtected(params));\n    this._parser.registerCsiHandler({ intermediates: '$', final: 'p' }, params => this.requestMode(params, true));\n    this._parser.registerCsiHandler({ prefix: '?', intermediates: '$', final: 'p' }, params => this.requestMode(params, false));\n\n    /**\n     * execute handler\n     */\n    this._parser.setExecuteHandler(C0.BEL, () => this.bell());\n    this._parser.setExecuteHandler(C0.LF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.VT, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.FF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.CR, () => this.carriageReturn());\n    this._parser.setExecuteHandler(C0.BS, () => this.backspace());\n    this._parser.setExecuteHandler(C0.HT, () => this.tab());\n    this._parser.setExecuteHandler(C0.SO, () => this.shiftOut());\n    this._parser.setExecuteHandler(C0.SI, () => this.shiftIn());\n    // FIXME:   What do to with missing? Old code just added those to print.\n\n    this._parser.setExecuteHandler(C1.IND, () => this.index());\n    this._parser.setExecuteHandler(C1.NEL, () => this.nextLine());\n    this._parser.setExecuteHandler(C1.HTS, () => this.tabSet());\n\n    /**\n     * OSC handler\n     */\n    //   0 - icon name + title\n    this._parser.registerOscHandler(0, new OscHandler(data => { this.setTitle(data); this.setIconName(data); return true; }));\n    //   1 - icon name\n    this._parser.registerOscHandler(1, new OscHandler(data => this.setIconName(data)));\n    //   2 - title\n    this._parser.registerOscHandler(2, new OscHandler(data => this.setTitle(data)));\n    //   3 - set property X in the form \"prop=value\"\n    //   4 - Change Color Number\n    this._parser.registerOscHandler(4, new OscHandler(data => this.setOrReportIndexedColor(data)));\n    //   5 - Change Special Color Number\n    //   6 - Enable/disable Special Color Number c\n    //   7 - current directory? (not in xterm spec, see https://gitlab.com/gnachman/iterm2/issues/3939)\n    //   8 - create hyperlink (not in xterm spec, see https://gist.github.com/egmontkob/eb114294efbcd5adb1944c9f3cb5feda)\n    this._parser.registerOscHandler(8, new OscHandler(data => this.setHyperlink(data)));\n    //  10 - Change VT100 text foreground color to Pt.\n    this._parser.registerOscHandler(10, new OscHandler(data => this.setOrReportFgColor(data)));\n    //  11 - Change VT100 text background color to Pt.\n    this._parser.registerOscHandler(11, new OscHandler(data => this.setOrReportBgColor(data)));\n    //  12 - Change text cursor color to Pt.\n    this._parser.registerOscHandler(12, new OscHandler(data => this.setOrReportCursorColor(data)));\n    //  13 - Change mouse foreground color to Pt.\n    //  14 - Change mouse background color to Pt.\n    //  15 - Change Tektronix foreground color to Pt.\n    //  16 - Change Tektronix background color to Pt.\n    //  17 - Change highlight background color to Pt.\n    //  18 - Change Tektronix cursor color to Pt.\n    //  19 - Change highlight foreground color to Pt.\n    //  46 - Change Log File to Pt.\n    //  50 - Set Font to Pt.\n    //  51 - reserved for Emacs shell.\n    //  52 - Manipulate Selection Data.\n    // 104 ; c - Reset Color Number c.\n    this._parser.registerOscHandler(104, new OscHandler(data => this.restoreIndexedColor(data)));\n    // 105 ; c - Reset Special Color Number c.\n    // 106 ; c; f - Enable/disable Special Color Number c.\n    // 110 - Reset VT100 text foreground color.\n    this._parser.registerOscHandler(110, new OscHandler(data => this.restoreFgColor(data)));\n    // 111 - Reset VT100 text background color.\n    this._parser.registerOscHandler(111, new OscHandler(data => this.restoreBgColor(data)));\n    // 112 - Reset text cursor color.\n    this._parser.registerOscHandler(112, new OscHandler(data => this.restoreCursorColor(data)));\n    // 113 - Reset mouse foreground color.\n    // 114 - Reset mouse background color.\n    // 115 - Reset Tektronix foreground color.\n    // 116 - Reset Tektronix background color.\n    // 117 - Reset highlight color.\n    // 118 - Reset Tektronix cursor color.\n    // 119 - Reset highlight foreground color.\n\n    /**\n     * ESC handlers\n     */\n    this._parser.registerEscHandler({ final: '7' }, () => this.saveCursor());\n    this._parser.registerEscHandler({ final: '8' }, () => this.restoreCursor());\n    this._parser.registerEscHandler({ final: 'D' }, () => this.index());\n    this._parser.registerEscHandler({ final: 'E' }, () => this.nextLine());\n    this._parser.registerEscHandler({ final: 'H' }, () => this.tabSet());\n    this._parser.registerEscHandler({ final: 'M' }, () => this.reverseIndex());\n    this._parser.registerEscHandler({ final: '=' }, () => this.keypadApplicationMode());\n    this._parser.registerEscHandler({ final: '>' }, () => this.keypadNumericMode());\n    this._parser.registerEscHandler({ final: 'c' }, () => this.fullReset());\n    this._parser.registerEscHandler({ final: 'n' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: 'o' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '|' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '}' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: '~' }, () => this.setgLevel(1));\n    this._parser.registerEscHandler({ intermediates: '%', final: '@' }, () => this.selectDefaultCharset());\n    this._parser.registerEscHandler({ intermediates: '%', final: 'G' }, () => this.selectDefaultCharset());\n    for (const flag in CHARSETS) {\n      this._parser.registerEscHandler({ intermediates: '(', final: flag }, () => this.selectCharset('(' + flag));\n      this._parser.registerEscHandler({ intermediates: ')', final: flag }, () => this.selectCharset(')' + flag));\n      this._parser.registerEscHandler({ intermediates: '*', final: flag }, () => this.selectCharset('*' + flag));\n      this._parser.registerEscHandler({ intermediates: '+', final: flag }, () => this.selectCharset('+' + flag));\n      this._parser.registerEscHandler({ intermediates: '-', final: flag }, () => this.selectCharset('-' + flag));\n      this._parser.registerEscHandler({ intermediates: '.', final: flag }, () => this.selectCharset('.' + flag));\n      this._parser.registerEscHandler({ intermediates: '/', final: flag }, () => this.selectCharset('/' + flag)); // TODO: supported?\n    }\n    this._parser.registerEscHandler({ intermediates: '#', final: '8' }, () => this.screenAlignmentPattern());\n\n    /**\n     * error handler\n     */\n    this._parser.setErrorHandler((state: IParsingState) => {\n      this._logService.error('Parsing error: ', state);\n      return state;\n    });\n\n    /**\n     * DCS handler\n     */\n    this._parser.registerDcsHandler({ intermediates: '$', final: 'q' }, new DcsHandler((data, params) => this.requestStatusString(data, params)));\n  }\n\n  /**\n   * Async parse support.\n   */\n  private _preserveStack(cursorStartX: number, cursorStartY: number, decodedLength: number, position: number): void {\n    this._parseStack.paused = true;\n    this._parseStack.cursorStartX = cursorStartX;\n    this._parseStack.cursorStartY = cursorStartY;\n    this._parseStack.decodedLength = decodedLength;\n    this._parseStack.position = position;\n  }\n\n  private _logSlowResolvingAsync(p: Promise<boolean>): void {\n    // log a limited warning about an async handler taking too long\n    if (this._logService.logLevel <= LogLevelEnum.WARN) {\n      Promise.race([p, new Promise((res, rej) => setTimeout(() => rej('#SLOW_TIMEOUT'), SLOW_ASYNC_LIMIT))])\n        .catch(err => {\n          if (err !== '#SLOW_TIMEOUT') {\n            throw err;\n          }\n          console.warn(`async parser handler taking longer than ${SLOW_ASYNC_LIMIT} ms`);\n        });\n    }\n  }\n\n  private _getCurrentLinkId(): number {\n    return this._curAttrData.extended.urlId;\n  }\n\n  /**\n   * Parse call with async handler support.\n   *\n   * Whether the stack state got preserved for the next call, is indicated by the return value:\n   * - undefined (void):\n   *   all handlers were sync, no stack save, continue normally with next chunk\n   * - Promise\\<boolean\\>:\n   *   execution stopped at async handler, stack saved, continue with\n   *   same chunk and the promise resolve value as `promiseResult` until the method returns `undefined`\n   *\n   * Note: This method should only be called by `Terminal.write` to ensure correct execution order and\n   * proper continuation of async parser handlers.\n   */\n  public parse(data: string | Uint8Array, promiseResult?: boolean): void | Promise<boolean> {\n    let result: void | Promise<boolean>;\n    let cursorStartX = this._activeBuffer.x;\n    let cursorStartY = this._activeBuffer.y;\n    let start = 0;\n    const wasPaused = this._parseStack.paused;\n\n    if (wasPaused) {\n      // assumption: _parseBuffer never mutates between async calls\n      if (result = this._parser.parse(this._parseBuffer, this._parseStack.decodedLength, promiseResult)) {\n        this._logSlowResolvingAsync(result);\n        return result;\n      }\n      cursorStartX = this._parseStack.cursorStartX;\n      cursorStartY = this._parseStack.cursorStartY;\n      this._parseStack.paused = false;\n      if (data.length > MAX_PARSEBUFFER_LENGTH) {\n        start = this._parseStack.position + MAX_PARSEBUFFER_LENGTH;\n      }\n    }\n\n    // Log debug data, the log level gate is to prevent extra work in this hot path\n    if (this._logService.logLevel <= LogLevelEnum.DEBUG) {\n      this._logService.debug(`parsing data${typeof data === 'string' ? ` \"${data}\"` : ` \"${Array.prototype.map.call(data, e => String.fromCharCode(e)).join('')}\"`}`, typeof data === 'string'\n        ? data.split('').map(e => e.charCodeAt(0))\n        : data\n      );\n    }\n\n    // resize input buffer if needed\n    if (this._parseBuffer.length < data.length) {\n      if (this._parseBuffer.length < MAX_PARSEBUFFER_LENGTH) {\n        this._parseBuffer = new Uint32Array(Math.min(data.length, MAX_PARSEBUFFER_LENGTH));\n      }\n    }\n\n    // Clear the dirty row service so we know which lines changed as a result of parsing\n    // Important: do not clear between async calls, otherwise we lost pending update information.\n    if (!wasPaused) {\n      this._dirtyRowTracker.clearRange();\n    }\n\n    // process big data in smaller chunks\n    if (data.length > MAX_PARSEBUFFER_LENGTH) {\n      for (let i = start; i < data.length; i += MAX_PARSEBUFFER_LENGTH) {\n        const end = i + MAX_PARSEBUFFER_LENGTH < data.length ? i + MAX_PARSEBUFFER_LENGTH : data.length;\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data.substring(i, end), this._parseBuffer)\n          : this._utf8Decoder.decode(data.subarray(i, end), this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, i);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    } else {\n      if (!wasPaused) {\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data, this._parseBuffer)\n          : this._utf8Decoder.decode(data, this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, 0);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    }\n\n    if (this._activeBuffer.x !== cursorStartX || this._activeBuffer.y !== cursorStartY) {\n      this._onCursorMove.fire();\n    }\n\n    // Refresh any dirty rows accumulated as part of parsing\n    this._onRequestRefreshRows.fire(this._dirtyRowTracker.start, this._dirtyRowTracker.end);\n  }\n\n  public print(data: Uint32Array, start: number, end: number): void {\n    let code: number;\n    let chWidth: number;\n    const charset = this._charsetService.charset;\n    const screenReaderMode = this._optionsService.rawOptions.screenReaderMode;\n    const cols = this._bufferService.cols;\n    const wraparoundMode = this._coreService.decPrivateModes.wraparound;\n    const insertMode = this._coreService.modes.insertMode;\n    const curAttr = this._curAttrData;\n    let bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n\n    // handle wide chars: reset start_cell-1 if we would overwrite the second cell of a wide char\n    if (this._activeBuffer.x && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x - 1) === 2) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x - 1, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    for (let pos = start; pos < end; ++pos) {\n      code = data[pos];\n\n      // calculate print space\n      // expensive call, therefore we save width in line buffer\n      chWidth = this._unicodeService.wcwidth(code);\n\n      // get charset replacement character\n      // charset is only defined for ASCII, therefore we only\n      // search for an replacement char if code < 127\n      if (code < 127 && charset) {\n        const ch = charset[String.fromCharCode(code)];\n        if (ch) {\n          code = ch.charCodeAt(0);\n        }\n      }\n\n      if (screenReaderMode) {\n        this._onA11yChar.fire(stringFromCodePoint(code));\n      }\n      if (this._getCurrentLinkId()) {\n        this._oscLinkService.addLineToLink(this._getCurrentLinkId(), this._activeBuffer.ybase + this._activeBuffer.y);\n      }\n\n      // insert combining char at last cursor position\n      // this._activeBuffer.x should never be 0 for a combining char\n      // since they always follow a cell consuming char\n      // therefore we can test for this._activeBuffer.x to avoid overflow left\n      if (!chWidth && this._activeBuffer.x) {\n        if (!bufferRow.getWidth(this._activeBuffer.x - 1)) {\n          // found empty cell after fullwidth, need to go 2 cells back\n          // it is save to step 2 cells back here\n          // since an empty cell is only set by fullwidth chars\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 2, code);\n        } else {\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 1, code);\n        }\n        continue;\n      }\n\n      // goto next line if ch would overflow\n      // NOTE: To avoid costly width checks here,\n      // the terminal does not allow a cols < 2.\n      if (this._activeBuffer.x + chWidth - 1 >= cols) {\n        // autowrap - DECAWM\n        // automatically wraps to the beginning of the next line\n        if (wraparoundMode) {\n          // clear left over cells to the right\n          while (this._activeBuffer.x < cols) {\n            bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n          }\n          this._activeBuffer.x = 0;\n          this._activeBuffer.y++;\n          if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n            this._activeBuffer.y--;\n            this._bufferService.scroll(this._eraseAttrData(), true);\n          } else {\n            if (this._activeBuffer.y >= this._bufferService.rows) {\n              this._activeBuffer.y = this._bufferService.rows - 1;\n            }\n            // The line already exists (eg. the initial viewport), mark it as a\n            // wrapped line\n            this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = true;\n          }\n          // row changed, get it again\n          bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        } else {\n          this._activeBuffer.x = cols - 1;\n          if (chWidth === 2) {\n            // FIXME: check for xterm behavior\n            // What to do here? We got a wide char that does not fit into last cell\n            continue;\n          }\n        }\n      }\n\n      // insert mode: move characters to right\n      if (insertMode) {\n        // right shift cells according to the width\n        bufferRow.insertCells(this._activeBuffer.x, chWidth, this._activeBuffer.getNullCell(curAttr), curAttr);\n        // test last cell - since the last cell has only room for\n        // a halfwidth char any fullwidth shifted there is lost\n        // and will be set to empty cell\n        if (bufferRow.getWidth(cols - 1) === 2) {\n          bufferRow.setCellFromCodePoint(cols - 1, NULL_CELL_CODE, NULL_CELL_WIDTH, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n\n      // write current char to buffer and advance cursor\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x++, code, chWidth, curAttr.fg, curAttr.bg, curAttr.extended);\n\n      // fullwidth char - also set next cell to placeholder stub and advance cursor\n      // for graphemes bigger than fullwidth we can simply loop to zero\n      // we already made sure above, that this._activeBuffer.x + chWidth will not overflow right\n      if (chWidth > 0) {\n        while (--chWidth) {\n          // other than a regular empty cell a cell following a wide char has no width\n          bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 0, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n    }\n    // store last char in Parser.precedingCodepoint for REP to work correctly\n    // This needs to check whether:\n    //  - fullwidth + surrogates: reset\n    //  - combining: only base char gets carried on (bug in xterm?)\n    if (end - start > 0) {\n      bufferRow.loadCell(this._activeBuffer.x - 1, this._workCell);\n      if (this._workCell.getWidth() === 2 || this._workCell.getCode() > 0xFFFF) {\n        this._parser.precedingCodepoint = 0;\n      } else if (this._workCell.isCombined()) {\n        this._parser.precedingCodepoint = this._workCell.getChars().charCodeAt(0);\n      } else {\n        this._parser.precedingCodepoint = this._workCell.content;\n      }\n    }\n\n    // handle wide chars: reset cell to the right if it is second cell of a wide char\n    if (this._activeBuffer.x < cols && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x) === 0 && !bufferRow.hasContent(this._activeBuffer.x)) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Forward registerCsiHandler from parser.\n   */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    if (id.final === 't' && !id.prefix && !id.intermediates) {\n      // security: always check whether window option is allowed\n      return this._parser.registerCsiHandler(id, params => {\n        if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n          return true;\n        }\n        return callback(params);\n      });\n    }\n    return this._parser.registerCsiHandler(id, callback);\n  }\n\n  /**\n   * Forward registerDcsHandler from parser.\n   */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerDcsHandler(id, new DcsHandler(callback));\n  }\n\n  /**\n   * Forward registerEscHandler from parser.\n   */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerEscHandler(id, callback);\n  }\n\n  /**\n   * Forward registerOscHandler from parser.\n   */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerOscHandler(ident, new OscHandler(callback));\n  }\n\n  /**\n   * BEL\n   * Bell (Ctrl-G).\n   *\n   * @vt: #Y   C0    BEL   \"Bell\"  \"\\a, \\x07\"  \"Ring the bell.\"\n   * The behavior of the bell is further customizable with `ITerminalOptions.bellStyle`\n   * and `ITerminalOptions.bellSound`.\n   */\n  public bell(): boolean {\n    this._onRequestBell.fire();\n    return true;\n  }\n\n  /**\n   * LF\n   * Line Feed or New Line (NL).  (LF  is Ctrl-J).\n   *\n   * @vt: #Y   C0    LF   \"Line Feed\"            \"\\n, \\x0A\"  \"Move the cursor one row down, scrolling if needed.\"\n   * Scrolling is restricted to scroll margins and will only happen on the bottom line.\n   *\n   * @vt: #Y   C0    VT   \"Vertical Tabulation\"  \"\\v, \\x0B\"  \"Treated as LF.\"\n   * @vt: #Y   C0    FF   \"Form Feed\"            \"\\f, \\x0C\"  \"Treated as LF.\"\n   */\n  public lineFeed(): boolean {\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    if (this._optionsService.rawOptions.convertEol) {\n      this._activeBuffer.x = 0;\n    }\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      this._activeBuffer.x--;\n    }\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n\n    this._onLineFeed.fire();\n    return true;\n  }\n\n  /**\n   * CR\n   * Carriage Return (Ctrl-M).\n   *\n   * @vt: #Y   C0    CR   \"Carriage Return\"  \"\\r, \\x0D\"  \"Move the cursor to the beginning of the row.\"\n   */\n  public carriageReturn(): boolean {\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * BS\n   * Backspace (Ctrl-H).\n   *\n   * @vt: #Y   C0    BS   \"Backspace\"  \"\\b, \\x08\"  \"Move the cursor one position to the left.\"\n   * By default it is not possible to move the cursor past the leftmost position.\n   * If `reverse wrap-around` (`CSI ? 45 h`) is set, a previous soft line wrap (DECAWM)\n   * can be undone with BS within the scroll margins. In that case the cursor will wrap back\n   * to the end of the previous row. Note that it is not possible to peek back into the scrollbuffer\n   * with the cursor, thus at the home position (top-leftmost cell) this has no effect.\n   */\n  public backspace(): boolean {\n    // reverse wrap-around is disabled\n    if (!this._coreService.decPrivateModes.reverseWraparound) {\n      this._restrictCursor();\n      if (this._activeBuffer.x > 0) {\n        this._activeBuffer.x--;\n      }\n      return true;\n    }\n\n    // reverse wrap-around is enabled\n    // other than for normal operation mode, reverse wrap-around allows the cursor\n    // to be at x=cols to be able to address the last cell of a row by BS\n    this._restrictCursor(this._bufferService.cols);\n\n    if (this._activeBuffer.x > 0) {\n      this._activeBuffer.x--;\n    } else {\n      /**\n       * reverse wrap-around handling:\n       * Our implementation deviates from xterm on purpose. Details:\n       * - only previous soft NLs can be reversed (isWrapped=true)\n       * - only works within scrollborders (top/bottom, left/right not yet supported)\n       * - cannot peek into scrollbuffer\n       * - any cursor movement sequence keeps working as expected\n       */\n      if (this._activeBuffer.x === 0\n        && this._activeBuffer.y > this._activeBuffer.scrollTop\n        && this._activeBuffer.y <= this._activeBuffer.scrollBottom\n        && this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)?.isWrapped) {\n        this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n        this._activeBuffer.y--;\n        this._activeBuffer.x = this._bufferService.cols - 1;\n        // find last taken cell - last cell can have 3 different states:\n        // - hasContent(true) + hasWidth(1): narrow char - we are done\n        // - hasWidth(0): second part of wide char - we are done\n        // - hasContent(false) + hasWidth(1): empty cell due to early wrapping wide char, go one cell further back\n        const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        if (line.hasWidth(this._activeBuffer.x) && !line.hasContent(this._activeBuffer.x)) {\n          this._activeBuffer.x--;\n          // We do this only once, since width=1 + hasContent=false currently happens only once before\n          // early wrapping of a wide char.\n          // This needs to be fixed once we support graphemes taking more than 2 cells.\n        }\n      }\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * TAB\n   * Horizontal Tab (HT) (Ctrl-I).\n   *\n   * @vt: #Y   C0    HT   \"Horizontal Tabulation\"  \"\\t, \\x09\"  \"Move the cursor to the next character tab stop.\"\n   */\n  public tab(): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    const originalX = this._activeBuffer.x;\n    this._activeBuffer.x = this._activeBuffer.nextStop();\n    if (this._optionsService.rawOptions.screenReaderMode) {\n      this._onA11yTab.fire(this._activeBuffer.x - originalX);\n    }\n    return true;\n  }\n\n  /**\n   * SO\n   * Shift Out (Ctrl-N) -> Switch to Alternate Character Set.  This invokes the\n   * G1 character set.\n   *\n   * @vt: #P[Only limited ISO-2022 charset support.]  C0    SO   \"Shift Out\"  \"\\x0E\"  \"Switch to an alternative character set.\"\n   */\n  public shiftOut(): boolean {\n    this._charsetService.setgLevel(1);\n    return true;\n  }\n\n  /**\n   * SI\n   * Shift In (Ctrl-O) -> Switch to Standard Character Set.  This invokes the G0\n   * character set (the default).\n   *\n   * @vt: #Y   C0    SI   \"Shift In\"   \"\\x0F\"  \"Return to regular character set after Shift Out.\"\n   */\n  public shiftIn(): boolean {\n    this._charsetService.setgLevel(0);\n    return true;\n  }\n\n  /**\n   * Restrict cursor to viewport size / scroll margin (origin mode).\n   */\n  private _restrictCursor(maxCol: number = this._bufferService.cols - 1): void {\n    this._activeBuffer.x = Math.min(maxCol, Math.max(0, this._activeBuffer.x));\n    this._activeBuffer.y = this._coreService.decPrivateModes.origin\n      ? Math.min(this._activeBuffer.scrollBottom, Math.max(this._activeBuffer.scrollTop, this._activeBuffer.y))\n      : Math.min(this._bufferService.rows - 1, Math.max(0, this._activeBuffer.y));\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set absolute cursor position.\n   */\n  private _setCursor(x: number, y: number): void {\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    if (this._coreService.decPrivateModes.origin) {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = this._activeBuffer.scrollTop + y;\n    } else {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = y;\n    }\n    this._restrictCursor();\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set relative cursor position.\n   */\n  private _moveCursor(x: number, y: number): void {\n    // for relative changes we have to make sure we are within 0 .. cols/rows - 1\n    // before calculating the new position\n    this._restrictCursor();\n    this._setCursor(this._activeBuffer.x + x, this._activeBuffer.y + y);\n  }\n\n  /**\n   * CSI Ps A\n   * Cursor Up Ps Times (default = 1) (CUU).\n   *\n   * @vt: #Y CSI CUU   \"Cursor Up\"   \"CSI Ps A\"  \"Move cursor `Ps` times up (default=1).\"\n   * If the cursor would pass the top scroll margin, it will stop there.\n   */\n  public cursorUp(params: IParams): boolean {\n    // stop at scrollTop\n    const diffToTop = this._activeBuffer.y - this._activeBuffer.scrollTop;\n    if (diffToTop >= 0) {\n      this._moveCursor(0, -Math.min(diffToTop, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, -(params.params[0] || 1));\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps B\n   * Cursor Down Ps Times (default = 1) (CUD).\n   *\n   * @vt: #Y CSI CUD   \"Cursor Down\"   \"CSI Ps B\"  \"Move cursor `Ps` times down (default=1).\"\n   * If the cursor would pass the bottom scroll margin, it will stop there.\n   */\n  public cursorDown(params: IParams): boolean {\n    // stop at scrollBottom\n    const diffToBottom = this._activeBuffer.scrollBottom - this._activeBuffer.y;\n    if (diffToBottom >= 0) {\n      this._moveCursor(0, Math.min(diffToBottom, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, params.params[0] || 1);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps C\n   * Cursor Forward Ps Times (default = 1) (CUF).\n   *\n   * @vt: #Y CSI CUF   \"Cursor Forward\"    \"CSI Ps C\"  \"Move cursor `Ps` times forward (default=1).\"\n   */\n  public cursorForward(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps D\n   * Cursor Backward Ps Times (default = 1) (CUB).\n   *\n   * @vt: #Y CSI CUB   \"Cursor Backward\"   \"CSI Ps D\"  \"Move cursor `Ps` times backward (default=1).\"\n   */\n  public cursorBackward(params: IParams): boolean {\n    this._moveCursor(-(params.params[0] || 1), 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps E\n   * Cursor Next Line Ps Times (default = 1) (CNL).\n   * Other than cursorDown (CUD) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CNL   \"Cursor Next Line\"  \"CSI Ps E\"  \"Move cursor `Ps` times down (default=1) and to the first column.\"\n   * Same as CUD, additionally places the cursor at the first column.\n   */\n  public cursorNextLine(params: IParams): boolean {\n    this.cursorDown(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps F\n   * Cursor Previous Line Ps Times (default = 1) (CPL).\n   * Other than cursorUp (CUU) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CPL   \"Cursor Backward\"   \"CSI Ps F\"  \"Move cursor `Ps` times up (default=1) and to the first column.\"\n   * Same as CUU, additionally places the cursor at the first column.\n   */\n  public cursorPrecedingLine(params: IParams): boolean {\n    this.cursorUp(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps G\n   * Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n   *\n   * @vt: #Y CSI CHA   \"Cursor Horizontal Absolute\" \"CSI Ps G\" \"Move cursor to `Ps`-th column of the active row (default=1).\"\n   */\n  public cursorCharAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps H\n   * Cursor Position [row;column] (default = [1,1]) (CUP).\n   *\n   * @vt: #Y CSI CUP   \"Cursor Position\"   \"CSI Ps ; Ps H\"  \"Set cursor to position [`Ps`, `Ps`] (default = [1, 1]).\"\n   * If ORIGIN mode is set, places the cursor to the absolute position within the scroll margins.\n   * If ORIGIN mode is not set, places the cursor to the absolute position within the viewport.\n   * Note that the coordinates are 1-based, thus the top left position starts at `1 ; 1`.\n   */\n  public cursorPosition(params: IParams): boolean {\n    this._setCursor(\n      // col\n      (params.length >= 2) ? (params.params[1] || 1) - 1 : 0,\n      // row\n      (params.params[0] || 1) - 1\n    );\n    return true;\n  }\n\n  /**\n   * CSI Pm `  Character Position Absolute\n   *   [column] (default = [row,1]) (HPA).\n   * Currently same functionality as CHA.\n   *\n   * @vt: #Y CSI HPA   \"Horizontal Position Absolute\"  \"CSI Ps ` \" \"Same as CHA.\"\n   */\n  public charPosAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Pm a  Character Position Relative\n   *   [columns] (default = [row,col+1]) (HPR)\n   *\n   * @vt: #Y CSI HPR   \"Horizontal Position Relative\"  \"CSI Ps a\"  \"Same as CUF.\"\n   */\n  public hPositionRelative(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Pm d  Vertical Position Absolute (VPA)\n   *   [row] (default = [1,column])\n   *\n   * @vt: #Y CSI VPA   \"Vertical Position Absolute\"    \"CSI Ps d\"  \"Move cursor to `Ps`-th row (default=1).\"\n   */\n  public linePosAbsolute(params: IParams): boolean {\n    this._setCursor(this._activeBuffer.x, (params.params[0] || 1) - 1);\n    return true;\n  }\n\n  /**\n   * CSI Pm e  Vertical Position Relative (VPR)\n   *   [rows] (default = [row+1,column])\n   * reuse CSI Ps B ?\n   *\n   * @vt: #Y CSI VPR   \"Vertical Position Relative\"    \"CSI Ps e\"  \"Move cursor `Ps` times down (default=1).\"\n   */\n  public vPositionRelative(params: IParams): boolean {\n    this._moveCursor(0, params.params[0] || 1);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps f\n   *   Horizontal and Vertical Position [row;column] (default =\n   *   [1,1]) (HVP).\n   *   Same as CUP.\n   *\n   * @vt: #Y CSI HVP   \"Horizontal and Vertical Position\" \"CSI Ps ; Ps f\"  \"Same as CUP.\"\n   */\n  public hVPosition(params: IParams): boolean {\n    this.cursorPosition(params);\n    return true;\n  }\n\n  /**\n   * CSI Ps g  Tab Clear (TBC).\n   *     Ps = 0  -> Clear Current Column (default).\n   *     Ps = 3  -> Clear All.\n   * Potentially:\n   *   Ps = 2  -> Clear Stops on Line.\n   *   http://vt100.net/annarbor/aaa-ug/section6.html\n   *\n   * @vt: #Y CSI TBC   \"Tab Clear\" \"CSI Ps g\"  \"Clear tab stops at current position (0) or all (3) (default=0).\"\n   * Clearing tabstops off the active row (Ps = 2, VT100) is currently not supported.\n   */\n  public tabClear(params: IParams): boolean {\n    const param = params.params[0];\n    if (param === 0) {\n      delete this._activeBuffer.tabs[this._activeBuffer.x];\n    } else if (param === 3) {\n      this._activeBuffer.tabs = {};\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps I\n   *   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n   *\n   * @vt: #Y CSI CHT   \"Cursor Horizontal Tabulation\" \"CSI Ps I\" \"Move cursor `Ps` times tabs forward (default=1).\"\n   */\n  public cursorForwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.nextStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n   *\n   * @vt: #Y CSI CBT   \"Cursor Backward Tabulation\"  \"CSI Ps Z\"  \"Move cursor `Ps` tabs backward (default=1).\"\n   */\n  public cursorBackwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.prevStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps \" q  Select Character Protection Attribute (DECSCA).\n   *\n   * @vt: #Y CSI DECSCA   \"Select Character Protection Attribute\"  \"CSI Ps \" q\"  \"Whether DECSED and DECSEL can erase (0=default, 2) or not (1).\"\n   */\n  public selectProtected(params: IParams): boolean {\n    const p = params.params[0];\n    if (p === 1) this._curAttrData.bg |= BgFlags.PROTECTED;\n    if (p === 2 || p === 0) this._curAttrData.bg &= ~BgFlags.PROTECTED;\n    return true;\n  }\n\n\n  /**\n   * Helper method to erase cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal.\n   * @param y The row index relative to the viewport.\n   * @param start The start x index of the range to be erased.\n   * @param end The end x index of the range to be erased (exclusive).\n   * @param clearWrap clear the isWrapped flag\n   * @param respectProtect Whether to respect the protection attribute (DECSCA).\n   */\n  private _eraseInBufferLine(y: number, start: number, end: number, clearWrap: boolean = false, respectProtect: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.replaceCells(\n      start,\n      end,\n      this._activeBuffer.getNullCell(this._eraseAttrData()),\n      this._eraseAttrData(),\n      respectProtect\n    );\n    if (clearWrap) {\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * Helper method to reset cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal and the isWrapped property is set to false.\n   * @param y row index\n   */\n  private _resetBufferLine(y: number, respectProtect: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.fill(this._activeBuffer.getNullCell(this._eraseAttrData()), respectProtect);\n    this._bufferService.buffer.clearMarkers(this._activeBuffer.ybase + y);\n    line.isWrapped = false;\n  }\n\n  /**\n   * CSI Ps J  Erase in Display (ED).\n   *     Ps = 0  -> Erase Below (default).\n   *     Ps = 1  -> Erase Above.\n   *     Ps = 2  -> Erase All.\n   *     Ps = 3  -> Erase Saved Lines (xterm).\n   * CSI ? Ps J\n   *   Erase in Display (DECSED).\n   *     Ps = 0  -> Selective Erase Below (default).\n   *     Ps = 1  -> Selective Erase Above.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI ED  \"Erase In Display\"  \"CSI Ps J\"  \"Erase various parts of the viewport.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                       |\n   * | -- | ------------------------------------------------------------ |\n   * | 0  | Erase from the cursor through the end of the viewport.       |\n   * | 1  | Erase from the beginning of the viewport through the cursor. |\n   * | 2  | Erase complete viewport.                                     |\n   * | 3  | Erase scrollback.                                            |\n   *\n   * @vt: #Y CSI DECSED   \"Selective Erase In Display\"  \"CSI ? Ps J\"  \"Same as ED with respecting protection flag.\"\n   */\n  public eraseInDisplay(params: IParams, respectProtect: boolean = false): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    let j;\n    switch (params.params[0]) {\n      case 0:\n        j = this._activeBuffer.y;\n        this._dirtyRowTracker.markDirty(j);\n        this._eraseInBufferLine(j++, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, respectProtect);\n        for (; j < this._bufferService.rows; j++) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(j);\n        break;\n      case 1:\n        j = this._activeBuffer.y;\n        this._dirtyRowTracker.markDirty(j);\n        // Deleted front part of line and everything before. This line will no longer be wrapped.\n        this._eraseInBufferLine(j, 0, this._activeBuffer.x + 1, true, respectProtect);\n        if (this._activeBuffer.x + 1 >= this._bufferService.cols) {\n          // Deleted entire previous line. This next line can no longer be wrapped.\n          this._activeBuffer.lines.get(j + 1)!.isWrapped = false;\n        }\n        while (j--) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(0);\n        break;\n      case 2:\n        j = this._bufferService.rows;\n        this._dirtyRowTracker.markDirty(j - 1);\n        while (j--) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(0);\n        break;\n      case 3:\n        // Clear scrollback (everything not in viewport)\n        const scrollBackSize = this._activeBuffer.lines.length - this._bufferService.rows;\n        if (scrollBackSize > 0) {\n          this._activeBuffer.lines.trimStart(scrollBackSize);\n          this._activeBuffer.ybase = Math.max(this._activeBuffer.ybase - scrollBackSize, 0);\n          this._activeBuffer.ydisp = Math.max(this._activeBuffer.ydisp - scrollBackSize, 0);\n          // Force a scroll event to refresh viewport\n          this._onScroll.fire(0);\n        }\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps K  Erase in Line (EL).\n   *     Ps = 0  -> Erase to Right (default).\n   *     Ps = 1  -> Erase to Left.\n   *     Ps = 2  -> Erase All.\n   * CSI ? Ps K\n   *   Erase in Line (DECSEL).\n   *     Ps = 0  -> Selective Erase to Right (default).\n   *     Ps = 1  -> Selective Erase to Left.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI EL    \"Erase In Line\"  \"CSI Ps K\"  \"Erase various parts of the active row.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                   |\n   * | -- | -------------------------------------------------------- |\n   * | 0  | Erase from the cursor through the end of the row.        |\n   * | 1  | Erase from the beginning of the line through the cursor. |\n   * | 2  | Erase complete line.                                     |\n   *\n   * @vt: #Y CSI DECSEL   \"Selective Erase In Line\"  \"CSI ? Ps K\"  \"Same as EL with respecting protecting flag.\"\n   */\n  public eraseInLine(params: IParams, respectProtect: boolean = false): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    switch (params.params[0]) {\n      case 0:\n        this._eraseInBufferLine(this._activeBuffer.y, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, respectProtect);\n        break;\n      case 1:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._activeBuffer.x + 1, false, respectProtect);\n        break;\n      case 2:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._bufferService.cols, true, respectProtect);\n        break;\n    }\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps L\n   * Insert Ps Line(s) (default = 1) (IL).\n   *\n   * @vt: #Y CSI IL  \"Insert Line\"   \"CSI Ps L\"  \"Insert `Ps` blank lines at active row (default=1).\"\n   * For every inserted line at the scroll top one line at the scroll bottom gets removed.\n   * The cursor is set to the first column.\n   * IL has no effect if the cursor is outside the scroll margins.\n   */\n  public insertLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    const scrollBottomRowsOffset = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    const scrollBottomAbsolute = this._bufferService.rows - 1 + this._activeBuffer.ybase - scrollBottomRowsOffset + 1;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1L\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(scrollBottomAbsolute - 1, 1);\n      this._activeBuffer.lines.splice(row, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps M\n   * Delete Ps Line(s) (default = 1) (DL).\n   *\n   * @vt: #Y CSI DL  \"Delete Line\"   \"CSI Ps M\"  \"Delete `Ps` lines at active row (default=1).\"\n   * For every deleted line at the scroll top one blank line at the scroll bottom gets appended.\n   * The cursor is set to the first column.\n   * DL has no effect if the cursor is outside the scroll margins.\n   */\n  public deleteLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    let j: number;\n    j = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    j = this._bufferService.rows - 1 + this._activeBuffer.ybase - j;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1M\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(row, 1);\n      this._activeBuffer.lines.splice(j, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps @\n   * Insert Ps (Blank) Character(s) (default = 1) (ICH).\n   *\n   * @vt: #Y CSI ICH  \"Insert Characters\"   \"CSI Ps @\"  \"Insert `Ps` (blank) characters (default = 1).\"\n   * The ICH sequence inserts `Ps` blank characters. The cursor remains at the beginning of the blank characters.\n   * Text between the cursor and right margin moves to the right. Characters moved past the right margin are lost.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public insertChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.insertCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps P\n   * Delete Ps Character(s) (default = 1) (DCH).\n   *\n   * @vt: #Y CSI DCH   \"Delete Character\"  \"CSI Ps P\"  \"Delete `Ps` characters (default=1).\"\n   * As characters are deleted, the remaining characters between the cursor and right margin move to the left.\n   * Character attributes move with the characters. The terminal adds blank characters at the right margin.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public deleteChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.deleteCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n   *\n   * @vt: #Y CSI SU  \"Scroll Up\"   \"CSI Ps S\"  \"Scroll `Ps` lines up (default=1).\"\n   *\n   *\n   * FIXME: scrolled out lines at top = 1 should add to scrollback (xterm)\n   */\n  public scrollUp(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n   *\n   * @vt: #Y CSI SD  \"Scroll Down\"   \"CSI Ps T\"  \"Scroll `Ps` lines down (default=1).\"\n   */\n  public scrollDown(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 0, this._activeBuffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP @  Scroll left Ps columns (default = 1) (SL) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/00\n   * Parameter default value: Pn = 1\n   * SL causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the left; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always left shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SL  \"Scroll Left\" \"CSI Ps SP @\" \"Scroll viewport `Ps` times to the left.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the left.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollLeft(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP A  Scroll right Ps columns (default = 1) (SR) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/01\n   * Parameter default value: Pn = 1\n   * SR causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the right; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always right shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SR  \"Scroll Right\"  \"CSI Ps SP A\"   \"Scroll viewport `Ps` times to the right.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the right.\n   * Content at the right margin is lost.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollRight(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' }\n   * Insert Ps Column(s) (default = 1) (DECIC), VT420 and up.\n   *\n   * @vt: #Y CSI DECIC \"Insert Columns\"  \"CSI Ps ' }\"  \"Insert `Ps` columns at cursor position.\"\n   * DECIC inserts `Ps` times blank columns at the cursor position for all lines with the scroll margins,\n   * moving content to the right. Content at the right margin is lost.\n   * DECIC has no effect outside the scrolling margins.\n   */\n  public insertColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' ~\n   * Delete Ps Column(s) (default = 1) (DECDC), VT420 and up.\n   *\n   * @vt: #Y CSI DECDC \"Delete Columns\"  \"CSI Ps ' ~\"  \"Delete `Ps` columns at cursor position.\"\n   * DECDC deletes `Ps` times columns at the cursor position for all lines with the scroll margins,\n   * moving content to the left. Blank columns are added at the right margin.\n   * DECDC has no effect outside the scrolling margins.\n   */\n  public deleteColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps X\n   * Erase Ps Character(s) (default = 1) (ECH).\n   *\n   * @vt: #Y CSI ECH   \"Erase Character\"   \"CSI Ps X\"  \"Erase `Ps` characters from current cursor position to the right (default=1).\"\n   * ED erases `Ps` characters from current cursor position to the right.\n   * ED works inside or outside the scrolling margins.\n   */\n  public eraseChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.replaceCells(\n        this._activeBuffer.x,\n        this._activeBuffer.x + (params.params[0] || 1),\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n   * From ECMA 48 (@see http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-048.pdf)\n   *    Notation: (Pn)\n   *    Representation: CSI Pn 06/02\n   *    Parameter default value: Pn = 1\n   *    REP is used to indicate that the preceding character in the data stream,\n   *    if it is a graphic character (represented by one or more bit combinations) including SPACE,\n   *    is to be repeated n times, where n equals the value of Pn.\n   *    If the character preceding REP is a control function or part of a control function,\n   *    the effect of REP is not defined by this Standard.\n   *\n   * Since we propagate the terminal as xterm-256color we have to follow xterm's behavior:\n   *    - fullwidth + surrogate chars are ignored\n   *    - for combining chars only the base char gets repeated\n   *    - text attrs are applied normally\n   *    - wrap around is respected\n   *    - any valid sequence resets the carried forward char\n   *\n   * Note: To get reset on a valid sequence working correctly without much runtime penalty,\n   * the preceding codepoint is stored on the parser in `this.print` and reset during `parser.parse`.\n   *\n   * @vt: #Y CSI REP   \"Repeat Preceding Character\"    \"CSI Ps b\"  \"Repeat preceding character `Ps` times (default=1).\"\n   * REP repeats the previous character `Ps` times advancing the cursor, also wrapping if DECAWM is set.\n   * REP has no effect if the sequence does not follow a printable ASCII character\n   * (NOOP for any other sequence in between or NON ASCII characters).\n   */\n  public repeatPrecedingCharacter(params: IParams): boolean {\n    if (!this._parser.precedingCodepoint) {\n      return true;\n    }\n    // call print to insert the chars and handle correct wrapping\n    const length = params.params[0] || 1;\n    const data = new Uint32Array(length);\n    for (let i = 0; i < length; ++i) {\n      data[i] = this._parser.precedingCodepoint;\n    }\n    this.print(data, 0, data.length);\n    return true;\n  }\n\n  /**\n   * CSI Ps c  Send Device Attributes (Primary DA).\n   *     Ps = 0  or omitted -> request attributes from terminal.  The\n   *     response depends on the decTerminalID resource setting.\n   *     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n   *     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n   *     -> CSI ? 6 c  (``VT102'')\n   *     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n   *   The VT100-style response parameters do not mean anything by\n   *   themselves.  VT220 parameters do, telling the host what fea-\n   *   tures the terminal supports:\n   *     Ps = 1  -> 132-columns.\n   *     Ps = 2  -> Printer.\n   *     Ps = 6  -> Selective erase.\n   *     Ps = 8  -> User-defined keys.\n   *     Ps = 9  -> National replacement character sets.\n   *     Ps = 1 5  -> Technical characters.\n   *     Ps = 2 2  -> ANSI color, e.g., VT525.\n   *     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n   *\n   * @vt: #Y CSI DA1   \"Primary Device Attributes\"     \"CSI c\"  \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesPrimary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    if (this._is('xterm') || this._is('rxvt-unicode') || this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?1;2c');\n    } else if (this._is('linux')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?6c');\n    }\n    return true;\n  }\n\n  /**\n   * CSI > Ps c\n   *   Send Device Attributes (Secondary DA).\n   *     Ps = 0  or omitted -> request the terminal's identification\n   *     code.  The response depends on the decTerminalID resource set-\n   *     ting.  It should apply only to VT220 and up, but xterm extends\n   *     this to VT100.\n   *     -> CSI  > Pp ; Pv ; Pc c\n   *   where Pp denotes the terminal type\n   *     Pp = 0  -> ``VT100''.\n   *     Pp = 1  -> ``VT220''.\n   *   and Pv is the firmware version (for xterm, this was originally\n   *   the XFree86 patch number, starting with 95).  In a DEC termi-\n   *   nal, Pc indicates the ROM cartridge registration number and is\n   *   always zero.\n   * More information:\n   *   xterm/charproc.c - line 2012, for more information.\n   *   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n   *\n   * @vt: #Y CSI DA2   \"Secondary Device Attributes\"   \"CSI > c\" \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesSecondary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    // xterm and urxvt\n    // seem to spit this\n    // out around ~370 times (?).\n    if (this._is('xterm')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>0;276;0c');\n    } else if (this._is('rxvt-unicode')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>85;95;0c');\n    } else if (this._is('linux')) {\n      // not supported by linux console.\n      // linux console echoes parameters.\n      this._coreService.triggerDataEvent(params.params[0] + 'c');\n    } else if (this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>83;40003;0c');\n    }\n    return true;\n  }\n\n  /**\n   * Evaluate if the current terminal is the given argument.\n   * @param term The terminal name to evaluate\n   */\n  private _is(term: string): boolean {\n    return (this._optionsService.rawOptions.termName + '').indexOf(term) === 0;\n  }\n\n  /**\n   * CSI Pm h  Set Mode (SM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Insert Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Automatic Newline (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI SM    \"Set Mode\"  \"CSI Pm h\"  \"Set various terminal modes.\"\n   * Supported param values by SM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Insert Mode (IRM).                     | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Automatic Newline (LNM).               | #Y      |\n   */\n  public setMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = true;\n          break;\n        case 20:\n          this._optionsService.options.convertEol = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm h\n   *   DEC Private Mode Set (DECSET).\n   *     Ps = 1  -> Application Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate USASCII for character sets G0-G3\n   *     (DECANM), and set VT100 mode.\n   *     Ps = 3  -> 132 Column Mode (DECCOLM).\n   *     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n   *     Ps = 5  -> Reverse Video (DECSCNM).\n   *     Ps = 6  -> Origin Mode (DECOM).\n   *     Ps = 7  -> Wraparound Mode (DECAWM).\n   *     Ps = 8  -> Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n   *     tion Mouse Tracking.\n   *     Ps = 1 0  -> Show toolbar (rxvt).\n   *     Ps = 1 2  -> Start Blinking Cursor (att610).\n   *     Ps = 1 8  -> Print form feed (DECPFF).\n   *     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n   *     Ps = 2 5  -> Show Cursor (DECTCEM).\n   *     Ps = 3 0  -> Show scrollbar (rxvt).\n   *     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n   *     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n   *     Ps = 4 0  -> Allow 80 -> 132 Mode.\n   *     Ps = 4 1  -> more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n   *     RCM).\n   *     Ps = 4 4  -> Turn On Margin Bell.\n   *     Ps = 4 5  -> Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n   *     compile-time option.\n   *     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 6 6  -> Application keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n   *     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n   *     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n   *     (enables the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n   *     Lock keys.  (This enables the numLock resource).\n   *     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n   *     enables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n   *     key.\n   *     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n   *     enables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n   *     (This enables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n   *     Control-G is received.  (This enables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n   *     is received.  (enables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n   *     Screen Buffer, clearing it first.  (This may be disabled by\n   *     the titeInhibit resource).  This combines the effects of the 1\n   *     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n   *     applications rather than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Set Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Set HP function-key mode.\n   *     Ps = 1 0 5 3  -> Set SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n   *     Ps = 2 0 0 4  -> Set bracketed paste mode.\n   * Modes:\n   *   http: *vt100.net/docs/vt220-rm/chapter4.html\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECSET  \"DEC Private Set Mode\" \"CSI ? Pm h\"  \"Set various terminal attributes.\"\n   * Supported param values by DECSET:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | --------|\n   * | 1     | Application Cursor Keys (DECCKM).                       | #Y      |\n   * | 2     | Designate US-ASCII for character sets G0-G3 (DECANM).   | #Y      |\n   * | 3     | 132 Column Mode (DECCOLM).                              | #Y      |\n   * | 6     | Origin Mode (DECOM).                                    | #Y      |\n   * | 7     | Auto-wrap Mode (DECAWM).                                | #Y      |\n   * | 8     | Auto-repeat Keys (DECARM). Always on.                   | #N      |\n   * | 9     | X10 xterm mouse protocol.                               | #Y      |\n   * | 12    | Start Blinking Cursor.                                  | #Y      |\n   * | 25    | Show Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | Reverse wrap-around.                                    | #Y      |\n   * | 47    | Use Alternate Screen Buffer.                            | #Y      |\n   * | 66    | Application keypad (DECNKM).                            | #Y      |\n   * | 1000  | X11 xterm mouse protocol.                               | #Y      |\n   * | 1002  | Use Cell Motion Mouse Tracking.                         | #Y      |\n   * | 1003  | Use All Motion Mouse Tracking.                          | #Y      |\n   * | 1004  | Send FocusIn/FocusOut events                            | #Y      |\n   * | 1005  | Enable UTF-8 Mouse Mode.                                | #N      |\n   * | 1006  | Enable SGR Mouse Mode.                                  | #Y      |\n   * | 1015  | Enable urxvt Mouse Mode.                                | #N      |\n   * | 1016  | Enable SGR-Pixels Mouse Mode.                           | #Y      |\n   * | 1047  | Use Alternate Screen Buffer.                            | #Y      |\n   * | 1048  | Save cursor as in DECSC.                                | #Y      |\n   * | 1049  | Save cursor and switch to alternate buffer clearing it. | #P[Does not clear the alternate buffer.] |\n   * | 2004  | Set bracketed paste mode.                               | #Y      |\n   *\n   *\n   * FIXME: implement DECSCNM, 1049 should clear altbuffer\n   */\n  public setModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = true;\n          break;\n        case 2:\n          this._charsetService.setgCharset(0, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(1, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(2, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(3, DEFAULT_CHARSET);\n          // set VT100 mode here\n          break;\n        case 3:\n          /**\n           * DECCOLM - 132 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(132, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = true;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = true;\n          break;\n        case 12:\n          this._optionsService.options.cursorBlink = true;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = true;\n          break;\n        case 66:\n          this._logService.debug('Serial port requested application keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = true;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n          // no release, no motion, no wheel, no modifiers.\n          this._coreMouseService.activeProtocol = 'X10';\n          break;\n        case 1000: // vt200 mouse\n          // no motion.\n          this._coreMouseService.activeProtocol = 'VT200';\n          break;\n        case 1002: // button event mouse\n          this._coreMouseService.activeProtocol = 'DRAG';\n          break;\n        case 1003: // any event mouse\n          // any event - sends motion events,\n          // even if there is no button held down.\n          this._coreMouseService.activeProtocol = 'ANY';\n          break;\n        case 1004: // send focusin/focusout events\n          // focusin: ^[[I\n          // focusout: ^[[O\n          this._coreService.decPrivateModes.sendFocus = true;\n          this._onRequestSendFocus.fire();\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'SGR';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1015 not supported (see #2507)');\n          break;\n        case 1016: // sgr pixels mode mouse\n          this._coreMouseService.activeEncoding = 'SGR_PIXELS';\n          break;\n        case 25: // show cursor\n          this._coreService.isCursorHidden = false;\n          break;\n        case 1048: // alt screen cursor\n          this.saveCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          this.saveCursor();\n        // FALL-THROUGH\n        case 47: // alt screen buffer\n        case 1047: // alt screen buffer\n          this._bufferService.buffers.activateAltBuffer(this._eraseAttrData());\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI Pm l  Reset Mode (RM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Replace Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Normal Linefeed (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI RM    \"Reset Mode\"  \"CSI Pm l\"  \"Set various terminal attributes.\"\n   * Supported param values by RM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Replace Mode (IRM). (default)          | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Normal Linefeed (LNM).                 | #Y      |\n   *\n   *\n   * FIXME: why is LNM commented out?\n   */\n  public resetMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = false;\n          break;\n        case 20:\n          this._optionsService.options.convertEol = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm l\n   *   DEC Private Mode Reset (DECRST).\n   *     Ps = 1  -> Normal Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate VT52 mode (DECANM).\n   *     Ps = 3  -> 80 Column Mode (DECCOLM).\n   *     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n   *     Ps = 5  -> Normal Video (DECSCNM).\n   *     Ps = 6  -> Normal Cursor Mode (DECOM).\n   *     Ps = 7  -> No Wraparound Mode (DECAWM).\n   *     Ps = 8  -> No Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Don't send Mouse X & Y on button press.\n   *     Ps = 1 0  -> Hide toolbar (rxvt).\n   *     Ps = 1 2  -> Stop Blinking Cursor (att610).\n   *     Ps = 1 8  -> Don't print form feed (DECPFF).\n   *     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n   *     Ps = 2 5  -> Hide Cursor (DECTCEM).\n   *     Ps = 3 0  -> Don't show scrollbar (rxvt).\n   *     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n   *     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n   *     Ps = 4 1  -> No more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n   *     NRCM).\n   *     Ps = 4 4  -> Turn Off Margin Bell.\n   *     Ps = 4 5  -> No Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n   *     compile-time option).\n   *     Ps = 4 7  -> Use Normal Screen Buffer.\n   *     Ps = 6 6  -> Numeric keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n   *     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n   *     (rxvt).\n   *     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n   *     the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n   *     Lock keys.  (This disables the numLock resource).\n   *     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n   *     (This disables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n   *     Delete key.\n   *     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n   *     (This disables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n   *     (This disables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n   *     Control-G is received.  (This disables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n   *     G is received.  (This disables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n   *     first if in the Alternate Screen.  (This may be disabled by\n   *     the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n   *     as in DECRC.  (This may be disabled by the titeInhibit\n   *     resource).  This combines the effects of the 1 0 4 7  and 1 0\n   *     4 8  modes.  Use this with terminfo-based applications rather\n   *     than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Reset HP function-key mode.\n   *     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n   *     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECRST  \"DEC Private Reset Mode\" \"CSI ? Pm l\"  \"Reset various terminal attributes.\"\n   * Supported param values by DECRST:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | ------- |\n   * | 1     | Normal Cursor Keys (DECCKM).                            | #Y      |\n   * | 2     | Designate VT52 mode (DECANM).                           | #N      |\n   * | 3     | 80 Column Mode (DECCOLM).                               | #B[Switches to old column width instead of 80.] |\n   * | 6     | Normal Cursor Mode (DECOM).                             | #Y      |\n   * | 7     | No Wraparound Mode (DECAWM).                            | #Y      |\n   * | 8     | No Auto-repeat Keys (DECARM).                           | #N      |\n   * | 9     | Don't send Mouse X & Y on button press.                 | #Y      |\n   * | 12    | Stop Blinking Cursor.                                   | #Y      |\n   * | 25    | Hide Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | No reverse wrap-around.                                 | #Y      |\n   * | 47    | Use Normal Screen Buffer.                               | #Y      |\n   * | 66    | Numeric keypad (DECNKM).                                | #Y      |\n   * | 1000  | Don't send Mouse reports.                               | #Y      |\n   * | 1002  | Don't use Cell Motion Mouse Tracking.                   | #Y      |\n   * | 1003  | Don't use All Motion Mouse Tracking.                    | #Y      |\n   * | 1004  | Don't send FocusIn/FocusOut events.                     | #Y      |\n   * | 1005  | Disable UTF-8 Mouse Mode.                               | #N      |\n   * | 1006  | Disable SGR Mouse Mode.                                 | #Y      |\n   * | 1015  | Disable urxvt Mouse Mode.                               | #N      |\n   * | 1016  | Disable SGR-Pixels Mouse Mode.                          | #Y      |\n   * | 1047  | Use Normal Screen Buffer (clearing screen if in alt).   | #Y      |\n   * | 1048  | Restore cursor as in DECRC.                             | #Y      |\n   * | 1049  | Use Normal Screen Buffer and restore cursor.            | #Y      |\n   * | 2004  | Reset bracketed paste mode.                             | #Y      |\n   *\n   *\n   * FIXME: DECCOLM is currently broken (already fixed in window options PR)\n   */\n  public resetModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = false;\n          break;\n        case 3:\n          /**\n           * DECCOLM - 80 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(80, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = false;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = false;\n          break;\n        case 12:\n          this._optionsService.options.cursorBlink = false;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = false;\n          break;\n        case 66:\n          this._logService.debug('Switching back to normal keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = false;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n        case 1000: // vt200 mouse\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          this._coreMouseService.activeProtocol = 'NONE';\n          break;\n        case 1004: // send focusin/focusout events\n          this._coreService.decPrivateModes.sendFocus = false;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1015 not supported (see #2507)');\n          break;\n        case 1016: // sgr pixels mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 25: // hide cursor\n          this._coreService.isCursorHidden = true;\n          break;\n        case 1048: // alt screen cursor\n          this.restoreCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n        // FALL-THROUGH\n        case 47: // normal screen buffer\n        case 1047: // normal screen buffer - clearing it first\n          // Ensure the selection manager has the correct buffer\n          this._bufferService.buffers.activateNormalBuffer();\n          if (params.params[i] === 1049) {\n            this.restoreCursor();\n          }\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps $ p Request ANSI Mode (DECRQM).\n   *\n   * Reports CSI Ps; Pm $ y (DECRPM), where Ps is the mode number as in SM/RM,\n   * and Pm is the mode value:\n   *    0 - not recognized\n   *    1 - set\n   *    2 - reset\n   *    3 - permanently set\n   *    4 - permanently reset\n   *\n   * @vt: #Y  CSI   DECRQM  \"Request Mode\"  \"CSI Ps $p\"  \"Request mode state.\"\n   * Returns a report as `CSI Ps; Pm $ y` (DECRPM), where `Ps` is the mode number as in SM/RM\n   * or DECSET/DECRST, and `Pm` is the mode value:\n   * - 0: not recognized\n   * - 1: set\n   * - 2: reset\n   * - 3: permanently set\n   * - 4: permanently reset\n   *\n   * For modes not understood xterm.js always returns `notRecognized`. In general this means,\n   * that a certain operation mode is not implemented and cannot be used.\n   *\n   * Modes changing the active terminal buffer (47, 1047, 1049) are not subqueried\n   * and only report, whether the alternate buffer is set.\n   *\n   * Mouse encodings and mouse protocols are handled mutual exclusive,\n   * thus only one of each of those can be set at a given time.\n   *\n   * There is a chance, that some mode reports are not fully in line with xterm.js' behavior,\n   * e.g. if the default implementation already exposes a certain behavior. If you find\n   * discrepancies in the mode reports, please file a bug.\n   */\n  public requestMode(params: IParams, ansi: boolean): boolean {\n    // return value as in DECRPM\n    const enum V {\n      NOT_RECOGNIZED = 0,\n      SET = 1,\n      RESET = 2,\n      PERMANENTLY_SET = 3,\n      PERMANENTLY_RESET = 4\n    }\n\n    // access helpers\n    const dm = this._coreService.decPrivateModes;\n    const { activeProtocol: mouseProtocol, activeEncoding: mouseEncoding } = this._coreMouseService;\n    const cs = this._coreService;\n    const { buffers, cols } = this._bufferService;\n    const { active, alt } = buffers;\n    const opts = this._optionsService.rawOptions;\n\n    const f = (m: number, v: V): boolean => {\n      cs.triggerDataEvent(`${C0.ESC}[${ansi ? '' : '?'}${m};${v}$y`);\n      return true;\n    };\n    const b2v = (value: boolean): V => value ? V.SET : V.RESET;\n\n    const p = params.params[0];\n\n    if (ansi) {\n      if (p === 2) return f(p, V.PERMANENTLY_SET);\n      if (p === 4) return f(p, b2v(cs.modes.insertMode));\n      if (p === 12) return f(p, V.PERMANENTLY_RESET);\n      if (p === 20) return f(p, b2v(opts.convertEol));\n      return f(p, V.NOT_RECOGNIZED);\n    }\n\n    if (p === 1) return f(p, b2v(dm.applicationCursorKeys));\n    if (p === 3) return f(p, opts.windowOptions.setWinLines ? (cols === 80 ? V.RESET : cols === 132 ? V.SET : V.NOT_RECOGNIZED) : V.NOT_RECOGNIZED);\n    if (p === 6) return f(p, b2v(dm.origin));\n    if (p === 7) return f(p, b2v(dm.wraparound));\n    if (p === 8) return f(p, V.PERMANENTLY_SET);\n    if (p === 9) return f(p, b2v(mouseProtocol === 'X10'));\n    if (p === 12) return f(p, b2v(opts.cursorBlink));\n    if (p === 25) return f(p, b2v(!cs.isCursorHidden));\n    if (p === 45) return f(p, b2v(dm.reverseWraparound));\n    if (p === 66) return f(p, b2v(dm.applicationKeypad));\n    if (p === 1000) return f(p, b2v(mouseProtocol === 'VT200'));\n    if (p === 1002) return f(p, b2v(mouseProtocol === 'DRAG'));\n    if (p === 1003) return f(p, b2v(mouseProtocol === 'ANY'));\n    if (p === 1004) return f(p, b2v(dm.sendFocus));\n    if (p === 1005) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1006) return f(p, b2v(mouseEncoding === 'SGR'));\n    if (p === 1015) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1016) return f(p, b2v(mouseEncoding === 'SGR_PIXELS'));\n    if (p === 1048) return f(p, V.SET); // xterm always returns SET here\n    if (p === 47 || p === 1047 || p === 1049) return f(p, b2v(active === alt));\n    if (p === 2004) return f(p, b2v(dm.bracketedPasteMode));\n    return f(p, V.NOT_RECOGNIZED);\n  }\n\n  /**\n   * Helper to write color information packed with color mode.\n   */\n  private _updateAttrColor(color: number, mode: number, c1: number, c2: number, c3: number): number {\n    if (mode === 2) {\n      color |= Attributes.CM_RGB;\n      color &= ~Attributes.RGB_MASK;\n      color |= AttributeData.fromColorRGB([c1, c2, c3]);\n    } else if (mode === 5) {\n      color &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n      color |= Attributes.CM_P256 | (c1 & 0xff);\n    }\n    return color;\n  }\n\n  /**\n   * Helper to extract and apply color params/subparams.\n   * Returns advance for params index.\n   */\n  private _extractColor(params: IParams, pos: number, attr: IAttributeData): number {\n    // normalize params\n    // meaning: [target, CM, ign, val, val, val]\n    // RGB    : [ 38/48,  2, ign,   r,   g,   b]\n    // P256   : [ 38/48,  5, ign,   v, ign, ign]\n    const accu = [0, 0, -1, 0, 0, 0];\n\n    // alignment placeholder for non color space sequences\n    let cSpace = 0;\n\n    // return advance we took in params\n    let advance = 0;\n\n    do {\n      accu[advance + cSpace] = params.params[pos + advance];\n      if (params.hasSubParams(pos + advance)) {\n        const subparams = params.getSubParams(pos + advance)!;\n        let i = 0;\n        do {\n          if (accu[1] === 5) {\n            cSpace = 1;\n          }\n          accu[advance + i + 1 + cSpace] = subparams[i];\n        } while (++i < subparams.length && i + advance + 1 + cSpace < accu.length);\n        break;\n      }\n      // exit early if can decide color mode with semicolons\n      if ((accu[1] === 5 && advance + cSpace >= 2)\n        || (accu[1] === 2 && advance + cSpace >= 5)) {\n        break;\n      }\n      // offset colorSpace slot for semicolon mode\n      if (accu[1]) {\n        cSpace = 1;\n      }\n    } while (++advance + pos < params.length && advance + cSpace < accu.length);\n\n    // set default values to 0\n    for (let i = 2; i < accu.length; ++i) {\n      if (accu[i] === -1) {\n        accu[i] = 0;\n      }\n    }\n\n    // apply colors\n    switch (accu[0]) {\n      case 38:\n        attr.fg = this._updateAttrColor(attr.fg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 48:\n        attr.bg = this._updateAttrColor(attr.bg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 58:\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = this._updateAttrColor(attr.extended.underlineColor, accu[1], accu[3], accu[4], accu[5]);\n    }\n\n    return advance;\n  }\n\n  /**\n   * SGR 4 subparams:\n   *    4:0   -   equal to SGR 24 (turn off all underline)\n   *    4:1   -   equal to SGR 4 (single underline)\n   *    4:2   -   equal to SGR 21 (double underline)\n   *    4:3   -   curly underline\n   *    4:4   -   dotted underline\n   *    4:5   -   dashed underline\n   */\n  private _processUnderline(style: number, attr: IAttributeData): void {\n    // treat extended attrs as immutable, thus always clone from old one\n    // this is needed since the buffer only holds references to it\n    attr.extended = attr.extended.clone();\n\n    // default to 1 == single underline\n    if (!~style || style > 5) {\n      style = 1;\n    }\n    attr.extended.underlineStyle = style;\n    attr.fg |= FgFlags.UNDERLINE;\n\n    // 0 deactivates underline\n    if (style === 0) {\n      attr.fg &= ~FgFlags.UNDERLINE;\n    }\n\n    // update HAS_EXTENDED in BG\n    attr.updateExtended();\n  }\n\n  private _processSGR0(attr: IAttributeData): void {\n    attr.fg = DEFAULT_ATTR_DATA.fg;\n    attr.bg = DEFAULT_ATTR_DATA.bg;\n    attr.extended = attr.extended.clone();\n    // Reset underline style and color. Note that we don't want to reset other\n    // fields such as the url id.\n    attr.extended.underlineStyle = UnderlineStyle.NONE;\n    attr.extended.underlineColor &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    attr.updateExtended();\n  }\n\n  /**\n   * CSI Pm m  Character Attributes (SGR).\n   *\n   * @vt: #P[See below for supported attributes.]    CSI SGR   \"Select Graphic Rendition\"  \"CSI Pm m\"  \"Set/Reset various text attributes.\"\n   * SGR selects one or more character attributes at the same time. Multiple params (up to 32)\n   * are applied in order from left to right. The changed attributes are applied to all new\n   * characters received. If you move characters in the viewport by scrolling or any other means,\n   * then the attributes move with the characters.\n   *\n   * Supported param values by SGR:\n   *\n   * | Param     | Meaning                                                  | Support |\n   * | --------- | -------------------------------------------------------- | ------- |\n   * | 0         | Normal (default). Resets any other preceding SGR.        | #Y      |\n   * | 1         | Bold. (also see `options.drawBoldTextInBrightColors`)    | #Y      |\n   * | 2         | Faint, decreased intensity.                              | #Y      |\n   * | 3         | Italic.                                                  | #Y      |\n   * | 4         | Underlined (see below for style support).                | #Y      |\n   * | 5         | Slowly blinking.                                         | #N      |\n   * | 6         | Rapidly blinking.                                        | #N      |\n   * | 7         | Inverse. Flips foreground and background color.          | #Y      |\n   * | 8         | Invisible (hidden).                                      | #Y      |\n   * | 9         | Crossed-out characters (strikethrough).                  | #Y      |\n   * | 21        | Doubly underlined.                                       | #Y      |\n   * | 22        | Normal (neither bold nor faint).                         | #Y      |\n   * | 23        | No italic.                                               | #Y      |\n   * | 24        | Not underlined.                                          | #Y      |\n   * | 25        | Steady (not blinking).                                   | #Y      |\n   * | 27        | Positive (not inverse).                                  | #Y      |\n   * | 28        | Visible (not hidden).                                    | #Y      |\n   * | 29        | Not Crossed-out (strikethrough).                         | #Y      |\n   * | 30        | Foreground color: Black.                                 | #Y      |\n   * | 31        | Foreground color: Red.                                   | #Y      |\n   * | 32        | Foreground color: Green.                                 | #Y      |\n   * | 33        | Foreground color: Yellow.                                | #Y      |\n   * | 34        | Foreground color: Blue.                                  | #Y      |\n   * | 35        | Foreground color: Magenta.                               | #Y      |\n   * | 36        | Foreground color: Cyan.                                  | #Y      |\n   * | 37        | Foreground color: White.                                 | #Y      |\n   * | 38        | Foreground color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 39        | Foreground color: Default (original).                    | #Y      |\n   * | 40        | Background color: Black.                                 | #Y      |\n   * | 41        | Background color: Red.                                   | #Y      |\n   * | 42        | Background color: Green.                                 | #Y      |\n   * | 43        | Background color: Yellow.                                | #Y      |\n   * | 44        | Background color: Blue.                                  | #Y      |\n   * | 45        | Background color: Magenta.                               | #Y      |\n   * | 46        | Background color: Cyan.                                  | #Y      |\n   * | 47        | Background color: White.                                 | #Y      |\n   * | 48        | Background color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 49        | Background color: Default (original).                    | #Y      |\n   * | 58        | Underline color: Extended color.                         | #P[Support for RGB and indexed colors, see below.] |\n   * | 90 - 97   | Bright foreground color (analogous to 30 - 37).          | #Y      |\n   * | 100 - 107 | Bright background color (analogous to 40 - 47).          | #Y      |\n   *\n   * Underline supports subparams to denote the style in the form `4 : x`:\n   *\n   * | x      | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | No underline. Same as `SGR 24 m`.                             | #Y      |\n   * | 1      | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   * | 2      | Double underline.                                             | #Y      |\n   * | 3      | Curly underline.                                              | #Y      |\n   * | 4      | Dotted underline.                                             | #Y      |\n   * | 5      | Dashed underline.                                             | #Y      |\n   * | other  | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   *\n   * Extended colors are supported for foreground (Ps=38), background (Ps=48) and underline (Ps=58) as follows:\n   *\n   * | Ps + 1 | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | Implementation defined.                                       | #N      |\n   * | 1      | Transparent.                                                  | #N      |\n   * | 2      | RGB color as `Ps ; 2 ; R ; G ; B` or `Ps : 2 : : R : G : B`.  | #Y      |\n   * | 3      | CMY color.                                                    | #N      |\n   * | 4      | CMYK color.                                                   | #N      |\n   * | 5      | Indexed (256 colors) as `Ps ; 5 ; INDEX` or `Ps : 5 : INDEX`. | #Y      |\n   *\n   *\n   * FIXME: blinking is implemented in attrs, but not working in renderers?\n   * FIXME: remove dead branch for p=100\n   */\n  public charAttributes(params: IParams): boolean {\n    // Optimize a single SGR0.\n    if (params.length === 1 && params.params[0] === 0) {\n      this._processSGR0(this._curAttrData);\n      return true;\n    }\n\n    const l = params.length;\n    let p;\n    const attr = this._curAttrData;\n\n    for (let i = 0; i < l; i++) {\n      p = params.params[i];\n      if (p >= 30 && p <= 37) {\n        // fg color 8\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 30);\n      } else if (p >= 40 && p <= 47) {\n        // bg color 8\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 40);\n      } else if (p >= 90 && p <= 97) {\n        // fg color 16\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 90) | 8;\n      } else if (p >= 100 && p <= 107) {\n        // bg color 16\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 100) | 8;\n      } else if (p === 0) {\n        // default\n        this._processSGR0(attr);\n      } else if (p === 1) {\n        // bold text\n        attr.fg |= FgFlags.BOLD;\n      } else if (p === 3) {\n        // italic text\n        attr.bg |= BgFlags.ITALIC;\n      } else if (p === 4) {\n        // underlined text\n        attr.fg |= FgFlags.UNDERLINE;\n        this._processUnderline(params.hasSubParams(i) ? params.getSubParams(i)![0] : UnderlineStyle.SINGLE, attr);\n      } else if (p === 5) {\n        // blink\n        attr.fg |= FgFlags.BLINK;\n      } else if (p === 7) {\n        // inverse and positive\n        // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n        attr.fg |= FgFlags.INVERSE;\n      } else if (p === 8) {\n        // invisible\n        attr.fg |= FgFlags.INVISIBLE;\n      } else if (p === 9) {\n        // strikethrough\n        attr.fg |= FgFlags.STRIKETHROUGH;\n      } else if (p === 2) {\n        // dimmed text\n        attr.bg |= BgFlags.DIM;\n      } else if (p === 21) {\n        // double underline\n        this._processUnderline(UnderlineStyle.DOUBLE, attr);\n      } else if (p === 22) {\n        // not bold nor faint\n        attr.fg &= ~FgFlags.BOLD;\n        attr.bg &= ~BgFlags.DIM;\n      } else if (p === 23) {\n        // not italic\n        attr.bg &= ~BgFlags.ITALIC;\n      } else if (p === 24) {\n        // not underlined\n        attr.fg &= ~FgFlags.UNDERLINE;\n        this._processUnderline(UnderlineStyle.NONE, attr);\n      } else if (p === 25) {\n        // not blink\n        attr.fg &= ~FgFlags.BLINK;\n      } else if (p === 27) {\n        // not inverse\n        attr.fg &= ~FgFlags.INVERSE;\n      } else if (p === 28) {\n        // not invisible\n        attr.fg &= ~FgFlags.INVISIBLE;\n      } else if (p === 29) {\n        // not strikethrough\n        attr.fg &= ~FgFlags.STRIKETHROUGH;\n      } else if (p === 39) {\n        // reset fg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 49) {\n        // reset bg\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 38 || p === 48 || p === 58) {\n        // fg color 256 and RGB\n        i += this._extractColor(params, i, attr);\n      } else if (p === 59) {\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = -1;\n        attr.updateExtended();\n      } else if (p === 100) { // FIXME: dead branch, p=100 already handled above!\n        // reset fg/bg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else {\n        this._logService.debug('Unknown SGR attribute: %d.', p);\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps n  Device Status Report (DSR).\n   *     Ps = 5  -> Status Report.  Result (``OK'') is\n   *   CSI 0 n\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n   *   Result is\n   *   CSI r ; c R\n   * CSI ? Ps n\n   *   Device Status Report (DSR, DEC-specific).\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n   *     ? r ; c R (assumes page is zero).\n   *     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n   *     or CSI ? 1 1  n  (not ready).\n   *     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n   *     or CSI ? 2 1  n  (locked).\n   *     Ps = 2 6  -> Report Keyboard status as\n   *   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n   *   The last two parameters apply to VT400 & up, and denote key-\n   *   board ready and LK01 respectively.\n   *     Ps = 5 3  -> Report Locator status as\n   *   CSI ? 5 3  n  Locator available, if compiled-in, or\n   *   CSI ? 5 0  n  No Locator, if not.\n   *\n   * @vt: #Y CSI DSR   \"Device Status Report\"  \"CSI Ps n\"  \"Request cursor position (CPR) with `Ps` = 6.\"\n   */\n  public deviceStatus(params: IParams): boolean {\n    switch (params.params[0]) {\n      case 5:\n        // status report\n        this._coreService.triggerDataEvent(`${C0.ESC}[0n`);\n        break;\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[${y};${x}R`);\n        break;\n    }\n    return true;\n  }\n\n  // @vt: #P[Only CPR is supported.]  CSI DECDSR  \"DEC Device Status Report\"  \"CSI ? Ps n\"  \"Only CPR is supported (same as DSR).\"\n  public deviceStatusPrivate(params: IParams): boolean {\n    // modern xterm doesnt seem to\n    // respond to any of these except ?6, 6, and 5\n    switch (params.params[0]) {\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[?${y};${x}R`);\n        break;\n      case 15:\n        // no printer\n        // this.handler(C0.ESC + '[?11n');\n        break;\n      case 25:\n        // dont support user defined keys\n        // this.handler(C0.ESC + '[?21n');\n        break;\n      case 26:\n        // north american keyboard\n        // this.handler(C0.ESC + '[?27;1;0;0n');\n        break;\n      case 53:\n        // no dec locator/mouse\n        // this.handler(C0.ESC + '[?50n');\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI ! p   Soft terminal reset (DECSTR).\n   * http://vt100.net/docs/vt220-rm/table4-10.html\n   *\n   * @vt: #Y CSI DECSTR  \"Soft Terminal Reset\"   \"CSI ! p\"   \"Reset several terminal attributes to initial state.\"\n   * There are two terminal reset sequences - RIS and DECSTR. While RIS performs almost a full terminal bootstrap,\n   * DECSTR only resets certain attributes. For most needs DECSTR should be sufficient.\n   *\n   * The following terminal attributes are reset to default values:\n   * - IRM is reset (dafault = false)\n   * - scroll margins are reset (default = viewport size)\n   * - erase attributes are reset to default\n   * - charsets are reset\n   * - DECSC data is reset to initial values\n   * - DECOM is reset to absolute mode\n   *\n   *\n   * FIXME: there are several more attributes missing (see VT520 manual)\n   */\n  public softReset(params: IParams): boolean {\n    this._coreService.isCursorHidden = false;\n    this._onRequestSyncScrollBar.fire();\n    this._activeBuffer.scrollTop = 0;\n    this._activeBuffer.scrollBottom = this._bufferService.rows - 1;\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._coreService.reset();\n    this._charsetService.reset();\n\n    // reset DECSC data\n    this._activeBuffer.savedX = 0;\n    this._activeBuffer.savedY = this._activeBuffer.ybase;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n\n    // reset DECOM\n    this._coreService.decPrivateModes.origin = false;\n    return true;\n  }\n\n  /**\n   * CSI Ps SP q  Set cursor style (DECSCUSR, VT520).\n   *   Ps = 0  -> blinking block.\n   *   Ps = 1  -> blinking block (default).\n   *   Ps = 2  -> steady block.\n   *   Ps = 3  -> blinking underline.\n   *   Ps = 4  -> steady underline.\n   *   Ps = 5  -> blinking bar (xterm).\n   *   Ps = 6  -> steady bar (xterm).\n   *\n   * @vt: #Y CSI DECSCUSR  \"Set Cursor Style\"  \"CSI Ps SP q\"   \"Set cursor style.\"\n   * Supported cursor styles:\n   *  - empty, 0 or 1: steady block\n   *  - 2: blink block\n   *  - 3: steady underline\n   *  - 4: blink underline\n   *  - 5: steady bar\n   *  - 6: blink bar\n   */\n  public setCursorStyle(params: IParams): boolean {\n    const param = params.params[0] || 1;\n    switch (param) {\n      case 1:\n      case 2:\n        this._optionsService.options.cursorStyle = 'block';\n        break;\n      case 3:\n      case 4:\n        this._optionsService.options.cursorStyle = 'underline';\n        break;\n      case 5:\n      case 6:\n        this._optionsService.options.cursorStyle = 'bar';\n        break;\n    }\n    const isBlinking = param % 2 === 1;\n    this._optionsService.options.cursorBlink = isBlinking;\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps r\n   *   Set Scrolling Region [top;bottom] (default = full size of win-\n   *   dow) (DECSTBM).\n   *\n   * @vt: #Y CSI DECSTBM \"Set Top and Bottom Margin\" \"CSI Ps ; Ps r\" \"Set top and bottom margins of the viewport [top;bottom] (default = viewport size).\"\n   */\n  public setScrollRegion(params: IParams): boolean {\n    const top = params.params[0] || 1;\n    let bottom: number;\n\n    if (params.length < 2 || (bottom = params.params[1]) > this._bufferService.rows || bottom === 0) {\n      bottom = this._bufferService.rows;\n    }\n\n    if (bottom > top) {\n      this._activeBuffer.scrollTop = top - 1;\n      this._activeBuffer.scrollBottom = bottom - 1;\n      this._setCursor(0, 0);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps ; Ps t - Various window manipulations and reports (xterm)\n   *\n   * Note: Only those listed below are supported. All others are left to integrators and\n   * need special treatment based on the embedding environment.\n   *\n   *    Ps = 1 4                                                          supported\n   *      Report xterm text area size in pixels.\n   *      Result is CSI 4 ; height ; width t\n   *    Ps = 14 ; 2                                                       not implemented\n   *    Ps = 16                                                           supported\n   *      Report xterm character cell size in pixels.\n   *      Result is CSI 6 ; height ; width t\n   *    Ps = 18                                                           supported\n   *      Report the size of the text area in characters.\n   *      Result is CSI 8 ; height ; width t\n   *    Ps = 20                                                           supported\n   *      Report xterm window's icon label.\n   *      Result is OSC L label ST\n   *    Ps = 21                                                           supported\n   *      Report xterm window's title.\n   *      Result is OSC l label ST\n   *    Ps = 22 ; 0  -> Save xterm icon and window title on stack.        supported\n   *    Ps = 22 ; 1  -> Save xterm icon title on stack.                   supported\n   *    Ps = 22 ; 2  -> Save xterm window title on stack.                 supported\n   *    Ps = 23 ; 0  -> Restore xterm icon and window title from stack.   supported\n   *    Ps = 23 ; 1  -> Restore xterm icon title from stack.              supported\n   *    Ps = 23 ; 2  -> Restore xterm window title from stack.            supported\n   *    Ps >= 24                                                          not implemented\n   */\n  public windowOptions(params: IParams): boolean {\n    if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n      return true;\n    }\n    const second = (params.length > 1) ? params.params[1] : 0;\n    switch (params.params[0]) {\n      case 14:  // GetWinSizePixels, returns CSI 4 ; height ; width t\n        if (second !== 2) {\n          this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_WIN_SIZE_PIXELS);\n        }\n        break;\n      case 16:  // GetCellSizePixels, returns CSI 6 ; height ; width t\n        this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_CELL_SIZE_PIXELS);\n        break;\n      case 18:  // GetWinSizeChars, returns CSI 8 ; height ; width t\n        if (this._bufferService) {\n          this._coreService.triggerDataEvent(`${C0.ESC}[8;${this._bufferService.rows};${this._bufferService.cols}t`);\n        }\n        break;\n      case 22:  // PushTitle\n        if (second === 0 || second === 2) {\n          this._windowTitleStack.push(this._windowTitle);\n          if (this._windowTitleStack.length > STACK_LIMIT) {\n            this._windowTitleStack.shift();\n          }\n        }\n        if (second === 0 || second === 1) {\n          this._iconNameStack.push(this._iconName);\n          if (this._iconNameStack.length > STACK_LIMIT) {\n            this._iconNameStack.shift();\n          }\n        }\n        break;\n      case 23:  // PopTitle\n        if (second === 0 || second === 2) {\n          if (this._windowTitleStack.length) {\n            this.setTitle(this._windowTitleStack.pop()!);\n          }\n        }\n        if (second === 0 || second === 1) {\n          if (this._iconNameStack.length) {\n            this.setIconName(this._iconNameStack.pop()!);\n          }\n        }\n        break;\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI s\n   * ESC 7\n   *   Save cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCOSC   \"Save Cursor\"   \"CSI s\"   \"Save cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  SC   \"Save Cursor\"   \"ESC 7\"   \"Save cursor position, charmap and text attributes.\"\n   */\n  public saveCursor(params?: IParams): boolean {\n    this._activeBuffer.savedX = this._activeBuffer.x;\n    this._activeBuffer.savedY = this._activeBuffer.ybase + this._activeBuffer.y;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n    return true;\n  }\n\n\n  /**\n   * CSI u\n   * ESC 8\n   *   Restore cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCORC \"Restore Cursor\"  \"CSI u\"   \"Restore cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  RC \"Restore Cursor\"  \"ESC 8\"   \"Restore cursor position, charmap and text attributes.\"\n   */\n  public restoreCursor(params?: IParams): boolean {\n    this._activeBuffer.x = this._activeBuffer.savedX || 0;\n    this._activeBuffer.y = Math.max(this._activeBuffer.savedY - this._activeBuffer.ybase, 0);\n    this._curAttrData.fg = this._activeBuffer.savedCurAttrData.fg;\n    this._curAttrData.bg = this._activeBuffer.savedCurAttrData.bg;\n    this._charsetService.charset = (this as any)._savedCharset;\n    if (this._activeBuffer.savedCharset) {\n      this._charsetService.charset = this._activeBuffer.savedCharset;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n\n  /**\n   * OSC 2; <data> ST (set window title)\n   *   Proxy to set window title.\n   *\n   * @vt: #P[Icon name is not exposed.]   OSC    0   \"Set Windows Title and Icon Name\"  \"OSC 0 ; Pt BEL\"  \"Set window title and icon name.\"\n   * Icon name is not supported. For Window Title see below.\n   *\n   * @vt: #Y     OSC    2   \"Set Windows Title\"  \"OSC 2 ; Pt BEL\"  \"Set window title.\"\n   * xterm.js does not manipulate the title directly, instead exposes changes via the event `Terminal.onTitleChange`.\n   */\n  public setTitle(data: string): boolean {\n    this._windowTitle = data;\n    this._onTitleChange.fire(data);\n    return true;\n  }\n\n  /**\n   * OSC 1; <data> ST\n   * Note: Icon name is not exposed.\n   */\n  public setIconName(data: string): boolean {\n    this._iconName = data;\n    return true;\n  }\n\n  /**\n   * OSC 4; <num> ; <text> ST (set ANSI color <num> to <text>)\n   *\n   * @vt: #Y    OSC    4    \"Set ANSI color\"   \"OSC 4 ; c ; spec BEL\" \"Change color number `c` to the color specified by `spec`.\"\n   * `c` is the color index between 0 and 255. The color format of `spec` is derived from `XParseColor` (see OSC 10 for supported formats).\n   * There may be multipe `c ; spec` pairs present in the same instruction.\n   * If `spec` contains `?` the terminal returns a sequence with the currently set color.\n   */\n  public setOrReportIndexedColor(data: string): boolean {\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    while (slots.length > 1) {\n      const idx = slots.shift() as string;\n      const spec = slots.shift() as string;\n      if (/^\\d+$/.exec(idx)) {\n        const index = parseInt(idx);\n        if (0 <= index && index < 256) {\n          if (spec === '?') {\n            event.push({ type: ColorRequestType.REPORT, index });\n          } else {\n            const color = parseColor(spec);\n            if (color) {\n              event.push({ type: ColorRequestType.SET, index, color });\n            }\n          }\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 8 ; <params> ; <uri> ST - create hyperlink\n   * OSC 8 ; ; ST - finish hyperlink\n   *\n   * Test case:\n   *\n   * ```sh\n   * printf '\\e]8;;http://example.com\\e\\\\This is a link\\e]8;;\\e\\\\\\n'\n   * ```\n   *\n   * @vt: #Y    OSC    8    \"Create hyperlink\"   \"OSC 8 ; params ; uri BEL\" \"Create a hyperlink to `uri` using `params`.\"\n   * `uri` is a hyperlink starting with `http://`, `https://`, `ftp://`, `file://` or `mailto://`. `params` is an\n   * optional list of key=value assignments, separated by the : character. Example: `id=xyz123:foo=bar:baz=quux`.\n   * Currently only the id key is defined. Cells that share the same ID and URI share hover feedback.\n   * Use `OSC 8 ; ; BEL` to finish the current hyperlink.\n   */\n  public setHyperlink(data: string): boolean {\n    const args = data.split(';');\n    if (args.length < 2) {\n      return false;\n    }\n    if (args[1]) {\n      return this._createHyperlink(args[0], args[1]);\n    }\n    if (args[0]) {\n      return false;\n    }\n    return this._finishHyperlink();\n  }\n\n  private _createHyperlink(params: string, uri: string): boolean {\n    // It's legal to open a new hyperlink without explicitly finishing the previous one\n    if (this._getCurrentLinkId()) {\n      this._finishHyperlink();\n    }\n    const parsedParams = params.split(':');\n    let id: string | undefined;\n    const idParamIndex = parsedParams.findIndex(e => e.startsWith('id='));\n    if (idParamIndex !== -1) {\n      id = parsedParams[idParamIndex].slice(3) || undefined;\n    }\n    this._curAttrData.extended = this._curAttrData.extended.clone();\n    this._curAttrData.extended.urlId = this._oscLinkService.registerLink({ id, uri });\n    this._curAttrData.updateExtended();\n    return true;\n  }\n\n  private _finishHyperlink(): boolean {\n    this._curAttrData.extended = this._curAttrData.extended.clone();\n    this._curAttrData.extended.urlId = 0;\n    this._curAttrData.updateExtended();\n    return true;\n  }\n\n  // special colors - OSC 10 | 11 | 12\n  private _specialColors = [ColorIndex.FOREGROUND, ColorIndex.BACKGROUND, ColorIndex.CURSOR];\n\n  /**\n   * Apply colors requests for special colors in OSC 10 | 11 | 12.\n   * Since these commands are stacking from multiple parameters,\n   * we handle them in a loop with an entry offset to `_specialColors`.\n   */\n  private _setOrReportSpecialColor(data: string, offset: number): boolean {\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i, ++offset) {\n      if (offset >= this._specialColors.length) break;\n      if (slots[i] === '?') {\n        this._onColor.fire([{ type: ColorRequestType.REPORT, index: this._specialColors[offset] }]);\n      } else {\n        const color = parseColor(slots[i]);\n        if (color) {\n          this._onColor.fire([{ type: ColorRequestType.SET, index: this._specialColors[offset], color }]);\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * OSC 10 ; <xcolor name>|<?> ST - set or query default foreground color\n   *\n   * @vt: #Y  OSC   10    \"Set or query default foreground color\"   \"OSC 10 ; Pt BEL\"  \"Set or query default foreground color.\"\n   * To set the color, the following color specification formats are supported:\n   * - `rgb:<red>/<green>/<blue>` for  `<red>, <green>, <blue>` in `h | hh | hhh | hhhh`, where\n   *   `h` is a single hexadecimal digit (case insignificant). The different widths scale\n   *   from 4 bit (`h`) to 16 bit (`hhhh`) and get converted to 8 bit (`hh`).\n   * - `#RGB` - 4 bits per channel, expanded to `#R0G0B0`\n   * - `#RRGGBB` - 8 bits per channel\n   * - `#RRRGGGBBB` - 12 bits per channel, truncated to `#RRGGBB`\n   * - `#RRRRGGGGBBBB` - 16 bits per channel, truncated to `#RRGGBB`\n   *\n   * **Note:** X11 named colors are currently unsupported.\n   *\n   * If `Pt` contains `?` instead of a color specification, the terminal\n   * returns a sequence with the current default foreground color\n   * (use that sequence to restore the color after changes).\n   *\n   * **Note:** Other than xterm, xterm.js does not support OSC 12 - 19.\n   * Therefore stacking multiple `Pt` separated by `;` only works for the first two entries.\n   */\n  public setOrReportFgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 0);\n  }\n\n  /**\n   * OSC 11 ; <xcolor name>|<?> ST - set or query default background color\n   *\n   * @vt: #Y  OSC   11    \"Set or query default background color\"   \"OSC 11 ; Pt BEL\"  \"Same as OSC 10, but for default background.\"\n   */\n  public setOrReportBgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 1);\n  }\n\n  /**\n   * OSC 12 ; <xcolor name>|<?> ST - set or query default cursor color\n   *\n   * @vt: #Y  OSC   12    \"Set or query default cursor color\"   \"OSC 12 ; Pt BEL\"  \"Same as OSC 10, but for default cursor color.\"\n   */\n  public setOrReportCursorColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 2);\n  }\n\n  /**\n   * OSC 104 ; <num> ST - restore ANSI color <num>\n   *\n   * @vt: #Y  OSC   104    \"Reset ANSI color\"   \"OSC 104 ; c BEL\" \"Reset color number `c` to themed color.\"\n   * `c` is the color index between 0 and 255. This function restores the default color for `c` as\n   * specified by the loaded theme. Any number of `c` parameters may be given.\n   * If no parameters are given, the entire indexed color table will be reset.\n   */\n  public restoreIndexedColor(data: string): boolean {\n    if (!data) {\n      this._onColor.fire([{ type: ColorRequestType.RESTORE }]);\n      return true;\n    }\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i) {\n      if (/^\\d+$/.exec(slots[i])) {\n        const index = parseInt(slots[i]);\n        if (0 <= index && index < 256) {\n          event.push({ type: ColorRequestType.RESTORE, index });\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 110 ST - restore default foreground color\n   *\n   * @vt: #Y  OSC   110    \"Restore default foreground color\"   \"OSC 110 BEL\"  \"Restore default foreground to themed color.\"\n   */\n  public restoreFgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.FOREGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 111 ST - restore default background color\n   *\n   * @vt: #Y  OSC   111    \"Restore default background color\"   \"OSC 111 BEL\"  \"Restore default background to themed color.\"\n   */\n  public restoreBgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.BACKGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 112 ST - restore default cursor color\n   *\n   * @vt: #Y  OSC   112    \"Restore default cursor color\"   \"OSC 112 BEL\"  \"Restore default cursor to themed color.\"\n   */\n  public restoreCursorColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.CURSOR }]);\n    return true;\n  }\n\n  /**\n   * ESC E\n   * C1.NEL\n   *   DEC mnemonic: NEL (https://vt100.net/docs/vt510-rm/NEL)\n   *   Moves cursor to first position on next line.\n   *\n   * @vt: #Y   C1    NEL   \"Next Line\"   \"\\x85\"    \"Move the cursor to the beginning of the next row.\"\n   * @vt: #Y   ESC   NEL   \"Next Line\"   \"ESC E\"   \"Move the cursor to the beginning of the next row.\"\n   */\n  public nextLine(): boolean {\n    this._activeBuffer.x = 0;\n    this.index();\n    return true;\n  }\n\n  /**\n   * ESC =\n   *   DEC mnemonic: DECKPAM (https://vt100.net/docs/vt510-rm/DECKPAM.html)\n   *   Enables the numeric keypad to send application sequences to the host.\n   */\n  public keypadApplicationMode(): boolean {\n    this._logService.debug('Serial port requested application keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = true;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC >\n   *   DEC mnemonic: DECKPNM (https://vt100.net/docs/vt510-rm/DECKPNM.html)\n   *   Enables the keypad to send numeric characters to the host.\n   */\n  public keypadNumericMode(): boolean {\n    this._logService.debug('Switching back to normal keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = false;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC % @\n   * ESC % G\n   *   Select default character set. UTF-8 is not supported (string are unicode anyways)\n   *   therefore ESC % G does the same.\n   */\n  public selectDefaultCharset(): boolean {\n    this._charsetService.setgLevel(0);\n    this._charsetService.setgCharset(0, DEFAULT_CHARSET); // US (default)\n    return true;\n  }\n\n  /**\n   * ESC ( C\n   *   Designate G0 Character Set, VT100, ISO 2022.\n   * ESC ) C\n   *   Designate G1 Character Set (ISO 2022, VT100).\n   * ESC * C\n   *   Designate G2 Character Set (ISO 2022, VT220).\n   * ESC + C\n   *   Designate G3 Character Set (ISO 2022, VT220).\n   * ESC - C\n   *   Designate G1 Character Set (VT300).\n   * ESC . C\n   *   Designate G2 Character Set (VT300).\n   * ESC / C\n   *   Designate G3 Character Set (VT300). C = A  -> ISO Latin-1 Supplemental. - Supported?\n   */\n  public selectCharset(collectAndFlag: string): boolean {\n    if (collectAndFlag.length !== 2) {\n      this.selectDefaultCharset();\n      return true;\n    }\n    if (collectAndFlag[0] === '/') {\n      return true;  // TODO: Is this supported?\n    }\n    this._charsetService.setgCharset(GLEVEL[collectAndFlag[0]], CHARSETS[collectAndFlag[1]] || DEFAULT_CHARSET);\n    return true;\n  }\n\n  /**\n   * ESC D\n   * C1.IND\n   *   DEC mnemonic: IND (https://vt100.net/docs/vt510-rm/IND.html)\n   *   Moves the cursor down one line in the same column.\n   *\n   * @vt: #Y   C1    IND   \"Index\"   \"\\x84\"    \"Move the cursor one line down scrolling if needed.\"\n   * @vt: #Y   ESC   IND   \"Index\"   \"ESC D\"   \"Move the cursor one line down scrolling if needed.\"\n   */\n  public index(): boolean {\n    this._restrictCursor();\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * ESC H\n   * C1.HTS\n   *   DEC mnemonic: HTS (https://vt100.net/docs/vt510-rm/HTS.html)\n   *   Sets a horizontal tab stop at the column position indicated by\n   *   the value of the active column when the terminal receives an HTS.\n   *\n   * @vt: #Y   C1    HTS   \"Horizontal Tabulation Set\" \"\\x88\"    \"Places a tab stop at the current cursor position.\"\n   * @vt: #Y   ESC   HTS   \"Horizontal Tabulation Set\" \"ESC H\"   \"Places a tab stop at the current cursor position.\"\n   */\n  public tabSet(): boolean {\n    this._activeBuffer.tabs[this._activeBuffer.x] = true;\n    return true;\n  }\n\n  /**\n   * ESC M\n   * C1.RI\n   *   DEC mnemonic: HTS\n   *   Moves the cursor up one line in the same column. If the cursor is at the top margin,\n   *   the page scrolls down.\n   *\n   * @vt: #Y ESC  IR \"Reverse Index\" \"ESC M\"  \"Move the cursor one line up scrolling if needed.\"\n   */\n  public reverseIndex(): boolean {\n    this._restrictCursor();\n    if (this._activeBuffer.y === this._activeBuffer.scrollTop) {\n      // possibly move the code below to term.reverseScroll();\n      // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n      // blankLine(true) is xterm/linux behavior\n      const scrollRegionHeight = this._activeBuffer.scrollBottom - this._activeBuffer.scrollTop;\n      this._activeBuffer.lines.shiftElements(this._activeBuffer.ybase + this._activeBuffer.y, scrollRegionHeight, 1);\n      this._activeBuffer.lines.set(this._activeBuffer.ybase + this._activeBuffer.y, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n      this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    } else {\n      this._activeBuffer.y--;\n      this._restrictCursor(); // quickfix to not run out of bounds\n    }\n    return true;\n  }\n\n  /**\n   * ESC c\n   *   DEC mnemonic: RIS (https://vt100.net/docs/vt510-rm/RIS.html)\n   *   Reset to initial state.\n   */\n  public fullReset(): boolean {\n    this._parser.reset();\n    this._onRequestReset.fire();\n    return true;\n  }\n\n  public reset(): void {\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._eraseAttrDataInternal = DEFAULT_ATTR_DATA.clone();\n  }\n\n  /**\n   * back_color_erase feature for xterm.\n   */\n  private _eraseAttrData(): IAttributeData {\n    this._eraseAttrDataInternal.bg &= ~(Attributes.CM_MASK | 0xFFFFFF);\n    this._eraseAttrDataInternal.bg |= this._curAttrData.bg & ~0xFC000000;\n    return this._eraseAttrDataInternal;\n  }\n\n  /**\n   * ESC n\n   * ESC o\n   * ESC |\n   * ESC }\n   * ESC ~\n   *   DEC mnemonic: LS (https://vt100.net/docs/vt510-rm/LS.html)\n   *   When you use a locking shift, the character set remains in GL or GR until\n   *   you use another locking shift. (partly supported)\n   */\n  public setgLevel(level: number): boolean {\n    this._charsetService.setgLevel(level);\n    return true;\n  }\n\n  /**\n   * ESC # 8\n   *   DEC mnemonic: DECALN (https://vt100.net/docs/vt510-rm/DECALN.html)\n   *   This control function fills the complete screen area with\n   *   a test pattern (E) used for adjusting screen alignment.\n   *\n   * @vt: #Y   ESC   DECALN   \"Screen Alignment Pattern\"  \"ESC # 8\"  \"Fill viewport with a test pattern (E).\"\n   */\n  public screenAlignmentPattern(): boolean {\n    // prepare cell data\n    const cell = new CellData();\n    cell.content = 1 << Content.WIDTH_SHIFT | 'E'.charCodeAt(0);\n    cell.fg = this._curAttrData.fg;\n    cell.bg = this._curAttrData.bg;\n\n\n    this._setCursor(0, 0);\n    for (let yOffset = 0; yOffset < this._bufferService.rows; ++yOffset) {\n      const row = this._activeBuffer.ybase + this._activeBuffer.y + yOffset;\n      const line = this._activeBuffer.lines.get(row);\n      if (line) {\n        line.fill(cell);\n        line.isWrapped = false;\n      }\n    }\n    this._dirtyRowTracker.markAllDirty();\n    this._setCursor(0, 0);\n    return true;\n  }\n\n\n  /**\n   * DCS $ q Pt ST\n   *   DECRQSS (https://vt100.net/docs/vt510-rm/DECRQSS.html)\n   *   Request Status String (DECRQSS), VT420 and up.\n   *   Response: DECRPSS (https://vt100.net/docs/vt510-rm/DECRPSS.html)\n   *\n   * @vt: #P[Limited support, see below.]  DCS   DECRQSS   \"Request Selection or Setting\"  \"DCS $ q Pt ST\"   \"Request several terminal settings.\"\n   * Response is in the form `ESC P 1 $ r Pt ST` for valid requests, where `Pt` contains the corresponding CSI string,\n   * `ESC P 0 ST` for invalid requests.\n   *\n   * Supported requests and responses:\n   *\n   * | Type                             | Request           | Response (`Pt`)                                       |\n   * | -------------------------------- | ----------------- | ----------------------------------------------------- |\n   * | Graphic Rendition (SGR)          | `DCS $ q m ST`    | always reporting `0m` (currently broken)              |\n   * | Top and Bottom Margins (DECSTBM) | `DCS $ q r ST`    | `Ps ; Ps r`                                           |\n   * | Cursor Style (DECSCUSR)          | `DCS $ q SP q ST` | `Ps SP q`                                             |\n   * | Protection Attribute (DECSCA)    | `DCS $ q \" q ST`  | `Ps \" q` (DECSCA 2 is reported as Ps = 0)             |\n   * | Conformance Level (DECSCL)       | `DCS $ q \" p ST`  | always reporting `61 ; 1 \" p` (DECSCL is unsupported) |\n   *\n   *\n   * TODO:\n   * - fix SGR report\n   * - either check which conformance is better suited or remove the report completely\n   *   --> we are currently a mixture of all up to VT400 but dont follow anyone strictly\n   */\n  public requestStatusString(data: string, params: IParams): boolean {\n    const f = (s: string): boolean => {\n      this._coreService.triggerDataEvent(`${C0.ESC}${s}${C0.ESC}\\\\`);\n      return true;\n    };\n\n    // access helpers\n    const b = this._bufferService.buffer;\n    const opts = this._optionsService.rawOptions;\n    const STYLES: { [key: string]: number } = { 'block': 2, 'underline': 4, 'bar': 6 };\n\n    if (data === '\"q') return f(`P1$r${this._curAttrData.isProtected() ? 1 : 0}\"q`);\n    if (data === '\"p') return f(`P1$r61;1\"p`);\n    if (data === 'r') return f(`P1$r${b.scrollTop + 1};${b.scrollBottom + 1}r`);\n    // FIXME: report real SGR settings instead of 0m\n    if (data === 'm') return f(`P1$r0m`);\n    if (data === ' q') return f(`P1$r${STYLES[opts.cursorStyle] - (opts.cursorBlink ? 1 : 0)} q`);\n    return f(`P0$r`);\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    this._dirtyRowTracker.markRangeDirty(y1, y2);\n  }\n}\n\nexport interface IDirtyRowTracker {\n  readonly start: number;\n  readonly end: number;\n\n  clearRange(): void;\n  markDirty(y: number): void;\n  markRangeDirty(y1: number, y2: number): void;\n  markAllDirty(): void;\n}\n\nclass DirtyRowTracker implements IDirtyRowTracker {\n  public start!: number;\n  public end!: number;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    this.clearRange();\n  }\n\n  public clearRange(): void {\n    this.start = this._bufferService.buffer.y;\n    this.end = this._bufferService.buffer.y;\n  }\n\n  public markDirty(y: number): void {\n    if (y < this.start) {\n      this.start = y;\n    } else if (y > this.end) {\n      this.end = y;\n    }\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    if (y1 > y2) {\n      $temp = y1;\n      y1 = y2;\n      y2 = $temp;\n    }\n    if (y1 < this.start) {\n      this.start = y1;\n    }\n    if (y2 > this.end) {\n      this.end = y2;\n    }\n  }\n\n  public markAllDirty(): void {\n    this.markRangeDirty(0, this._bufferService.rows - 1);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  constructor() {\n  }\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    for (const d of this._disposables) {\n      d.dispose();\n    }\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   * @returns The disposable.\n   */\n  public register<T extends IDisposable>(d: T): T {\n    this._disposables.push(d);\n    return d;\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n\n/**\n * Wrap a function in a disposable.\n */\nexport function toDisposable(f: () => void): IDisposable {\n  return { dispose: f };\n}\n\n/**\n * Dispose of all disposables in an array and set its length to 0.\n */\nexport function disposeArray(disposables: IDisposable[]): void {\n  for (const d of disposables) {\n    d.dispose();\n  }\n  disposables.length = 0;\n}\n\n/**\n * Creates a disposable that will dispose of an array of disposables when disposed.\n */\nexport function getDisposeArrayDisposable(array: IDisposable[]): IDisposable {\n  return { dispose: () => disposeArray(array) };\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class TwoKeyMap<TFirst extends string | number, TSecond extends string | number, TValue> {\n  private _data: { [bg: string | number]: { [fg: string | number]: TValue | undefined } | undefined } = {};\n\n  public set(first: TFirst, second: TSecond, value: TValue): void {\n    if (!this._data[first]) {\n      this._data[first] = {};\n    }\n    this._data[first as string | number]![second] = value;\n  }\n\n  public get(first: TFirst, second: TSecond): TValue | undefined {\n    return this._data[first as string | number] ? this._data[first as string | number]![second] : undefined;\n  }\n\n  public clear(): void {\n    this._data = {};\n  }\n}\n\nexport class FourKeyMap<TFirst extends string | number, TSecond extends string | number, TThird extends string | number, TFourth extends string | number, TValue> {\n  private _data: TwoKeyMap<TFirst, TSecond, TwoKeyMap<TThird, TFourth, TValue>> = new TwoKeyMap();\n\n  public set(first: TFirst, second: TSecond, third: TThird, fourth: TFourth, value: TValue): void {\n    if (!this._data.get(first, second)) {\n      this._data.set(first, second, new TwoKeyMap());\n    }\n    this._data.get(first, second)!.set(third, fourth, value);\n  }\n\n  public get(first: TFirst, second: TSecond, third: TThird, fourth: TFourth): TValue | undefined {\n    return this._data.get(first, second)?.get(third, fourth);\n  }\n\n  public clear(): void {\n    this._data.clear();\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nexport const isNode = (typeof navigator === 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = userAgent.includes('Firefox');\nexport const isLegacyEdge = userAgent.includes('Edge');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\nexport function getSafariVersion(): number {\n  if (!isSafari) {\n    return 0;\n  }\n  const majorVersion = userAgent.match(/Version\\/(\\d+)/);\n  if (majorVersion === null || majorVersion.length < 2) {\n    return 0;\n  }\n  return parseInt(majorVersion[1]);\n}\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'].includes(platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = ['Windows', 'Win16', 'Win32', 'WinCE'].includes(platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n// Note that when this is true, isLinux will also be true.\nexport const isChromeOS = /\\bCrOS\\b/.test(userAgent);\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// Work variables to avoid garbage collection.\nlet i = 0;\n\n/**\n * A generic list that is maintained in sorted order and allows values with duplicate keys. This\n * list is based on binary search and as such locating a key will take O(log n) amortized, this\n * includes the by key iterator.\n */\nexport class SortedList<T> {\n  private readonly _array: T[] = [];\n\n  constructor(\n    private readonly _getKey: (value: T) => number\n  ) {\n  }\n\n  public clear(): void {\n    this._array.length = 0;\n  }\n\n  public insert(value: T): void {\n    if (this._array.length === 0) {\n      this._array.push(value);\n      return;\n    }\n    i = this._search(this._getKey(value), 0, this._array.length - 1);\n    this._array.splice(i, 0, value);\n  }\n\n  public delete(value: T): boolean {\n    if (this._array.length === 0) {\n      return false;\n    }\n    const key = this._getKey(value);\n    if (key === undefined) {\n      return false;\n    }\n    i = this._search(key, 0, this._array.length - 1);\n    if (i === -1) {\n      return false;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return false;\n    }\n    do {\n      if (this._array[i] === value) {\n        this._array.splice(i, 1);\n        return true;\n      }\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n    return false;\n  }\n\n  public *getKeyIterator(key: number): IterableIterator<T> {\n    if (this._array.length === 0) {\n      return;\n    }\n    i = this._search(key, 0, this._array.length - 1);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      yield this._array[i];\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public forEachByKey(key: number, callback: (value: T) => void): void {\n    if (this._array.length === 0) {\n      return;\n    }\n    i = this._search(key, 0, this._array.length - 1);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      callback(this._array[i]);\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public values(): IterableIterator<T> {\n    return this._array.values();\n  }\n\n  private _search(key: number, min: number, max: number): number {\n    if (max < min) {\n      return min;\n    }\n    let mid = Math.floor((min + max) / 2);\n    const midKey = this._getKey(this._array[mid]);\n    if (midKey > key) {\n      return this._search(key, min, mid - 1);\n    }\n    if (midKey < key) {\n      return this._search(key, mid + 1, max);\n    }\n    // Value found! Since keys can be duplicates, move the result index back to the lowest index\n    // that matches the key.\n    while (mid > 0 && this._getKey(this._array[mid - 1]) === key) {\n      mid--;\n    }\n    return mid;\n  }\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\n\ninterface ITaskQueue {\n  /**\n   * Adds a task to the queue which will run in a future idle callback.\n   * To avoid perceivable stalls on the mainthread, tasks with heavy workload\n   * should split their work into smaller pieces and return `true` to get\n   * called again until the work is done (on falsy return value).\n   */\n  enqueue(task: () => boolean | void): void;\n\n  /**\n   * Flushes the queue, running all remaining tasks synchronously.\n   */\n  flush(): void;\n\n  /**\n   * Clears any remaining tasks from the queue, these will not be run.\n   */\n  clear(): void;\n}\n\ninterface ITaskDeadline {\n  timeRemaining(): number;\n}\ntype CallbackWithDeadline = (deadline: ITaskDeadline) => void;\n\nabstract class TaskQueue implements ITaskQueue {\n  private _tasks: (() => boolean | void)[] = [];\n  private _idleCallback?: number;\n  private _i = 0;\n\n  protected abstract _requestCallback(callback: CallbackWithDeadline): number;\n  protected abstract _cancelCallback(identifier: number): void;\n\n  public enqueue(task: () => boolean | void): void {\n    this._tasks.push(task);\n    this._start();\n  }\n\n  public flush(): void {\n    while (this._i < this._tasks.length) {\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n    }\n    this.clear();\n  }\n\n  public clear(): void {\n    if (this._idleCallback) {\n      this._cancelCallback(this._idleCallback);\n      this._idleCallback = undefined;\n    }\n    this._i = 0;\n    this._tasks.length = 0;\n  }\n\n  private _start(): void {\n    if (!this._idleCallback) {\n      this._idleCallback = this._requestCallback(this._process.bind(this));\n    }\n  }\n\n  private _process(deadline: ITaskDeadline): void {\n    this._idleCallback = undefined;\n    let taskDuration = 0;\n    let longestTask = 0;\n    let lastDeadlineRemaining = deadline.timeRemaining();\n    let deadlineRemaining = 0;\n    while (this._i < this._tasks.length) {\n      taskDuration = Date.now();\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n      // other than performance.now, Date.now might not be stable (changes on wall clock changes),\n      // this is not an issue here as a clock change during a short running task is very unlikely\n      // in case it still happened and leads to negative duration, simply assume 1 msec\n      taskDuration = Math.max(1, Date.now() - taskDuration);\n      longestTask = Math.max(taskDuration, longestTask);\n      // Guess the following task will take a similar time to the longest task in this batch, allow\n      // additional room to try avoid exceeding the deadline\n      deadlineRemaining = deadline.timeRemaining();\n      if (longestTask * 1.5 > deadlineRemaining) {\n        // Warn when the time exceeding the deadline is over 20ms, if this happens in practice the\n        // task should be split into sub-tasks to ensure the UI remains responsive.\n        if (lastDeadlineRemaining - taskDuration < -20) {\n          console.warn(`task queue exceeded allotted deadline by ${Math.abs(Math.round(lastDeadlineRemaining - taskDuration))}ms`);\n        }\n        this._start();\n        return;\n      }\n      lastDeadlineRemaining = deadlineRemaining;\n    }\n    this.clear();\n  }\n}\n\n/**\n * A queue of that runs tasks over several tasks via setTimeout, trying to maintain above 60 frames\n * per second. The tasks will run in the order they are enqueued, but they will run some time later,\n * and care should be taken to ensure they're non-urgent and will not introduce race conditions.\n */\nexport class PriorityTaskQueue extends TaskQueue {\n  protected _requestCallback(callback: CallbackWithDeadline): number {\n    return setTimeout(() => callback(this._createDeadline(16)));\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    clearTimeout(identifier);\n  }\n\n  private _createDeadline(duration: number): ITaskDeadline {\n    const end = Date.now() + duration;\n    return {\n      timeRemaining: () => Math.max(0, end - Date.now())\n    };\n  }\n}\n\nclass IdleTaskQueueInternal extends TaskQueue {\n  protected _requestCallback(callback: IdleRequestCallback): number {\n    return requestIdleCallback(callback);\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    cancelIdleCallback(identifier);\n  }\n}\n\n/**\n * A queue of that runs tasks over several idle callbacks, trying to respect the idle callback's\n * deadline given by the environment. The tasks will run in the order they are enqueued, but they\n * will run some time later, and care should be taken to ensure they're non-urgent and will not\n * introduce race conditions.\n *\n * This reverts to a {@link PriorityTaskQueue} if the environment does not support idle callbacks.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const IdleTaskQueue = (!isNode && 'requestIdleCallback' in window) ? IdleTaskQueueInternal : PriorityTaskQueue;\n\n/**\n * An object that tracks a single debounced task that will run on the next idle frame. When called\n * multiple times, only the last set task will run.\n */\nexport class DebouncedIdleTask {\n  private _queue: ITaskQueue;\n\n  constructor() {\n    this._queue = new IdleTaskQueue();\n  }\n\n  public set(task: () => boolean | void): void {\n    this._queue.clear();\n    this._queue.enqueue(task);\n  }\n\n  public flush(): void {\n    this._queue.flush();\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CHAR_DATA_CODE_INDEX, NULL_CELL_CODE, WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\nimport { IBufferService } from 'common/services/Services';\n\nexport function updateWindowsModeWrappedState(bufferService: IBufferService): void {\n  // Winpty does not support wraparound mode which means that lines will never\n  // be marked as wrapped. This causes issues for things like copying a line\n  // retaining the wrapped new line characters or if consumers are listening\n  // in on the data stream.\n  //\n  // The workaround for this is to listen to every incoming line feed and mark\n  // the line as wrapped if the last character in the previous line is not a\n  // space. This is certainly not without its problems, but generally on\n  // Windows when text reaches the end of the terminal it's likely going to be\n  // wrapped.\n  const line = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y - 1);\n  const lastChar = line?.get(bufferService.cols - 1);\n\n  const nextLine = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y);\n  if (nextLine && lastChar) {\n    nextLine.isWrapped = (lastChar[CHAR_DATA_CODE_INDEX] !== NULL_CELL_CODE && lastChar[CHAR_DATA_CODE_INDEX] !== WHITESPACE_CELL_CODE);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB, IExtendedAttrs } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags, UnderlineStyle, ExtFlags } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  public static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n\n  public static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    newObj.extended = this.extended.clone();\n    return newObj;\n  }\n\n  // data\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n\n  // flags\n  public isInverse(): number       { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number          { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number     {\n    if (this.hasExtendedAttrs() && this.extended.underlineStyle !== UnderlineStyle.NONE) {\n      return 1;\n    }\n    return this.fg & FgFlags.UNDERLINE;\n  }\n  public isBlink(): number         { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number     { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number        { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number           { return this.bg & BgFlags.DIM; }\n  public isStrikethrough(): number { return this.fg & FgFlags.STRIKETHROUGH; }\n  public isProtected(): number     { return this.bg & BgFlags.PROTECTED; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n  public isAttributeDefault(): boolean { return this.fg === 0 && this.bg === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n\n  // extended attrs\n  public hasExtendedAttrs(): number {\n    return this.bg & BgFlags.HAS_EXTENDED;\n  }\n  public updateExtended(): void {\n    if (this.extended.isEmpty()) {\n      this.bg &= ~BgFlags.HAS_EXTENDED;\n    } else {\n      this.bg |= BgFlags.HAS_EXTENDED;\n    }\n  }\n  public getUnderlineColor(): number {\n    if ((this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor) {\n      switch (this.extended.underlineColor & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:  return this.extended.underlineColor & Attributes.PCOLOR_MASK;\n        case Attributes.CM_RGB:   return this.extended.underlineColor & Attributes.RGB_MASK;\n        default:                  return this.getFgColor();\n      }\n    }\n    return this.getFgColor();\n  }\n  public getUnderlineColorMode(): number {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? this.extended.underlineColor & Attributes.CM_MASK\n      : this.getFgColorMode();\n  }\n  public isUnderlineColorRGB(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_RGB\n      : this.isFgRGB();\n  }\n  public isUnderlineColorPalette(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P16\n          || (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P256\n      : this.isFgPalette();\n  }\n  public isUnderlineColorDefault(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === 0\n      : this.isFgDefault();\n  }\n  public getUnderlineStyle(): UnderlineStyle {\n    return this.fg & FgFlags.UNDERLINE\n      ? (this.bg & BgFlags.HAS_EXTENDED ? this.extended.underlineStyle : UnderlineStyle.SINGLE)\n      : UnderlineStyle.NONE;\n  }\n}\n\n\n/**\n * Extended attributes for a cell.\n * Holds information about different underline styles and color.\n */\nexport class ExtendedAttrs implements IExtendedAttrs {\n  private _ext: number = 0;\n  public get ext(): number {\n    if (this._urlId) {\n      return (\n        (this._ext & ~ExtFlags.UNDERLINE_STYLE) |\n        (this.underlineStyle << 26)\n      );\n    }\n    return this._ext;\n  }\n  public set ext(value: number) { this._ext = value; }\n\n  public get underlineStyle(): UnderlineStyle {\n    // Always return the URL style if it has one\n    if (this._urlId) {\n      return UnderlineStyle.DASHED;\n    }\n    return (this._ext & ExtFlags.UNDERLINE_STYLE) >> 26;\n  }\n  public set underlineStyle(value: UnderlineStyle) {\n    this._ext &= ~ExtFlags.UNDERLINE_STYLE;\n    this._ext |= (value << 26) & ExtFlags.UNDERLINE_STYLE;\n  }\n\n  public get underlineColor(): number {\n    return this._ext & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n  public set underlineColor(value: number) {\n    this._ext &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    this._ext |= value & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n\n  private _urlId: number = 0;\n  public get urlId(): number {\n    return this._urlId;\n  }\n  public set urlId(value: number) {\n    this._urlId = value;\n  }\n\n  constructor(\n    ext: number = 0,\n    urlId: number = 0\n  ) {\n    this._ext = ext;\n    this._urlId = urlId;\n  }\n\n  public clone(): IExtendedAttrs {\n    return new ExtendedAttrs(this._ext, this._urlId);\n  }\n\n  /**\n   * Convenient method to indicate whether the object holds no additional information,\n   * that needs to be persistant in the buffer.\n   */\n  public isEmpty(): boolean {\n    return this.underlineStyle === UnderlineStyle.NONE && this._urlId === 0;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CircularList, IInsertEvent } from 'common/CircularList';\nimport { IBuffer, BufferIndex, IBufferStringIterator, IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { IBufferLine, ICellData, IAttributeData, ICharset } from 'common/Types';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { CellData } from 'common/buffer/CellData';\nimport { NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_CHAR_INDEX } from 'common/buffer/Constants';\nimport { reflowLargerApplyNewLayout, reflowLargerCreateNewLayout, reflowLargerGetLinesToRemove, reflowSmallerGetNewLineLengths, getWrappedLineTrimmedLength } from 'common/buffer/BufferReflow';\nimport { Marker } from 'common/buffer/Marker';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { ExtendedAttrs } from 'common/buffer/AttributeData';\nimport { DebouncedIdleTask, IdleTaskQueue } from 'common/TaskQueue';\n\nexport const MAX_BUFFER_SIZE = 4294967295; // 2^32 - 1\n\n/**\n * This class represents a terminal buffer (an internal state of the terminal), where the\n * following information is stored (in high-level):\n *   - text content of this particular buffer\n *   - cursor position\n *   - scroll position\n */\nexport class Buffer implements IBuffer {\n  public lines: CircularList<IBufferLine>;\n  public ydisp: number = 0;\n  public ybase: number = 0;\n  public y: number = 0;\n  public x: number = 0;\n  public scrollBottom: number;\n  public scrollTop: number;\n  public tabs: { [column: number]: boolean | undefined } = {};\n  public savedY: number = 0;\n  public savedX: number = 0;\n  public savedCurAttrData = DEFAULT_ATTR_DATA.clone();\n  public savedCharset: ICharset | undefined = DEFAULT_CHARSET;\n  public markers: Marker[] = [];\n  private _nullCell: ICellData = CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n  private _whitespaceCell: ICellData = CellData.fromCharData([0, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE]);\n  private _cols: number;\n  private _rows: number;\n  private _isClearing: boolean = false;\n\n  constructor(\n    private _hasScrollback: boolean,\n    private _optionsService: IOptionsService,\n    private _bufferService: IBufferService\n  ) {\n    this._cols = this._bufferService.cols;\n    this._rows = this._bufferService.rows;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  public getNullCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._nullCell.fg = attr.fg;\n      this._nullCell.bg = attr.bg;\n      this._nullCell.extended = attr.extended;\n    } else {\n      this._nullCell.fg = 0;\n      this._nullCell.bg = 0;\n      this._nullCell.extended = new ExtendedAttrs();\n    }\n    return this._nullCell;\n  }\n\n  public getWhitespaceCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._whitespaceCell.fg = attr.fg;\n      this._whitespaceCell.bg = attr.bg;\n      this._whitespaceCell.extended = attr.extended;\n    } else {\n      this._whitespaceCell.fg = 0;\n      this._whitespaceCell.bg = 0;\n      this._whitespaceCell.extended = new ExtendedAttrs();\n    }\n    return this._whitespaceCell;\n  }\n\n  public getBlankLine(attr: IAttributeData, isWrapped?: boolean): IBufferLine {\n    return new BufferLine(this._bufferService.cols, this.getNullCell(attr), isWrapped);\n  }\n\n  public get hasScrollback(): boolean {\n    return this._hasScrollback && this.lines.maxLength > this._rows;\n  }\n\n  public get isCursorInViewport(): boolean {\n    const absoluteY = this.ybase + this.y;\n    const relativeY = absoluteY - this.ydisp;\n    return (relativeY >= 0 && relativeY < this._rows);\n  }\n\n  /**\n   * Gets the correct buffer length based on the rows provided, the terminal's\n   * scrollback and whether this buffer is flagged to have scrollback or not.\n   * @param rows The terminal rows to use in the calculation.\n   */\n  private _getCorrectBufferLength(rows: number): number {\n    if (!this._hasScrollback) {\n      return rows;\n    }\n\n    const correctBufferLength = rows + this._optionsService.rawOptions.scrollback;\n\n    return correctBufferLength > MAX_BUFFER_SIZE ? MAX_BUFFER_SIZE : correctBufferLength;\n  }\n\n  /**\n   * Fills the buffer's viewport with blank lines.\n   */\n  public fillViewportRows(fillAttr?: IAttributeData): void {\n    if (this.lines.length === 0) {\n      if (fillAttr === undefined) {\n        fillAttr = DEFAULT_ATTR_DATA;\n      }\n      let i = this._rows;\n      while (i--) {\n        this.lines.push(this.getBlankLine(fillAttr));\n      }\n    }\n  }\n\n  /**\n   * Clears the buffer to it's initial state, discarding all previous data.\n   */\n  public clear(): void {\n    this.ydisp = 0;\n    this.ybase = 0;\n    this.y = 0;\n    this.x = 0;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  /**\n   * Resizes the buffer, adjusting its data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    // store reference to null cell with default attrs\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n\n    // count bufferlines with overly big memory to be cleaned afterwards\n    let dirtyMemoryLines = 0;\n\n    // Increase max length if needed before adjustments to allow space to fill\n    // as required.\n    const newMaxLength = this._getCorrectBufferLength(newRows);\n    if (newMaxLength > this.lines.maxLength) {\n      this.lines.maxLength = newMaxLength;\n    }\n\n    // The following adjustments should only happen if the buffer has been\n    // initialized/filled.\n    if (this.lines.length > 0) {\n      // Deal with columns increasing (reducing needs to happen after reflow)\n      if (this._cols < newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          // +boolean for fast 0 or 1 conversion\n          dirtyMemoryLines += +this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n\n      // Resize rows in both directions as needed\n      let addToY = 0;\n      if (this._rows < newRows) {\n        for (let y = this._rows; y < newRows; y++) {\n          if (this.lines.length < newRows + this.ybase) {\n            if (this._optionsService.rawOptions.windowsMode) {\n              // Just add the new missing rows on Windows as conpty reprints the screen with it's\n              // view of the world. Once a line enters scrollback for conpty it remains there\n              this.lines.push(new BufferLine(newCols, nullCell));\n            } else {\n              if (this.ybase > 0 && this.lines.length <= this.ybase + this.y + addToY + 1) {\n                // There is room above the buffer and there are no empty elements below the line,\n                // scroll up\n                this.ybase--;\n                addToY++;\n                if (this.ydisp > 0) {\n                  // Viewport is at the top of the buffer, must increase downwards\n                  this.ydisp--;\n                }\n              } else {\n                // Add a blank line if there is no buffer left at the top to scroll to, or if there\n                // are blank lines after the cursor\n                this.lines.push(new BufferLine(newCols, nullCell));\n              }\n            }\n          }\n        }\n      } else { // (this._rows >= newRows)\n        for (let y = this._rows; y > newRows; y--) {\n          if (this.lines.length > newRows + this.ybase) {\n            if (this.lines.length > this.ybase + this.y + 1) {\n              // The line is a blank line below the cursor, remove it\n              this.lines.pop();\n            } else {\n              // The line is the cursor, scroll down\n              this.ybase++;\n              this.ydisp++;\n            }\n          }\n        }\n      }\n\n      // Reduce max length if needed after adjustments, this is done after as it\n      // would otherwise cut data from the bottom of the buffer.\n      if (newMaxLength < this.lines.maxLength) {\n        // Trim from the top of the buffer and adjust ybase and ydisp.\n        const amountToTrim = this.lines.length - newMaxLength;\n        if (amountToTrim > 0) {\n          this.lines.trimStart(amountToTrim);\n          this.ybase = Math.max(this.ybase - amountToTrim, 0);\n          this.ydisp = Math.max(this.ydisp - amountToTrim, 0);\n          this.savedY = Math.max(this.savedY - amountToTrim, 0);\n        }\n        this.lines.maxLength = newMaxLength;\n      }\n\n      // Make sure that the cursor stays on screen\n      this.x = Math.min(this.x, newCols - 1);\n      this.y = Math.min(this.y, newRows - 1);\n      if (addToY) {\n        this.y += addToY;\n      }\n      this.savedX = Math.min(this.savedX, newCols - 1);\n\n      this.scrollTop = 0;\n    }\n\n    this.scrollBottom = newRows - 1;\n\n    if (this._isReflowEnabled) {\n      this._reflow(newCols, newRows);\n\n      // Trim the end of the line off if cols shrunk\n      if (this._cols > newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          // +boolean for fast 0 or 1 conversion\n          dirtyMemoryLines += +this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n    }\n\n    this._cols = newCols;\n    this._rows = newRows;\n\n    this._memoryCleanupQueue.clear();\n    // schedule memory cleanup only, if more than 10% of the lines are affected\n    if (dirtyMemoryLines > 0.1 * this.lines.length) {\n      this._memoryCleanupPosition = 0;\n      this._memoryCleanupQueue.enqueue(() => this._batchedMemoryCleanup());\n    }\n  }\n\n  private _memoryCleanupQueue = new IdleTaskQueue();\n  private _memoryCleanupPosition = 0;\n\n  private _batchedMemoryCleanup(): boolean {\n    let normalRun = true;\n    if (this._memoryCleanupPosition >= this.lines.length) {\n      // cleanup made it once through all lines, thus rescan in loop below to also catch shifted lines,\n      // which should finish rather quick if there are no more cleanups pending\n      this._memoryCleanupPosition = 0;\n      normalRun = false;\n    }\n    let counted = 0;\n    while (this._memoryCleanupPosition < this.lines.length) {\n      counted += this.lines.get(this._memoryCleanupPosition++)!.cleanupMemory();\n      // cleanup max 100 lines per batch\n      if (counted > 100) {\n        return true;\n      }\n    }\n    // normal runs always need another rescan afterwards\n    // if we made it here with normalRun=false, we are in a final run\n    // and can end the cleanup task for sure\n    return normalRun;\n  }\n\n  private get _isReflowEnabled(): boolean {\n    return this._hasScrollback && !this._optionsService.rawOptions.windowsMode;\n  }\n\n  private _reflow(newCols: number, newRows: number): void {\n    if (this._cols === newCols) {\n      return;\n    }\n\n    // Iterate through rows, ignore the last one as it cannot be wrapped\n    if (newCols > this._cols) {\n      this._reflowLarger(newCols, newRows);\n    } else {\n      this._reflowSmaller(newCols, newRows);\n    }\n  }\n\n  private _reflowLarger(newCols: number, newRows: number): void {\n    const toRemove: number[] = reflowLargerGetLinesToRemove(this.lines, this._cols, newCols, this.ybase + this.y, this.getNullCell(DEFAULT_ATTR_DATA));\n    if (toRemove.length > 0) {\n      const newLayoutResult = reflowLargerCreateNewLayout(this.lines, toRemove);\n      reflowLargerApplyNewLayout(this.lines, newLayoutResult.layout);\n      this._reflowLargerAdjustViewport(newCols, newRows, newLayoutResult.countRemoved);\n    }\n  }\n\n  private _reflowLargerAdjustViewport(newCols: number, newRows: number, countRemoved: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Adjust viewport based on number of items removed\n    let viewportAdjustments = countRemoved;\n    while (viewportAdjustments-- > 0) {\n      if (this.ybase === 0) {\n        if (this.y > 0) {\n          this.y--;\n        }\n        if (this.lines.length < newRows) {\n          // Add an extra row at the bottom of the viewport\n          this.lines.push(new BufferLine(newCols, nullCell));\n        }\n      } else {\n        if (this.ydisp === this.ybase) {\n          this.ydisp--;\n        }\n        this.ybase--;\n      }\n    }\n    this.savedY = Math.max(this.savedY - countRemoved, 0);\n  }\n\n  private _reflowSmaller(newCols: number, newRows: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Gather all BufferLines that need to be inserted into the Buffer here so that they can be\n    // batched up and only committed once\n    const toInsert = [];\n    let countToInsert = 0;\n    // Go backwards as many lines may be trimmed and this will avoid considering them\n    for (let y = this.lines.length - 1; y >= 0; y--) {\n      // Check whether this line is a problem\n      let nextLine = this.lines.get(y) as BufferLine;\n      if (!nextLine || !nextLine.isWrapped && nextLine.getTrimmedLength() <= newCols) {\n        continue;\n      }\n\n      // Gather wrapped lines and adjust y to be the starting line\n      const wrappedLines: BufferLine[] = [nextLine];\n      while (nextLine.isWrapped && y > 0) {\n        nextLine = this.lines.get(--y) as BufferLine;\n        wrappedLines.unshift(nextLine);\n      }\n\n      // If these lines contain the cursor don't touch them, the program will handle fixing up\n      // wrapped lines with the cursor\n      const absoluteY = this.ybase + this.y;\n      if (absoluteY >= y && absoluteY < y + wrappedLines.length) {\n        continue;\n      }\n\n      const lastLineLength = wrappedLines[wrappedLines.length - 1].getTrimmedLength();\n      const destLineLengths = reflowSmallerGetNewLineLengths(wrappedLines, this._cols, newCols);\n      const linesToAdd = destLineLengths.length - wrappedLines.length;\n      let trimmedLines: number;\n      if (this.ybase === 0 && this.y !== this.lines.length - 1) {\n        // If the top section of the buffer is not yet filled\n        trimmedLines = Math.max(0, this.y - this.lines.maxLength + linesToAdd);\n      } else {\n        trimmedLines = Math.max(0, this.lines.length - this.lines.maxLength + linesToAdd);\n      }\n\n      // Add the new lines\n      const newLines: BufferLine[] = [];\n      for (let i = 0; i < linesToAdd; i++) {\n        const newLine = this.getBlankLine(DEFAULT_ATTR_DATA, true) as BufferLine;\n        newLines.push(newLine);\n      }\n      if (newLines.length > 0) {\n        toInsert.push({\n          // countToInsert here gets the actual index, taking into account other inserted items.\n          // using this we can iterate through the list forwards\n          start: y + wrappedLines.length + countToInsert,\n          newLines\n        });\n        countToInsert += newLines.length;\n      }\n      wrappedLines.push(...newLines);\n\n      // Copy buffer data to new locations, this needs to happen backwards to do in-place\n      let destLineIndex = destLineLengths.length - 1; // Math.floor(cellsNeeded / newCols);\n      let destCol = destLineLengths[destLineIndex]; // cellsNeeded % newCols;\n      if (destCol === 0) {\n        destLineIndex--;\n        destCol = destLineLengths[destLineIndex];\n      }\n      let srcLineIndex = wrappedLines.length - linesToAdd - 1;\n      let srcCol = lastLineLength;\n      while (srcLineIndex >= 0) {\n        const cellsToCopy = Math.min(srcCol, destCol);\n        if (wrappedLines[destLineIndex] === undefined) {\n          // Sanity check that the line exists, this has been known to fail for an unknown reason\n          // which would stop the reflow from happening if an exception would throw.\n          break;\n        }\n        wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol - cellsToCopy, destCol - cellsToCopy, cellsToCopy, true);\n        destCol -= cellsToCopy;\n        if (destCol === 0) {\n          destLineIndex--;\n          destCol = destLineLengths[destLineIndex];\n        }\n        srcCol -= cellsToCopy;\n        if (srcCol === 0) {\n          srcLineIndex--;\n          const wrappedLinesIndex = Math.max(srcLineIndex, 0);\n          srcCol = getWrappedLineTrimmedLength(wrappedLines, wrappedLinesIndex, this._cols);\n        }\n      }\n\n      // Null out the end of the line ends if a wide character wrapped to the following line\n      for (let i = 0; i < wrappedLines.length; i++) {\n        if (destLineLengths[i] < newCols) {\n          wrappedLines[i].setCell(destLineLengths[i], nullCell);\n        }\n      }\n\n      // Adjust viewport as needed\n      let viewportAdjustments = linesToAdd - trimmedLines;\n      while (viewportAdjustments-- > 0) {\n        if (this.ybase === 0) {\n          if (this.y < newRows - 1) {\n            this.y++;\n            this.lines.pop();\n          } else {\n            this.ybase++;\n            this.ydisp++;\n          }\n        } else {\n          // Ensure ybase does not exceed its maximum value\n          if (this.ybase < Math.min(this.lines.maxLength, this.lines.length + countToInsert) - newRows) {\n            if (this.ybase === this.ydisp) {\n              this.ydisp++;\n            }\n            this.ybase++;\n          }\n        }\n      }\n      this.savedY = Math.min(this.savedY + linesToAdd, this.ybase + newRows - 1);\n    }\n\n    // Rearrange lines in the buffer if there are any insertions, this is done at the end rather\n    // than earlier so that it's a single O(n) pass through the buffer, instead of O(n^2) from many\n    // costly calls to CircularList.splice.\n    if (toInsert.length > 0) {\n      // Record buffer insert events and then play them back backwards so that the indexes are\n      // correct\n      const insertEvents: IInsertEvent[] = [];\n\n      // Record original lines so they don't get overridden when we rearrange the list\n      const originalLines: BufferLine[] = [];\n      for (let i = 0; i < this.lines.length; i++) {\n        originalLines.push(this.lines.get(i) as BufferLine);\n      }\n      const originalLinesLength = this.lines.length;\n\n      let originalLineIndex = originalLinesLength - 1;\n      let nextToInsertIndex = 0;\n      let nextToInsert = toInsert[nextToInsertIndex];\n      this.lines.length = Math.min(this.lines.maxLength, this.lines.length + countToInsert);\n      let countInsertedSoFar = 0;\n      for (let i = Math.min(this.lines.maxLength - 1, originalLinesLength + countToInsert - 1); i >= 0; i--) {\n        if (nextToInsert && nextToInsert.start > originalLineIndex + countInsertedSoFar) {\n          // Insert extra lines here, adjusting i as needed\n          for (let nextI = nextToInsert.newLines.length - 1; nextI >= 0; nextI--) {\n            this.lines.set(i--, nextToInsert.newLines[nextI]);\n          }\n          i++;\n\n          // Create insert events for later\n          insertEvents.push({\n            index: originalLineIndex + 1,\n            amount: nextToInsert.newLines.length\n          });\n\n          countInsertedSoFar += nextToInsert.newLines.length;\n          nextToInsert = toInsert[++nextToInsertIndex];\n        } else {\n          this.lines.set(i, originalLines[originalLineIndex--]);\n        }\n      }\n\n      // Update markers\n      let insertCountEmitted = 0;\n      for (let i = insertEvents.length - 1; i >= 0; i--) {\n        insertEvents[i].index += insertCountEmitted;\n        this.lines.onInsertEmitter.fire(insertEvents[i]);\n        insertCountEmitted += insertEvents[i].amount;\n      }\n      const amountToTrim = Math.max(0, originalLinesLength + countToInsert - this.lines.maxLength);\n      if (amountToTrim > 0) {\n        this.lines.onTrimEmitter.fire(amountToTrim);\n      }\n    }\n  }\n\n  // private _reflowSmallerGetLinesNeeded()\n\n  /**\n   * Translates a string index back to a BufferIndex.\n   * To get the correct buffer position the string must start at `startCol` 0\n   * (default in translateBufferLineToString).\n   * The method also works on wrapped line strings given rows were not trimmed.\n   * The method operates on the CharData string length, there are no\n   * additional content or boundary checks. Therefore the string and the buffer\n   * should not be altered in between.\n   * TODO: respect trim flag after fixing #1685\n   * @param lineIndex line index the string was retrieved from\n   * @param stringIndex index within the string\n   * @param trimRight Whether to trim whitespace to the right.\n   */\n  public stringIndexToBufferIndex(lineIndex: number, stringIndex: number, trimRight: boolean = false): BufferIndex {\n    while (stringIndex) {\n      const line = this.lines.get(lineIndex);\n      if (!line) {\n        return [-1, -1];\n      }\n      const length = (trimRight) ? line.getTrimmedLength() : line.length;\n      for (let i = 0; i < length; ++i) {\n        if (line.get(i)[CHAR_DATA_WIDTH_INDEX]) {\n          // empty cells report a string length of 0, but get replaced\n          // with a whitespace in translateToString, thus replace with 1\n          stringIndex -= line.get(i)[CHAR_DATA_CHAR_INDEX].length || 1;\n        }\n        if (stringIndex < 0) {\n          return [lineIndex, i];\n        }\n      }\n      lineIndex++;\n    }\n    return [lineIndex, 0];\n  }\n\n  /**\n   * Translates a buffer line to a string, with optional start and end columns.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param lineIndex The absolute index of the line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param startCol The column to start at.\n   * @param endCol The column to end at.\n   */\n  public translateBufferLineToString(lineIndex: number, trimRight: boolean, startCol: number = 0, endCol?: number): string {\n    const line = this.lines.get(lineIndex);\n    if (!line) {\n      return '';\n    }\n    return line.translateToString(trimRight, startCol, endCol);\n  }\n\n  public getWrappedRangeForLine(y: number): { first: number, last: number } {\n    let first = y;\n    let last = y;\n    // Scan upwards for wrapped lines\n    while (first > 0 && this.lines.get(first)!.isWrapped) {\n      first--;\n    }\n    // Scan downwards for wrapped lines\n    while (last + 1 < this.lines.length && this.lines.get(last + 1)!.isWrapped) {\n      last++;\n    }\n    return { first, last };\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    if (i !== null && i !== undefined) {\n      if (!this.tabs[i]) {\n        i = this.prevStop(i);\n      }\n    } else {\n      this.tabs = {};\n      i = 0;\n    }\n\n    for (; i < this._cols; i += this._optionsService.rawOptions.tabStopWidth) {\n      this.tabs[i] = true;\n    }\n  }\n\n  /**\n   * Move the cursor to the previous tab stop from the given position (default is current).\n   * @param x The position to move the cursor to the previous tab stop.\n   */\n  public prevStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[--x] && x > 0);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Move the cursor one tab stop forward from the given position (default is current).\n   * @param x The position to move the cursor one tab stop forward.\n   */\n  public nextStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[++x] && x < this._cols);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Clears markers on single line.\n   * @param y The line to clear.\n   */\n  public clearMarkers(y: number): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      if (this.markers[i].line === y) {\n        this.markers[i].dispose();\n        this.markers.splice(i--, 1);\n      }\n    }\n    this._isClearing = false;\n  }\n\n  /**\n   * Clears markers on all lines\n   */\n  public clearAllMarkers(): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      this.markers[i].dispose();\n      this.markers.splice(i--, 1);\n    }\n    this._isClearing = false;\n  }\n\n  public addMarker(y: number): Marker {\n    const marker = new Marker(y);\n    this.markers.push(marker);\n    marker.register(this.lines.onTrim(amount => {\n      marker.line -= amount;\n      // The marker should be disposed when the line is trimmed from the buffer\n      if (marker.line < 0) {\n        marker.dispose();\n      }\n    }));\n    marker.register(this.lines.onInsert(event => {\n      if (marker.line >= event.index) {\n        marker.line += event.amount;\n      }\n    }));\n    marker.register(this.lines.onDelete(event => {\n      // Delete the marker if it's within the range\n      if (marker.line >= event.index && marker.line < event.index + event.amount) {\n        marker.dispose();\n      }\n\n      // Shift the marker if it's after the deleted range\n      if (marker.line > event.index) {\n        marker.line -= event.amount;\n      }\n    }));\n    marker.register(marker.onDispose(() => this._removeMarker(marker)));\n    return marker;\n  }\n\n  private _removeMarker(marker: Marker): void {\n    if (!this._isClearing) {\n      this.markers.splice(this.markers.indexOf(marker), 1);\n    }\n  }\n\n  public iterator(trimRight: boolean, startIndex?: number, endIndex?: number, startOverscan?: number, endOverscan?: number): IBufferStringIterator {\n    return new BufferStringIterator(this, trimRight, startIndex, endIndex, startOverscan, endOverscan);\n  }\n}\n\n/**\n * Iterator to get unwrapped content strings from the buffer.\n * The iterator returns at least the string data between the borders\n * `startIndex` and `endIndex` (exclusive) and will expand the lines\n * by `startOverscan` to the top and by `endOverscan` to the bottom,\n * if no new line was found in between.\n * It will never read/return string data beyond `startIndex - startOverscan`\n * or `endIndex + endOverscan`. Therefore the first and last line might be truncated.\n * It is possible to always get the full string for the first and last line as well\n * by setting the overscan values to the actual buffer length. This not recommended\n * since it might return the whole buffer within a single string in a worst case scenario.\n */\nexport class BufferStringIterator implements IBufferStringIterator {\n  private _current: number;\n\n  constructor(\n    private _buffer: IBuffer,\n    private _trimRight: boolean,\n    private _startIndex: number = 0,\n    private _endIndex: number = _buffer.lines.length,\n    private _startOverscan: number = 0,\n    private _endOverscan: number = 0\n  ) {\n    if (this._startIndex < 0) {\n      this._startIndex = 0;\n    }\n    if (this._endIndex > this._buffer.lines.length) {\n      this._endIndex = this._buffer.lines.length;\n    }\n    this._current = this._startIndex;\n  }\n\n  public hasNext(): boolean {\n    return this._current < this._endIndex;\n  }\n\n  public next(): IBufferStringIteratorResult {\n    const range = this._buffer.getWrappedRangeForLine(this._current);\n    // limit search window to overscan value at both borders\n    if (range.first < this._startIndex - this._startOverscan) {\n      range.first = this._startIndex - this._startOverscan;\n    }\n    if (range.last > this._endIndex + this._endOverscan) {\n      range.last = this._endIndex + this._endOverscan;\n    }\n    // limit to current buffer length\n    range.first = Math.max(range.first, 0);\n    range.last = Math.min(range.last, this._buffer.lines.length);\n    let content = '';\n    for (let i = range.first; i <= range.last; ++i) {\n      content += this._buffer.translateBufferLineToString(i, this._trimRight);\n    }\n    this._current = range.last + 1;\n    return { range, content };\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, IBufferLine, ICellData, IAttributeData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Content, BgFlags, FgFlags } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * buffer memory layout:\n *\n *   |             uint32_t             |        uint32_t         |        uint32_t         |\n *   |             `content`            |          `FG`           |          `BG`           |\n *   | wcwidth(2) comb(1) codepoint(21) | flags(8) R(8) G(8) B(8) | flags(8) R(8) G(8) B(8) |\n */\n\n\n/** typed array slots taken by one cell */\nconst CELL_SIZE = 3;\n\n/**\n * Cell member indices.\n *\n * Direct access:\n *    `content = data[column * CELL_SIZE + Cell.CONTENT];`\n *    `fg = data[column * CELL_SIZE + Cell.FG];`\n *    `bg = data[column * CELL_SIZE + Cell.BG];`\n */\nconst enum Cell {\n  CONTENT = 0,\n  FG = 1, // currently simply holds all known attrs\n  BG = 2  // currently unused\n}\n\nexport const DEFAULT_ATTR_DATA = Object.freeze(new AttributeData());\n\n// Work variables to avoid garbage collection\nlet $startIndex = 0;\n\n/** Factor when to cleanup underlying array buffer after shrinking. */\nconst CLEANUP_THRESHOLD = 2;\n\n/**\n * Typed array based bufferline implementation.\n *\n * There are 2 ways to insert data into the cell buffer:\n * - `setCellFromCodepoint` + `addCodepointToCell`\n *   Use these for data that is already UTF32.\n *   Used during normal input in `InputHandler` for faster buffer access.\n * - `setCell`\n *   This method takes a CellData object and stores the data in the buffer.\n *   Use `CellData.fromCharData` to create the CellData object (e.g. from JS string).\n *\n * To retrieve data from the buffer use either one of the primitive methods\n * (if only one particular value is needed) or `loadCell`. For `loadCell` in a loop\n * memory allocs / GC pressure can be greatly reduced by reusing the CellData object.\n */\nexport class BufferLine implements IBufferLine {\n  protected _data: Uint32Array;\n  protected _combined: {[index: number]: string} = {};\n  protected _extendedAttrs: {[index: number]: IExtendedAttrs | undefined} = {};\n  public length: number;\n\n  constructor(cols: number, fillCellData?: ICellData, public isWrapped: boolean = false) {\n    this._data = new Uint32Array(cols * CELL_SIZE);\n    const cell = fillCellData || CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n    for (let i = 0; i < cols; ++i) {\n      this.setCell(i, cell);\n    }\n    this.length = cols;\n  }\n\n  /**\n   * Get cell data CharData.\n   * @deprecated\n   */\n  public get(index: number): CharData {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    const cp = content & Content.CODEPOINT_MASK;\n    return [\n      this._data[index * CELL_SIZE + Cell.FG],\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index]\n        : (cp) ? stringFromCodePoint(cp) : '',\n      content >> Content.WIDTH_SHIFT,\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index].charCodeAt(this._combined[index].length - 1)\n        : cp\n    ];\n  }\n\n  /**\n   * Set cell data from CharData.\n   * @deprecated\n   */\n  public set(index: number, value: CharData): void {\n    this._data[index * CELL_SIZE + Cell.FG] = value[CHAR_DATA_ATTR_INDEX];\n    if (value[CHAR_DATA_CHAR_INDEX].length > 1) {\n      this._combined[index] = value[1];\n      this._data[index * CELL_SIZE + Cell.CONTENT] = index | Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    } else {\n      this._data[index * CELL_SIZE + Cell.CONTENT] = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n\n  /**\n   * primitive getters\n   * use these when only one value is needed, otherwise use `loadCell`\n   */\n  public getWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT;\n  }\n\n  /** Test whether content has width. */\n  public hasWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.WIDTH_MASK;\n  }\n\n  /** Get FG cell component. */\n  public getFg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.FG];\n  }\n\n  /** Get BG cell component. */\n  public getBg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG];\n  }\n\n  /**\n   * Test whether contains any chars.\n   * Basically an empty has no content, but other cells might differ in FG/BG\n   * from real empty cells.\n   */\n  public hasContent(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK;\n  }\n\n  /**\n   * Get codepoint of the cell.\n   * To be in line with `code` in CharData this either returns\n   * a single UTF32 codepoint or the last codepoint of a combined string.\n   */\n  public getCodePoint(index: number): number {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index].charCodeAt(this._combined[index].length - 1);\n    }\n    return content & Content.CODEPOINT_MASK;\n  }\n\n  /** Test whether the cell contains a combined string. */\n  public isCombined(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.IS_COMBINED_MASK;\n  }\n\n  /** Returns the string content of the cell. */\n  public getString(index: number): string {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index];\n    }\n    if (content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(content & Content.CODEPOINT_MASK);\n    }\n    // return empty string for empty cells\n    return '';\n  }\n\n  /** Get state of protected flag. */\n  public isProtected(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG] & BgFlags.PROTECTED;\n  }\n\n  /**\n   * Load data at `index` into `cell`. This is used to access cells in a way that's more friendly\n   * to GC as it significantly reduced the amount of new objects/references needed.\n   */\n  public loadCell(index: number, cell: ICellData): ICellData {\n    $startIndex = index * CELL_SIZE;\n    cell.content = this._data[$startIndex + Cell.CONTENT];\n    cell.fg = this._data[$startIndex + Cell.FG];\n    cell.bg = this._data[$startIndex + Cell.BG];\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      cell.combinedData = this._combined[index];\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      cell.extended = this._extendedAttrs[index]!;\n    }\n    return cell;\n  }\n\n  /**\n   * Set data at `index` to `cell`.\n   */\n  public setCell(index: number, cell: ICellData): void {\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      this._combined[index] = cell.combinedData;\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = cell.extended;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = cell.content;\n    this._data[index * CELL_SIZE + Cell.FG] = cell.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = cell.bg;\n  }\n\n  /**\n   * Set cell data from input handler.\n   * Since the input handler see the incoming chars as UTF32 codepoints,\n   * it gets an optimized access method.\n   */\n  public setCellFromCodePoint(index: number, codePoint: number, width: number, fg: number, bg: number, eAttrs: IExtendedAttrs): void {\n    if (bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = eAttrs;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = codePoint | (width << Content.WIDTH_SHIFT);\n    this._data[index * CELL_SIZE + Cell.FG] = fg;\n    this._data[index * CELL_SIZE + Cell.BG] = bg;\n  }\n\n  /**\n   * Add a codepoint to a cell from input handler.\n   * During input stage combining chars with a width of 0 follow and stack\n   * onto a leading char. Since we already set the attrs\n   * by the previous `setDataFromCodePoint` call, we can omit it here.\n   */\n  public addCodepointToCell(index: number, codePoint: number): void {\n    let content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      // we already have a combined string, simply add\n      this._combined[index] += stringFromCodePoint(codePoint);\n    } else {\n      if (content & Content.CODEPOINT_MASK) {\n        // normal case for combining chars:\n        //  - move current leading char + new one into combined string\n        //  - set combined flag\n        this._combined[index] = stringFromCodePoint(content & Content.CODEPOINT_MASK) + stringFromCodePoint(codePoint);\n        content &= ~Content.CODEPOINT_MASK; // set codepoint in buffer to 0\n        content |= Content.IS_COMBINED_MASK;\n      } else {\n        // should not happen - we actually have no data in the cell yet\n        // simply set the data in the cell buffer with a width of 1\n        content = codePoint | (1 << Content.WIDTH_SHIFT);\n      }\n      this._data[index * CELL_SIZE + Cell.CONTENT] = content;\n    }\n  }\n\n  public insertCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n\n    // handle fullwidth at pos: reset cell one to the left if pos is second cell of a wide char\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = this.length - pos - n - 1; i >= 0; --i) {\n        this.setCell(pos + n + i, this.loadCell(pos + i, cell));\n      }\n      for (let i = 0; i < n; ++i) {\n        this.setCell(pos + i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at line end: reset last cell if it is first cell of a wide char\n    if (this.getWidth(this.length - 1) === 2) {\n      this.setCellFromCodePoint(this.length - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public deleteCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = 0; i < this.length - pos - n; ++i) {\n        this.setCell(pos + i, this.loadCell(pos + n + i, cell));\n      }\n      for (let i = this.length - n; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at pos:\n    // - reset pos-1 if wide char\n    // - reset pos if width==0 (previous second cell of a wide char)\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    if (this.getWidth(pos) === 0 && !this.hasContent(pos)) {\n      this.setCellFromCodePoint(pos, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public replaceCells(start: number, end: number, fillCellData: ICellData, eraseAttr?: IAttributeData, respectProtect: boolean = false): void {\n    // full branching on respectProtect==true, hopefully getting fast JIT for standard case\n    if (respectProtect) {\n      if (start && this.getWidth(start - 1) === 2 && !this.isProtected(start - 1)) {\n        this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n      }\n      if (end < this.length && this.getWidth(end - 1) === 2 && !this.isProtected(end)) {\n        this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n      }\n      while (start < end  && start < this.length) {\n        if (!this.isProtected(start)) {\n          this.setCell(start, fillCellData);\n        }\n        start++;\n      }\n      return;\n    }\n\n    // handle fullwidth at start: reset cell one to the left if start is second cell of a wide char\n    if (start && this.getWidth(start - 1) === 2) {\n      this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    // handle fullwidth at last cell + 1: reset to empty cell if it is second part of a wide char\n    if (end < this.length && this.getWidth(end - 1) === 2) {\n      this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    while (start < end  && start < this.length) {\n      this.setCell(start++, fillCellData);\n    }\n  }\n\n  /**\n   * Resize BufferLine to `cols` filling excess cells with `fillCellData`.\n   * The underlying array buffer will not change if there is still enough space\n   * to hold the new buffer line data.\n   * Returns a boolean indicating, whether a `cleanupMemory` call would free\n   * excess memory (true after shrinking > CLEANUP_THRESHOLD).\n   */\n  public resize(cols: number, fillCellData: ICellData): boolean {\n    if (cols === this.length) {\n      return this._data.length * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength;\n    }\n    const uint32Cells = cols * CELL_SIZE;\n    if (cols > this.length) {\n      if (this._data.buffer.byteLength >= uint32Cells * 4) {\n        // optimization: avoid alloc and data copy if buffer has enough room\n        this._data = new Uint32Array(this._data.buffer, 0, uint32Cells);\n      } else {\n        // slow path: new alloc and full data copy\n        const data = new Uint32Array(uint32Cells);\n        data.set(this._data);\n        this._data = data;\n      }\n      for (let i = this.length; i < cols; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      // optimization: just shrink the view on existing buffer\n      this._data = this._data.subarray(0, uint32Cells);\n      // Remove any cut off combined data\n      const keys = Object.keys(this._combined);\n      for (let i = 0; i < keys.length; i++) {\n        const key = parseInt(keys[i], 10);\n        if (key >= cols) {\n          delete this._combined[key];\n        }\n      }\n      // remove any cut off extended attributes\n      const extKeys = Object.keys(this._extendedAttrs);\n      for (let i = 0; i < extKeys.length; i++) {\n        const key = parseInt(extKeys[i], 10);\n        if (key >= cols) {\n          delete this._extendedAttrs[key];\n        }\n      }\n    }\n    this.length = cols;\n    return uint32Cells * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength;\n  }\n\n  /**\n   * Cleanup underlying array buffer.\n   * A cleanup will be triggered if the array buffer exceeds the actual used\n   * memory by a factor of CLEANUP_THRESHOLD.\n   * Returns 0 or 1 indicating whether a cleanup happened.\n   */\n  public cleanupMemory(): number {\n    if (this._data.length * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength) {\n      const data = new Uint32Array(this._data.length);\n      data.set(this._data);\n      this._data = data;\n      return 1;\n    }\n    return 0;\n  }\n\n  /** fill a line with fillCharData */\n  public fill(fillCellData: ICellData, respectProtect: boolean = false): void {\n    // full branching on respectProtect==true, hopefully getting fast JIT for standard case\n    if (respectProtect) {\n      for (let i = 0; i < this.length; ++i) {\n        if (!this.isProtected(i)) {\n          this.setCell(i, fillCellData);\n        }\n      }\n      return;\n    }\n    this._combined = {};\n    this._extendedAttrs = {};\n    for (let i = 0; i < this.length; ++i) {\n      this.setCell(i, fillCellData);\n    }\n  }\n\n  /** alter to a full copy of line  */\n  public copyFrom(line: BufferLine): void {\n    if (this.length !== line.length) {\n      this._data = new Uint32Array(line._data);\n    } else {\n      // use high speed copy if lengths are equal\n      this._data.set(line._data);\n    }\n    this.length = line.length;\n    this._combined = {};\n    for (const el in line._combined) {\n      this._combined[el] = line._combined[el];\n    }\n    this._extendedAttrs = {};\n    for (const el in line._extendedAttrs) {\n      this._extendedAttrs[el] = line._extendedAttrs[el];\n    }\n    this.isWrapped = line.isWrapped;\n  }\n\n  /** create a new clone */\n  public clone(): IBufferLine {\n    const newLine = new BufferLine(0);\n    newLine._data = new Uint32Array(this._data);\n    newLine.length = this.length;\n    for (const el in this._combined) {\n      newLine._combined[el] = this._combined[el];\n    }\n    for (const el in this._extendedAttrs) {\n      newLine._extendedAttrs[el] = this._extendedAttrs[el];\n    }\n    newLine.isWrapped = this.isWrapped;\n    return newLine;\n  }\n\n  public getTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public copyCellsFrom(src: BufferLine, srcCol: number, destCol: number, length: number, applyInReverse: boolean): void {\n    const srcData = src._data;\n    if (applyInReverse) {\n      for (let cell = length - 1; cell >= 0; cell--) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n        if (srcData[(srcCol + cell) * CELL_SIZE + Cell.BG] & BgFlags.HAS_EXTENDED) {\n          this._extendedAttrs[destCol + cell] = src._extendedAttrs[srcCol + cell];\n        }\n      }\n    } else {\n      for (let cell = 0; cell < length; cell++) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n        if (srcData[(srcCol + cell) * CELL_SIZE + Cell.BG] & BgFlags.HAS_EXTENDED) {\n          this._extendedAttrs[destCol + cell] = src._extendedAttrs[srcCol + cell];\n        }\n      }\n    }\n\n    // Move any combined data over as needed, FIXME: repeat for extended attrs\n    const srcCombinedKeys = Object.keys(src._combined);\n    for (let i = 0; i < srcCombinedKeys.length; i++) {\n      const key = parseInt(srcCombinedKeys[i], 10);\n      if (key >= srcCol) {\n        this._combined[key - srcCol + destCol] = src._combined[key];\n      }\n    }\n  }\n\n  public translateToString(trimRight: boolean = false, startCol: number = 0, endCol: number = this.length): string {\n    if (trimRight) {\n      endCol = Math.min(endCol, this.getTrimmedLength());\n    }\n    let result = '';\n    while (startCol < endCol) {\n      const content = this._data[startCol * CELL_SIZE + Cell.CONTENT];\n      const cp = content & Content.CODEPOINT_MASK;\n      result += (content & Content.IS_COMBINED_MASK) ? this._combined[startCol] : (cp) ? stringFromCodePoint(cp) : WHITESPACE_CELL_CHAR;\n      startCol += (content >> Content.WIDTH_SHIFT) || 1; // always advance by 1\n    }\n    return result;\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange } from 'xterm';\n\nexport function getRangeLength(range: IBufferRange, bufferCols: number): number {\n  if (range.start.y > range.end.y) {\n    throw new Error(`Buffer range end (${range.end.x}, ${range.end.y}) cannot be before start (${range.start.x}, ${range.start.y})`);\n  }\n  return bufferCols * (range.end.y - range.start.y) + (range.end.x - range.start.x + 1);\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { BufferLine } from 'common/buffer/BufferLine';\nimport { CircularList } from 'common/CircularList';\nimport { IBufferLine, ICellData } from 'common/Types';\n\nexport interface INewLayoutResult {\n  layout: number[];\n  countRemoved: number;\n}\n\n/**\n * Evaluates and returns indexes to be removed after a reflow larger occurs. Lines will be removed\n * when a wrapped line unwraps.\n * @param lines The buffer lines.\n * @param oldCols The columns before resize\n * @param newCols The columns after resize.\n * @param bufferAbsoluteY The absolute y position of the cursor (baseY + cursorY).\n * @param nullCell The cell data to use when filling in empty cells.\n */\nexport function reflowLargerGetLinesToRemove(lines: CircularList<IBufferLine>, oldCols: number, newCols: number, bufferAbsoluteY: number, nullCell: ICellData): number[] {\n  // Gather all BufferLines that need to be removed from the Buffer here so that they can be\n  // batched up and only committed once\n  const toRemove: number[] = [];\n\n  for (let y = 0; y < lines.length - 1; y++) {\n    // Check if this row is wrapped\n    let i = y;\n    let nextLine = lines.get(++i) as BufferLine;\n    if (!nextLine.isWrapped) {\n      continue;\n    }\n\n    // Check how many lines it's wrapped for\n    const wrappedLines: BufferLine[] = [lines.get(y) as BufferLine];\n    while (i < lines.length && nextLine.isWrapped) {\n      wrappedLines.push(nextLine);\n      nextLine = lines.get(++i) as BufferLine;\n    }\n\n    // If these lines contain the cursor don't touch them, the program will handle fixing up wrapped\n    // lines with the cursor\n    if (bufferAbsoluteY >= y && bufferAbsoluteY < i) {\n      y += wrappedLines.length - 1;\n      continue;\n    }\n\n    // Copy buffer data to new locations\n    let destLineIndex = 0;\n    let destCol = getWrappedLineTrimmedLength(wrappedLines, destLineIndex, oldCols);\n    let srcLineIndex = 1;\n    let srcCol = 0;\n    while (srcLineIndex < wrappedLines.length) {\n      const srcTrimmedTineLength = getWrappedLineTrimmedLength(wrappedLines, srcLineIndex, oldCols);\n      const srcRemainingCells = srcTrimmedTineLength - srcCol;\n      const destRemainingCells = newCols - destCol;\n      const cellsToCopy = Math.min(srcRemainingCells, destRemainingCells);\n\n      wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol, destCol, cellsToCopy, false);\n\n      destCol += cellsToCopy;\n      if (destCol === newCols) {\n        destLineIndex++;\n        destCol = 0;\n      }\n      srcCol += cellsToCopy;\n      if (srcCol === srcTrimmedTineLength) {\n        srcLineIndex++;\n        srcCol = 0;\n      }\n\n      // Make sure the last cell isn't wide, if it is copy it to the current dest\n      if (destCol === 0 && destLineIndex !== 0) {\n        if (wrappedLines[destLineIndex - 1].getWidth(newCols - 1) === 2) {\n          wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[destLineIndex - 1], newCols - 1, destCol++, 1, false);\n          // Null out the end of the last row\n          wrappedLines[destLineIndex - 1].setCell(newCols - 1, nullCell);\n        }\n      }\n    }\n\n    // Clear out remaining cells or fragments could remain;\n    wrappedLines[destLineIndex].replaceCells(destCol, newCols, nullCell);\n\n    // Work backwards and remove any rows at the end that only contain null cells\n    let countToRemove = 0;\n    for (let i = wrappedLines.length - 1; i > 0; i--) {\n      if (i > destLineIndex || wrappedLines[i].getTrimmedLength() === 0) {\n        countToRemove++;\n      } else {\n        break;\n      }\n    }\n\n    if (countToRemove > 0) {\n      toRemove.push(y + wrappedLines.length - countToRemove); // index\n      toRemove.push(countToRemove);\n    }\n\n    y += wrappedLines.length - 1;\n  }\n  return toRemove;\n}\n\n/**\n * Creates and return the new layout for lines given an array of indexes to be removed.\n * @param lines The buffer lines.\n * @param toRemove The indexes to remove.\n */\nexport function reflowLargerCreateNewLayout(lines: CircularList<IBufferLine>, toRemove: number[]): INewLayoutResult {\n  const layout: number[] = [];\n  // First iterate through the list and get the actual indexes to use for rows\n  let nextToRemoveIndex = 0;\n  let nextToRemoveStart = toRemove[nextToRemoveIndex];\n  let countRemovedSoFar = 0;\n  for (let i = 0; i < lines.length; i++) {\n    if (nextToRemoveStart === i) {\n      const countToRemove = toRemove[++nextToRemoveIndex];\n\n      // Tell markers that there was a deletion\n      lines.onDeleteEmitter.fire({\n        index: i - countRemovedSoFar,\n        amount: countToRemove\n      });\n\n      i += countToRemove - 1;\n      countRemovedSoFar += countToRemove;\n      nextToRemoveStart = toRemove[++nextToRemoveIndex];\n    } else {\n      layout.push(i);\n    }\n  }\n  return {\n    layout,\n    countRemoved: countRemovedSoFar\n  };\n}\n\n/**\n * Applies a new layout to the buffer. This essentially does the same as many splice calls but it's\n * done all at once in a single iteration through the list since splice is very expensive.\n * @param lines The buffer lines.\n * @param newLayout The new layout to apply.\n */\nexport function reflowLargerApplyNewLayout(lines: CircularList<IBufferLine>, newLayout: number[]): void {\n  // Record original lines so they don't get overridden when we rearrange the list\n  const newLayoutLines: BufferLine[] = [];\n  for (let i = 0; i < newLayout.length; i++) {\n    newLayoutLines.push(lines.get(newLayout[i]) as BufferLine);\n  }\n\n  // Rearrange the list\n  for (let i = 0; i < newLayoutLines.length; i++) {\n    lines.set(i, newLayoutLines[i]);\n  }\n  lines.length = newLayout.length;\n}\n\n/**\n * Gets the new line lengths for a given wrapped line. The purpose of this function it to pre-\n * compute the wrapping points since wide characters may need to be wrapped onto the following line.\n * This function will return an array of numbers of where each line wraps to, the resulting array\n * will only contain the values `newCols` (when the line does not end with a wide character) and\n * `newCols - 1` (when the line does end with a wide character), except for the last value which\n * will contain the remaining items to fill the line.\n *\n * Calling this with a `newCols` value of `1` will lock up.\n *\n * @param wrappedLines The wrapped lines to evaluate.\n * @param oldCols The columns before resize.\n * @param newCols The columns after resize.\n */\nexport function reflowSmallerGetNewLineLengths(wrappedLines: BufferLine[], oldCols: number, newCols: number): number[] {\n  const newLineLengths: number[] = [];\n  const cellsNeeded = wrappedLines.map((l, i) => getWrappedLineTrimmedLength(wrappedLines, i, oldCols)).reduce((p, c) => p + c);\n\n  // Use srcCol and srcLine to find the new wrapping point, use that to get the cellsAvailable and\n  // linesNeeded\n  let srcCol = 0;\n  let srcLine = 0;\n  let cellsAvailable = 0;\n  while (cellsAvailable < cellsNeeded) {\n    if (cellsNeeded - cellsAvailable < newCols) {\n      // Add the final line and exit the loop\n      newLineLengths.push(cellsNeeded - cellsAvailable);\n      break;\n    }\n    srcCol += newCols;\n    const oldTrimmedLength = getWrappedLineTrimmedLength(wrappedLines, srcLine, oldCols);\n    if (srcCol > oldTrimmedLength) {\n      srcCol -= oldTrimmedLength;\n      srcLine++;\n    }\n    const endsWithWide = wrappedLines[srcLine].getWidth(srcCol - 1) === 2;\n    if (endsWithWide) {\n      srcCol--;\n    }\n    const lineLength = endsWithWide ? newCols - 1 : newCols;\n    newLineLengths.push(lineLength);\n    cellsAvailable += lineLength;\n  }\n\n  return newLineLengths;\n}\n\nexport function getWrappedLineTrimmedLength(lines: BufferLine[], i: number, cols: number): number {\n  // If this is the last row in the wrapped line, get the actual trimmed length\n  if (i === lines.length - 1) {\n    return lines[i].getTrimmedLength();\n  }\n  // Detect whether the following line starts with a wide character and the end of the current line\n  // is null, if so then we can be pretty sure the null character should be excluded from the line\n  // length]\n  const endsInNull = !(lines[i].hasContent(cols - 1)) && lines[i].getWidth(cols - 1) === 1;\n  const followingLineStartsWithWide = lines[i + 1].getWidth(0) === 2;\n  if (endsInNull && followingLineStartsWithWide) {\n    return cols - 1;\n  }\n  return cols;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IAttributeData } from 'common/Types';\nimport { Buffer } from 'common/buffer/Buffer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * The BufferSet represents the set of two buffers used by xterm terminals (normal and alt) and\n * provides also utilities for working with them.\n */\nexport class BufferSet extends Disposable implements IBufferSet {\n  private _normal!: Buffer;\n  private _alt!: Buffer;\n  private _activeBuffer!: Buffer;\n\n  private readonly _onBufferActivate = this.register(new EventEmitter<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}>());\n  public readonly onBufferActivate = this._onBufferActivate.event;\n\n  /**\n   * Create a new BufferSet for the given terminal.\n   */\n  constructor(\n    private readonly _optionsService: IOptionsService,\n    private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.reset();\n    this.register(this._optionsService.onSpecificOptionChange('scrollback', () => this.resize(this._bufferService.cols, this._bufferService.rows)));\n    this.register(this._optionsService.onSpecificOptionChange('tabStopWidth', () => this.setupTabStops()));\n  }\n\n  public reset(): void {\n    this._normal = new Buffer(true, this._optionsService, this._bufferService);\n    this._normal.fillViewportRows();\n\n    // The alt buffer should never have scrollback.\n    // See http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-The-Alternate-Screen-Buffer\n    this._alt = new Buffer(false, this._optionsService, this._bufferService);\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n\n    this.setupTabStops();\n  }\n\n  /**\n   * Returns the alt Buffer of the BufferSet\n   */\n  public get alt(): Buffer {\n    return this._alt;\n  }\n\n  /**\n   * Returns the currently active Buffer of the BufferSet\n   */\n  public get active(): Buffer {\n    return this._activeBuffer;\n  }\n\n  /**\n   * Returns the normal Buffer of the BufferSet\n   */\n  public get normal(): Buffer {\n    return this._normal;\n  }\n\n  /**\n   * Sets the normal Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateNormalBuffer(): void {\n    if (this._activeBuffer === this._normal) {\n      return;\n    }\n    this._normal.x = this._alt.x;\n    this._normal.y = this._alt.y;\n    // The alt buffer should always be cleared when we switch to the normal\n    // buffer. This frees up memory since the alt buffer should always be new\n    // when activated.\n    this._alt.clearAllMarkers();\n    this._alt.clear();\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n  }\n\n  /**\n   * Sets the alt Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateAltBuffer(fillAttr?: IAttributeData): void {\n    if (this._activeBuffer === this._alt) {\n      return;\n    }\n    // Since the alt buffer is always cleared when the normal buffer is\n    // activated, we want to fill it when switching to it.\n    this._alt.fillViewportRows(fillAttr);\n    this._alt.x = this._normal.x;\n    this._alt.y = this._normal.y;\n    this._activeBuffer = this._alt;\n    this._onBufferActivate.fire({\n      activeBuffer: this._alt,\n      inactiveBuffer: this._normal\n    });\n  }\n\n  /**\n   * Resizes both normal and alt buffers, adjusting their data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    this._normal.resize(newCols, newRows);\n    this._alt.resize(newCols, newRows);\n    this.setupTabStops(newCols);\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    this._normal.setupTabStops(i);\n    this._alt.setupTabStops(i);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content = 0;\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n  public combinedData = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 0;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\nexport const DEFAULT_EXT = 0;\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..32\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000,\n  STRIKETHROUGH = 0x80000000,\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 2 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000,\n  HAS_EXTENDED = 0x10000000,\n  PROTECTED = 0x20000000\n}\n\nexport const enum ExtFlags {\n  /**\n   * bit 27..32 (upper 3 unused)\n   */\n  UNDERLINE_STYLE = 0x1C000000\n}\n\nexport const enum UnderlineStyle {\n  NONE = 0,\n  SINGLE = 1,\n  DOUBLE = 2,\n  CURLY = 3,\n  DOTTED = 4,\n  DASHED = 5\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { disposeArray } from 'common/Lifecycle';\nimport { IDisposable, IMarker } from 'common/Types';\n\nexport class Marker implements IMarker {\n  private static _nextId = 1;\n\n  public isDisposed: boolean = false;\n  private _disposables: IDisposable[] = [];\n\n  private _id: number = Marker._nextId++;\n  public get id(): number { return this._id; }\n\n  private readonly _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  constructor(\n    public line: number\n  ) {\n  }\n\n  public dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.isDisposed = true;\n    this.line = -1;\n    // Emit before super.dispose such that dispose listeners get a change to react\n    this._onDispose.fire();\n    disposeArray(this._disposables);\n    this._disposables.length = 0;\n  }\n\n  public register<T extends IDisposable>(disposable: T): T {\n    this._disposables.push(disposable);\n    return disposable;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharset } from 'common/Types';\n\n/**\n * The character sets supported by the terminal. These enable several languages\n * to be represented within the terminal with only 8-bit encoding. See ISO 2022\n * for a discussion on character sets. Only VT100 character sets are supported.\n */\nexport const CHARSETS: { [key: string]: ICharset | undefined } = {};\n\n/**\n * The default character set, US.\n */\nexport const DEFAULT_CHARSET: ICharset | undefined = CHARSETS['B'];\n\n/**\n * DEC Special Character and Line Drawing Set.\n * Reference: http://vt100.net/docs/vt102-ug/table5-13.html\n * A lot of curses apps use this if they see TERM=xterm.\n * testing: echo -e '\\e(0a\\e(B'\n * The xterm output sometimes seems to conflict with the\n * reference above. xterm seems in line with the reference\n * when running vttest however.\n * The table below now uses xterm's output from vttest.\n */\nCHARSETS['0'] = {\n  '`': '\\u25c6', // '◆'\n  'a': '\\u2592', // '▒'\n  'b': '\\u2409', // '␉' (HT)\n  'c': '\\u240c', // '␌' (FF)\n  'd': '\\u240d', // '␍' (CR)\n  'e': '\\u240a', // '␊' (LF)\n  'f': '\\u00b0', // '°'\n  'g': '\\u00b1', // '±'\n  'h': '\\u2424', // '␤' (NL)\n  'i': '\\u240b', // '␋' (VT)\n  'j': '\\u2518', // '┘'\n  'k': '\\u2510', // '┐'\n  'l': '\\u250c', // '┌'\n  'm': '\\u2514', // '└'\n  'n': '\\u253c', // '┼'\n  'o': '\\u23ba', // '⎺'\n  'p': '\\u23bb', // '⎻'\n  'q': '\\u2500', // '─'\n  'r': '\\u23bc', // '⎼'\n  's': '\\u23bd', // '⎽'\n  't': '\\u251c', // '├'\n  'u': '\\u2524', // '┤'\n  'v': '\\u2534', // '┴'\n  'w': '\\u252c', // '┬'\n  'x': '\\u2502', // '│'\n  'y': '\\u2264', // '≤'\n  'z': '\\u2265', // '≥'\n  '{': '\\u03c0', // 'π'\n  '|': '\\u2260', // '≠'\n  '}': '\\u00a3', // '£'\n  '~': '\\u00b7'  // '·'\n};\n\n/**\n * British character set\n * ESC (A\n * Reference: http://vt100.net/docs/vt220-rm/table2-5.html\n */\nCHARSETS['A'] = {\n  '#': '£'\n};\n\n/**\n * United States character set\n * ESC (B\n */\nCHARSETS['B'] = undefined;\n\n/**\n * Dutch character set\n * ESC (4\n * Reference: http://vt100.net/docs/vt220-rm/table2-6.html\n */\nCHARSETS['4'] = {\n  '#': '£',\n  '@': '¾',\n  '[': 'ij',\n  '\\\\': '½',\n  ']': '|',\n  '{': '¨',\n  '|': 'f',\n  '}': '¼',\n  '~': '´'\n};\n\n/**\n * Finnish character set\n * ESC (C or ESC (5\n * Reference: http://vt100.net/docs/vt220-rm/table2-7.html\n */\nCHARSETS['C'] =\nCHARSETS['5'] = {\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * French character set\n * ESC (R\n * Reference: http://vt100.net/docs/vt220-rm/table2-8.html\n */\nCHARSETS['R'] = {\n  '#': '£',\n  '@': 'à',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': '§',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': '¨'\n};\n\n/**\n * French Canadian character set\n * ESC (Q\n * Reference: http://vt100.net/docs/vt220-rm/table2-9.html\n */\nCHARSETS['Q'] = {\n  '@': 'à',\n  '[': 'â',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '`': 'ô',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': 'û'\n};\n\n/**\n * German character set\n * ESC (K\n * Reference: http://vt100.net/docs/vt220-rm/table2-10.html\n */\nCHARSETS['K'] = {\n  '@': '§',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Ü',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'ß'\n};\n\n/**\n * Italian character set\n * ESC (Y\n * Reference: http://vt100.net/docs/vt220-rm/table2-11.html\n */\nCHARSETS['Y'] = {\n  '#': '£',\n  '@': '§',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': 'é',\n  '`': 'ù',\n  '{': 'à',\n  '|': 'ò',\n  '}': 'è',\n  '~': 'ì'\n};\n\n/**\n * Norwegian/Danish character set\n * ESC (E or ESC (6\n * Reference: http://vt100.net/docs/vt220-rm/table2-12.html\n */\nCHARSETS['E'] =\nCHARSETS['6'] = {\n  '@': 'Ä',\n  '[': 'Æ',\n  '\\\\': 'Ø',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'ä',\n  '{': 'æ',\n  '|': 'ø',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Spanish character set\n * ESC (Z\n * Reference: http://vt100.net/docs/vt220-rm/table2-13.html\n */\nCHARSETS['Z'] = {\n  '#': '£',\n  '@': '§',\n  '[': '¡',\n  '\\\\': 'Ñ',\n  ']': '¿',\n  '{': '°',\n  '|': 'ñ',\n  '}': 'ç'\n};\n\n/**\n * Swedish character set\n * ESC (H or ESC (7\n * Reference: http://vt100.net/docs/vt220-rm/table2-14.html\n */\nCHARSETS['H'] =\nCHARSETS['7'] = {\n  '@': 'É',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Swiss character set\n * ESC (=\n * Reference: http://vt100.net/docs/vt220-rm/table2-15.html\n */\nCHARSETS['='] = {\n  '#': 'ù',\n  '@': 'à',\n  '[': 'é',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '_': 'è',\n  '`': 'ô',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'û'\n};\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * C0 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C0 {\n  /** Null (Caret = ^@, C = \\0) */\n  export const NUL = '\\x00';\n  /** Start of Heading (Caret = ^A) */\n  export const SOH = '\\x01';\n  /** Start of Text (Caret = ^B) */\n  export const STX = '\\x02';\n  /** End of Text (Caret = ^C) */\n  export const ETX = '\\x03';\n  /** End of Transmission (Caret = ^D) */\n  export const EOT = '\\x04';\n  /** Enquiry (Caret = ^E) */\n  export const ENQ = '\\x05';\n  /** Acknowledge (Caret = ^F) */\n  export const ACK = '\\x06';\n  /** Bell (Caret = ^G, C = \\a) */\n  export const BEL = '\\x07';\n  /** Backspace (Caret = ^H, C = \\b) */\n  export const BS  = '\\x08';\n  /** Character Tabulation, Horizontal Tabulation (Caret = ^I, C = \\t) */\n  export const HT  = '\\x09';\n  /** Line Feed (Caret = ^J, C = \\n) */\n  export const LF  = '\\x0a';\n  /** Line Tabulation, Vertical Tabulation (Caret = ^K, C = \\v) */\n  export const VT  = '\\x0b';\n  /** Form Feed (Caret = ^L, C = \\f) */\n  export const FF  = '\\x0c';\n  /** Carriage Return (Caret = ^M, C = \\r) */\n  export const CR  = '\\x0d';\n  /** Shift Out (Caret = ^N) */\n  export const SO  = '\\x0e';\n  /** Shift In (Caret = ^O) */\n  export const SI  = '\\x0f';\n  /** Data Link Escape (Caret = ^P) */\n  export const DLE = '\\x10';\n  /** Device Control One (XON) (Caret = ^Q) */\n  export const DC1 = '\\x11';\n  /** Device Control Two (Caret = ^R) */\n  export const DC2 = '\\x12';\n  /** Device Control Three (XOFF) (Caret = ^S) */\n  export const DC3 = '\\x13';\n  /** Device Control Four (Caret = ^T) */\n  export const DC4 = '\\x14';\n  /** Negative Acknowledge (Caret = ^U) */\n  export const NAK = '\\x15';\n  /** Synchronous Idle (Caret = ^V) */\n  export const SYN = '\\x16';\n  /** End of Transmission Block (Caret = ^W) */\n  export const ETB = '\\x17';\n  /** Cancel (Caret = ^X) */\n  export const CAN = '\\x18';\n  /** End of Medium (Caret = ^Y) */\n  export const EM  = '\\x19';\n  /** Substitute (Caret = ^Z) */\n  export const SUB = '\\x1a';\n  /** Escape (Caret = ^[, C = \\e) */\n  export const ESC = '\\x1b';\n  /** File Separator (Caret = ^\\) */\n  export const FS  = '\\x1c';\n  /** Group Separator (Caret = ^]) */\n  export const GS  = '\\x1d';\n  /** Record Separator (Caret = ^^) */\n  export const RS  = '\\x1e';\n  /** Unit Separator (Caret = ^_) */\n  export const US  = '\\x1f';\n  /** Space */\n  export const SP  = '\\x20';\n  /** Delete (Caret = ^?) */\n  export const DEL = '\\x7f';\n}\n\n/**\n * C1 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C1 {\n  /** padding character */\n  export const PAD = '\\x80';\n  /** High Octet Preset */\n  export const HOP = '\\x81';\n  /** Break Permitted Here */\n  export const BPH = '\\x82';\n  /** No Break Here */\n  export const NBH = '\\x83';\n  /** Index */\n  export const IND = '\\x84';\n  /** Next Line */\n  export const NEL = '\\x85';\n  /** Start of Selected Area */\n  export const SSA = '\\x86';\n  /** End of Selected Area */\n  export const ESA = '\\x87';\n  /** Horizontal Tabulation Set */\n  export const HTS = '\\x88';\n  /** Horizontal Tabulation With Justification */\n  export const HTJ = '\\x89';\n  /** Vertical Tabulation Set */\n  export const VTS = '\\x8a';\n  /** Partial Line Down */\n  export const PLD = '\\x8b';\n  /** Partial Line Up */\n  export const PLU = '\\x8c';\n  /** Reverse Index */\n  export const RI = '\\x8d';\n  /** Single-Shift 2 */\n  export const SS2 = '\\x8e';\n  /** Single-Shift 3 */\n  export const SS3 = '\\x8f';\n  /** Device Control String */\n  export const DCS = '\\x90';\n  /** Private Use 1 */\n  export const PU1 = '\\x91';\n  /** Private Use 2 */\n  export const PU2 = '\\x92';\n  /** Set Transmit State */\n  export const STS = '\\x93';\n  /** Destructive backspace, intended to eliminate ambiguity about meaning of BS. */\n  export const CCH = '\\x94';\n  /** Message Waiting */\n  export const MW = '\\x95';\n  /** Start of Protected Area */\n  export const SPA = '\\x96';\n  /** End of Protected Area */\n  export const EPA = '\\x97';\n  /** Start of String */\n  export const SOS = '\\x98';\n  /** Single Graphic Character Introducer */\n  export const SGCI = '\\x99';\n  /** Single Character Introducer */\n  export const SCI = '\\x9a';\n  /** Control Sequence Introducer */\n  export const CSI = '\\x9b';\n  /** String Terminator */\n  export const ST = '\\x9c';\n  /** Operating System Command */\n  export const OSC = '\\x9d';\n  /** Privacy Message */\n  export const PM = '\\x9e';\n  /** Application Program Command */\n  export const APC = '\\x9f';\n}\nexport namespace C1_ESCAPED {\n  export const ST = `${C0.ESC}\\\\`;\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IKeyboardEvent, IKeyboardResult, KeyboardResultType } from 'common/Types';\nimport { C0 } from 'common/data/EscapeSequences';\n\n// reg + shift key mappings for digits and special chars\nconst KEYCODE_KEY_MAPPINGS: { [key: number]: [string, string]} = {\n  // digits 0-9\n  48: ['0', ')'],\n  49: ['1', '!'],\n  50: ['2', '@'],\n  51: ['3', '#'],\n  52: ['4', '$'],\n  53: ['5', '%'],\n  54: ['6', '^'],\n  55: ['7', '&'],\n  56: ['8', '*'],\n  57: ['9', '('],\n\n  // special chars\n  186: [';', ':'],\n  187: ['=', '+'],\n  188: [',', '<'],\n  189: ['-', '_'],\n  190: ['.', '>'],\n  191: ['/', '?'],\n  192: ['`', '~'],\n  219: ['[', '{'],\n  220: ['\\\\', '|'],\n  221: [']', '}'],\n  222: ['\\'', '\"']\n};\n\nexport function evaluateKeyboardEvent(\n  ev: IKeyboardEvent,\n  applicationCursorMode: boolean,\n  isMac: boolean,\n  macOptionIsMeta: boolean\n): IKeyboardResult {\n  const result: IKeyboardResult = {\n    type: KeyboardResultType.SEND_KEY,\n    // Whether to cancel event propagation (NOTE: this may not be needed since the event is\n    // canceled at the end of keyDown\n    cancel: false,\n    // The new key even to emit\n    key: undefined\n  };\n  const modifiers = (ev.shiftKey ? 1 : 0) | (ev.altKey ? 2 : 0) | (ev.ctrlKey ? 4 : 0) | (ev.metaKey ? 8 : 0);\n  switch (ev.keyCode) {\n    case 0:\n      if (ev.key === 'UIKeyInputUpArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OA';\n        } else {\n          result.key = C0.ESC + '[A';\n        }\n      }\n      else if (ev.key === 'UIKeyInputLeftArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OD';\n        } else {\n          result.key = C0.ESC + '[D';\n        }\n      }\n      else if (ev.key === 'UIKeyInputRightArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OC';\n        } else {\n          result.key = C0.ESC + '[C';\n        }\n      }\n      else if (ev.key === 'UIKeyInputDownArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OB';\n        } else {\n          result.key = C0.ESC + '[B';\n        }\n      }\n      break;\n    case 8:\n      // backspace\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.DEL; // \\e ^?\n        break;\n      }\n      result.key = C0.DEL; // ^?\n      break;\n    case 9:\n      // tab\n      if (ev.shiftKey) {\n        result.key = C0.ESC + '[Z';\n        break;\n      }\n      result.key = C0.HT;\n      result.cancel = true;\n      break;\n    case 13:\n      // return/enter\n      result.key = ev.altKey ? C0.ESC + C0.CR : C0.CR;\n      result.cancel = true;\n      break;\n    case 27:\n      // escape\n      result.key = C0.ESC;\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.ESC;\n      }\n      result.cancel = true;\n      break;\n    case 37:\n      // left-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'D';\n        // HACK: Make Alt + left-arrow behave like Ctrl + left-arrow: move one word backwards\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3D') {\n          result.key = C0.ESC + (isMac ? 'b' : '[1;5D');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OD';\n      } else {\n        result.key = C0.ESC + '[D';\n      }\n      break;\n    case 39:\n      // right-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'C';\n        // HACK: Make Alt + right-arrow behave like Ctrl + right-arrow: move one word forward\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3C') {\n          result.key = C0.ESC + (isMac ? 'f' : '[1;5C');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OC';\n      } else {\n        result.key = C0.ESC + '[C';\n      }\n      break;\n    case 38:\n      // up-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'A';\n        // HACK: Make Alt + up-arrow behave like Ctrl + up-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3A') {\n          result.key = C0.ESC + '[1;5A';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OA';\n      } else {\n        result.key = C0.ESC + '[A';\n      }\n      break;\n    case 40:\n      // down-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'B';\n        // HACK: Make Alt + down-arrow behave like Ctrl + down-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3B') {\n          result.key = C0.ESC + '[1;5B';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OB';\n      } else {\n        result.key = C0.ESC + '[B';\n      }\n      break;\n    case 45:\n      // insert\n      if (!ev.shiftKey && !ev.ctrlKey) {\n        // <Ctrl> or <Shift> + <Insert> are used to\n        // copy-paste on some systems.\n        result.key = C0.ESC + '[2~';\n      }\n      break;\n    case 46:\n      // delete\n      if (modifiers) {\n        result.key = C0.ESC + '[3;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[3~';\n      }\n      break;\n    case 36:\n      // home\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'H';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OH';\n      } else {\n        result.key = C0.ESC + '[H';\n      }\n      break;\n    case 35:\n      // end\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'F';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OF';\n      } else {\n        result.key = C0.ESC + '[F';\n      }\n      break;\n    case 33:\n      // page up\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_UP;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[5;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[5~';\n      }\n      break;\n    case 34:\n      // page down\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_DOWN;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[6;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[6~';\n      }\n      break;\n    case 112:\n      // F1-F12\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'P';\n      } else {\n        result.key = C0.ESC + 'OP';\n      }\n      break;\n    case 113:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'Q';\n      } else {\n        result.key = C0.ESC + 'OQ';\n      }\n      break;\n    case 114:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'R';\n      } else {\n        result.key = C0.ESC + 'OR';\n      }\n      break;\n    case 115:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'S';\n      } else {\n        result.key = C0.ESC + 'OS';\n      }\n      break;\n    case 116:\n      if (modifiers) {\n        result.key = C0.ESC + '[15;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[15~';\n      }\n      break;\n    case 117:\n      if (modifiers) {\n        result.key = C0.ESC + '[17;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[17~';\n      }\n      break;\n    case 118:\n      if (modifiers) {\n        result.key = C0.ESC + '[18;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[18~';\n      }\n      break;\n    case 119:\n      if (modifiers) {\n        result.key = C0.ESC + '[19;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[19~';\n      }\n      break;\n    case 120:\n      if (modifiers) {\n        result.key = C0.ESC + '[20;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[20~';\n      }\n      break;\n    case 121:\n      if (modifiers) {\n        result.key = C0.ESC + '[21;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[21~';\n      }\n      break;\n    case 122:\n      if (modifiers) {\n        result.key = C0.ESC + '[23;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[23~';\n      }\n      break;\n    case 123:\n      if (modifiers) {\n        result.key = C0.ESC + '[24;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[24~';\n      }\n      break;\n    default:\n      // a-z and space\n      if (ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          result.key = String.fromCharCode(ev.keyCode - 64);\n        } else if (ev.keyCode === 32) {\n          result.key = C0.NUL;\n        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n          // escape, file sep, group sep, record sep, unit sep\n          result.key = String.fromCharCode(ev.keyCode - 51 + 27);\n        } else if (ev.keyCode === 56) {\n          result.key = C0.DEL;\n        } else if (ev.keyCode === 219) {\n          result.key = C0.ESC;\n        } else if (ev.keyCode === 220) {\n          result.key = C0.FS;\n        } else if (ev.keyCode === 221) {\n          result.key = C0.GS;\n        }\n      } else if ((!isMac || macOptionIsMeta) && ev.altKey && !ev.metaKey) {\n        // On macOS this is a third level shift when !macOptionIsMeta. Use <Esc> instead.\n        const keyMapping = KEYCODE_KEY_MAPPINGS[ev.keyCode];\n        const key = keyMapping?.[!ev.shiftKey ? 0 : 1];\n        if (key) {\n          result.key = C0.ESC + key;\n        } else if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          const keyCode = ev.ctrlKey ? ev.keyCode - 64 : ev.keyCode + 32;\n          let keyString = String.fromCharCode(keyCode);\n          if (ev.shiftKey) {\n            keyString = keyString.toUpperCase();\n          }\n          result.key = C0.ESC + keyString;\n        } else if (ev.keyCode === 32) {\n          result.key = C0.ESC + (ev.ctrlKey ? C0.NUL : ' ');\n        } else if (ev.key === 'Dead' && ev.code.startsWith('Key')) {\n          // Reference: https://github.com/xtermjs/xterm.js/issues/3725\n          // Alt will produce a \"dead key\" (initate composition) with some\n          // of the letters in US layout (e.g. N/E/U).\n          // It's safe to match against Key* since no other `code` values begin with \"Key\".\n          // https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code/code_values#code_values_on_mac\n          let keyString = ev.code.slice(3, 4);\n          if (!ev.shiftKey) {\n            keyString = keyString.toLowerCase();\n          }\n          result.key = C0.ESC + keyString;\n          result.cancel = true;\n        }\n      } else if (isMac && !ev.altKey && !ev.ctrlKey && !ev.shiftKey && ev.metaKey) {\n        if (ev.keyCode === 65) { // cmd + a\n          result.type = KeyboardResultType.SELECT_ALL;\n        }\n      } else if (ev.key && !ev.ctrlKey && !ev.altKey && !ev.metaKey && ev.keyCode >= 48 && ev.key.length === 1) {\n        // Include only keys that that result in a _single_ character; don't include num lock, volume up, etc.\n        result.key = ev.key;\n      } else if (ev.key && ev.ctrlKey) {\n        if (ev.key === '_') { // ^_\n          result.key = C0.US;\n        }\n        if (ev.key === '@') { // ^ + shift + 2 = ^ + @\n          result.key = C0.NUL;\n        }\n      }\n      break;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate pair\n      // conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      if (code === 0xFEFF) {\n        // BOM\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF) || cp === 0xFEFF) {\n            // illegal codepoint or BOM\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF) || codepoint === 0xFEFF) {\n          // illegal codepoint or BOM, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeVersionProvider } from 'common/services/Services';\n\ntype CharWidth = 0 | 1 | 2;\n\nconst BMP_COMBINING = [\n  [0x0300, 0x036F], [0x0483, 0x0486], [0x0488, 0x0489],\n  [0x0591, 0x05BD], [0x05BF, 0x05BF], [0x05C1, 0x05C2],\n  [0x05C4, 0x05C5], [0x05C7, 0x05C7], [0x0600, 0x0603],\n  [0x0610, 0x0615], [0x064B, 0x065E], [0x0670, 0x0670],\n  [0x06D6, 0x06E4], [0x06E7, 0x06E8], [0x06EA, 0x06ED],\n  [0x070F, 0x070F], [0x0711, 0x0711], [0x0730, 0x074A],\n  [0x07A6, 0x07B0], [0x07EB, 0x07F3], [0x0901, 0x0902],\n  [0x093C, 0x093C], [0x0941, 0x0948], [0x094D, 0x094D],\n  [0x0951, 0x0954], [0x0962, 0x0963], [0x0981, 0x0981],\n  [0x09BC, 0x09BC], [0x09C1, 0x09C4], [0x09CD, 0x09CD],\n  [0x09E2, 0x09E3], [0x0A01, 0x0A02], [0x0A3C, 0x0A3C],\n  [0x0A41, 0x0A42], [0x0A47, 0x0A48], [0x0A4B, 0x0A4D],\n  [0x0A70, 0x0A71], [0x0A81, 0x0A82], [0x0ABC, 0x0ABC],\n  [0x0AC1, 0x0AC5], [0x0AC7, 0x0AC8], [0x0ACD, 0x0ACD],\n  [0x0AE2, 0x0AE3], [0x0B01, 0x0B01], [0x0B3C, 0x0B3C],\n  [0x0B3F, 0x0B3F], [0x0B41, 0x0B43], [0x0B4D, 0x0B4D],\n  [0x0B56, 0x0B56], [0x0B82, 0x0B82], [0x0BC0, 0x0BC0],\n  [0x0BCD, 0x0BCD], [0x0C3E, 0x0C40], [0x0C46, 0x0C48],\n  [0x0C4A, 0x0C4D], [0x0C55, 0x0C56], [0x0CBC, 0x0CBC],\n  [0x0CBF, 0x0CBF], [0x0CC6, 0x0CC6], [0x0CCC, 0x0CCD],\n  [0x0CE2, 0x0CE3], [0x0D41, 0x0D43], [0x0D4D, 0x0D4D],\n  [0x0DCA, 0x0DCA], [0x0DD2, 0x0DD4], [0x0DD6, 0x0DD6],\n  [0x0E31, 0x0E31], [0x0E34, 0x0E3A], [0x0E47, 0x0E4E],\n  [0x0EB1, 0x0EB1], [0x0EB4, 0x0EB9], [0x0EBB, 0x0EBC],\n  [0x0EC8, 0x0ECD], [0x0F18, 0x0F19], [0x0F35, 0x0F35],\n  [0x0F37, 0x0F37], [0x0F39, 0x0F39], [0x0F71, 0x0F7E],\n  [0x0F80, 0x0F84], [0x0F86, 0x0F87], [0x0F90, 0x0F97],\n  [0x0F99, 0x0FBC], [0x0FC6, 0x0FC6], [0x102D, 0x1030],\n  [0x1032, 0x1032], [0x1036, 0x1037], [0x1039, 0x1039],\n  [0x1058, 0x1059], [0x1160, 0x11FF], [0x135F, 0x135F],\n  [0x1712, 0x1714], [0x1732, 0x1734], [0x1752, 0x1753],\n  [0x1772, 0x1773], [0x17B4, 0x17B5], [0x17B7, 0x17BD],\n  [0x17C6, 0x17C6], [0x17C9, 0x17D3], [0x17DD, 0x17DD],\n  [0x180B, 0x180D], [0x18A9, 0x18A9], [0x1920, 0x1922],\n  [0x1927, 0x1928], [0x1932, 0x1932], [0x1939, 0x193B],\n  [0x1A17, 0x1A18], [0x1B00, 0x1B03], [0x1B34, 0x1B34],\n  [0x1B36, 0x1B3A], [0x1B3C, 0x1B3C], [0x1B42, 0x1B42],\n  [0x1B6B, 0x1B73], [0x1DC0, 0x1DCA], [0x1DFE, 0x1DFF],\n  [0x200B, 0x200F], [0x202A, 0x202E], [0x2060, 0x2063],\n  [0x206A, 0x206F], [0x20D0, 0x20EF], [0x302A, 0x302F],\n  [0x3099, 0x309A], [0xA806, 0xA806], [0xA80B, 0xA80B],\n  [0xA825, 0xA826], [0xFB1E, 0xFB1E], [0xFE00, 0xFE0F],\n  [0xFE20, 0xFE23], [0xFEFF, 0xFEFF], [0xFFF9, 0xFFFB]\n];\nconst HIGH_COMBINING = [\n  [0x10A01, 0x10A03], [0x10A05, 0x10A06], [0x10A0C, 0x10A0F],\n  [0x10A38, 0x10A3A], [0x10A3F, 0x10A3F], [0x1D167, 0x1D169],\n  [0x1D173, 0x1D182], [0x1D185, 0x1D18B], [0x1D1AA, 0x1D1AD],\n  [0x1D242, 0x1D244], [0xE0001, 0xE0001], [0xE0020, 0xE007F],\n  [0xE0100, 0xE01EF]\n];\n\n// BMP lookup table, lazy initialized during first addon loading\nlet table: Uint8Array;\n\nfunction bisearch(ucs: number, data: number[][]): boolean {\n  let min = 0;\n  let max = data.length - 1;\n  let mid;\n  if (ucs < data[0][0] || ucs > data[max][1]) {\n    return false;\n  }\n  while (max >= min) {\n    mid = (min + max) >> 1;\n    if (ucs > data[mid][1]) {\n      min = mid + 1;\n    } else if (ucs < data[mid][0]) {\n      max = mid - 1;\n    } else {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport class UnicodeV6 implements IUnicodeVersionProvider {\n  public readonly version = '6';\n\n  constructor() {\n    // init lookup table once\n    if (!table) {\n      table = new Uint8Array(65536);\n      table.fill(1);\n      table[0] = 0;\n      // control chars\n      table.fill(0, 1, 32);\n      table.fill(0, 0x7f, 0xa0);\n\n      // apply wide char rules first\n      // wide chars\n      table.fill(2, 0x1100, 0x1160);\n      table[0x2329] = 2;\n      table[0x232a] = 2;\n      table.fill(2, 0x2e80, 0xa4d0);\n      table[0x303f] = 1;  // wrongly in last line\n\n      table.fill(2, 0xac00, 0xd7a4);\n      table.fill(2, 0xf900, 0xfb00);\n      table.fill(2, 0xfe10, 0xfe1a);\n      table.fill(2, 0xfe30, 0xfe70);\n      table.fill(2, 0xff00, 0xff61);\n      table.fill(2, 0xffe0, 0xffe7);\n\n      // apply combining last to ensure we overwrite\n      // wrongly wide set chars:\n      //    the original algo evals combining first and falls\n      //    through to wide check so we simply do here the opposite\n      // combining 0\n      for (let r = 0; r < BMP_COMBINING.length; ++r) {\n        table.fill(0, BMP_COMBINING[r][0], BMP_COMBINING[r][1] + 1);\n      }\n    }\n  }\n\n  public wcwidth(num: number): CharWidth {\n    if (num < 32) return 0;\n    if (num < 127) return 1;\n    if (num < 65536) return table[num] as CharWidth;\n    if (bisearch(num, HIGH_COMBINING)) return 0;\n    if ((num >= 0x20000 && num <= 0x2fffd) || (num >= 0x30000 && num <= 0x3fffd)) return 2;\n    return 1;\n  }\n}\n","\n/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\n\ndeclare const setTimeout: (handler: () => void, timeout?: number) => void;\n\n/**\n * Safety watermark to avoid memory exhaustion and browser engine crash on fast data input.\n * Enable flow control to avoid this limit and make sure that your backend correctly\n * propagates this to the underlying pty. (see docs for further instructions)\n * Since this limit is meant as a safety parachute to prevent browser crashs,\n * it is set to a very high number. Typically xterm.js gets unresponsive with\n * a 100 times lower number (>500 kB).\n */\nconst DISCARD_WATERMARK = 50000000; // ~50 MB\n\n/**\n * The max number of ms to spend on writes before allowing the renderer to\n * catch up with a 0ms setTimeout. A value of < 33 to keep us close to\n * 30fps, and a value of < 16 to try to run at 60fps. Of course, the real FPS\n * depends on the time it takes for the renderer to draw the frame.\n */\nconst WRITE_TIMEOUT_MS = 12;\n\n/**\n * Threshold of max held chunks in the write buffer, that were already processed.\n * This is a tradeoff between extensive write buffer shifts (bad runtime) and high\n * memory consumption by data thats not used anymore.\n */\nconst WRITE_BUFFER_LENGTH_THRESHOLD = 50;\n\nexport class WriteBuffer extends Disposable {\n  private _writeBuffer: (string | Uint8Array)[] = [];\n  private _callbacks: ((() => void) | undefined)[] = [];\n  private _pendingData = 0;\n  private _bufferOffset = 0;\n  private _isSyncWriting = false;\n  private _syncCalls = 0;\n  private _didUserInput = false;\n\n  private readonly _onWriteParsed = this.register(new EventEmitter<void>());\n  public readonly onWriteParsed = this._onWriteParsed.event;\n\n  constructor(private _action: (data: string | Uint8Array, promiseResult?: boolean) => void | Promise<boolean>) {\n    super();\n  }\n\n  public handleUserInput(): void {\n    this._didUserInput = true;\n  }\n\n  /**\n   * @deprecated Unreliable, to be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    // stop writeSync recursions with maxSubsequentCalls argument\n    // This is dangerous to use as it will lose the current data chunk\n    // and return immediately.\n    if (maxSubsequentCalls !== undefined && this._syncCalls > maxSubsequentCalls) {\n      // comment next line if a whole loop block should only contain x `writeSync` calls\n      // (total flat vs. deep nested limit)\n      this._syncCalls = 0;\n      return;\n    }\n    // append chunk to buffer\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(undefined);\n\n    // increase recursion counter\n    this._syncCalls++;\n    // exit early if another writeSync loop is active\n    if (this._isSyncWriting) {\n      return;\n    }\n    this._isSyncWriting = true;\n\n    // force sync processing on pending data chunks to avoid in-band data scrambling\n    // does the same as innerWrite but without event loop\n    // we have to do it here as single loop steps to not corrupt loop subject\n    // by another writeSync call triggered from _action\n    let chunk: string | Uint8Array | undefined;\n    while (chunk = this._writeBuffer.shift()) {\n      this._action(chunk);\n      const cb = this._callbacks.shift();\n      if (cb) cb();\n    }\n    // reset to avoid reprocessing of chunks with scheduled innerWrite call\n    // stopping scheduled innerWrite by offset > length condition\n    this._pendingData = 0;\n    this._bufferOffset = 0x7FFFFFFF;\n\n    // allow another writeSync to loop\n    this._isSyncWriting = false;\n    this._syncCalls = 0;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    if (this._pendingData > DISCARD_WATERMARK) {\n      throw new Error('write data discarded, use flow control to avoid losing data');\n    }\n\n    // schedule chunk processing for next event loop run\n    if (!this._writeBuffer.length) {\n      this._bufferOffset = 0;\n\n      // If this is the first write call after the user has done some input,\n      // parse it immediately to minimize input latency,\n      // otherwise schedule for the next event\n      if (this._didUserInput) {\n        this._didUserInput = false;\n        this._pendingData += data.length;\n        this._writeBuffer.push(data);\n        this._callbacks.push(callback);\n        this._innerWrite();\n        return;\n      }\n\n      setTimeout(() => this._innerWrite());\n    }\n\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(callback);\n  }\n\n  /**\n   * Inner write call, that enters the sliced chunk processing by timing.\n   *\n   * `lastTime` indicates, when the last _innerWrite call had started.\n   * It is used to aggregate async handler execution under a timeout constraint\n   * effectively lowering the redrawing needs, schematically:\n   *\n   *   macroTask _innerWrite:\n   *     if (Date.now() - (lastTime | 0) < WRITE_TIMEOUT_MS):\n   *        schedule microTask _innerWrite(lastTime)\n   *     else:\n   *        schedule macroTask _innerWrite(0)\n   *\n   *   overall execution order on task queues:\n   *\n   *   macrotasks:  [...]  -->  _innerWrite(0)  -->  [...]  -->  screenUpdate  -->  [...]\n   *         m  t:                    |\n   *         i  a:                  [...]\n   *         c  s:                    |\n   *         r  k:              while < timeout:\n   *         o  s:                _innerWrite(timeout)\n   *\n   * `promiseResult` depicts the promise resolve value of an async handler.\n   * This value gets carried forward through all saved stack states of the\n   * paused parser for proper continuation.\n   *\n   * Note, for pure sync code `lastTime` and `promiseResult` have no meaning.\n   */\n  protected _innerWrite(lastTime: number = 0, promiseResult: boolean = true): void {\n    const startTime = lastTime || Date.now();\n    while (this._writeBuffer.length > this._bufferOffset) {\n      const data = this._writeBuffer[this._bufferOffset];\n      const result = this._action(data, promiseResult);\n      if (result) {\n        /**\n         * If we get a promise as return value, we re-schedule the continuation\n         * as thenable on the promise and exit right away.\n         *\n         * The exit here means, that we block input processing at the current active chunk,\n         * the exact execution position within the chunk is preserved by the saved\n         * stack content in InputHandler and EscapeSequenceParser.\n         *\n         * Resuming happens automatically from that saved stack state.\n         * Also the resolved promise value is passed along the callstack to\n         * `EscapeSequenceParser.parse` to correctly resume the stopped handler loop.\n         *\n         * Exceptions on async handlers will be logged to console async, but do not interrupt\n         * the input processing (continues with next handler at the current input position).\n         */\n\n        /**\n         * If a promise takes long to resolve, we should schedule continuation behind setTimeout.\n         * This might already be too late, if our .then enters really late (executor + prev thens took very long).\n         * This cannot be solved here for the handler itself (it is the handlers responsibility to slice hard work),\n         * but we can at least schedule a screen update as we gain control.\n         */\n        const continuation: (r: boolean) => void = (r: boolean) => Date.now() - startTime >= WRITE_TIMEOUT_MS\n          ? setTimeout(() => this._innerWrite(0, r))\n          : this._innerWrite(startTime, r);\n\n        /**\n         * Optimization considerations:\n         * The continuation above favors FPS over throughput by eval'ing `startTime` on resolve.\n         * This might schedule too many screen updates with bad throughput drops (in case a slow\n         * resolving handler sliced its work properly behind setTimeout calls). We cannot spot\n         * this condition here, also the renderer has no way to spot nonsense updates either.\n         * FIXME: A proper fix for this would track the FPS at the renderer entry level separately.\n         *\n         * If favoring of FPS shows bad throughtput impact, use the following instead. It favors\n         * throughput by eval'ing `startTime` upfront pulling at least one more chunk into the\n         * current microtask queue (executed before setTimeout).\n         */\n        // const continuation: (r: boolean) => void = Date.now() - startTime >= WRITE_TIMEOUT_MS\n        //   ? r => setTimeout(() => this._innerWrite(0, r))\n        //   : r => this._innerWrite(startTime, r);\n\n        // Handle exceptions synchronously to current band position, idea:\n        // 1. spawn a single microtask which we allow to throw hard\n        // 2. spawn a promise immediately resolving to `true`\n        // (executed on the same queue, thus properly aligned before continuation happens)\n        result.catch(err => {\n          queueMicrotask(() => {throw err;});\n          return Promise.resolve(false);\n        }).then(continuation);\n        return;\n      }\n\n      const cb = this._callbacks[this._bufferOffset];\n      if (cb) cb();\n      this._bufferOffset++;\n      this._pendingData -= data.length;\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this._writeBuffer.length > this._bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      // trim already processed chunks if we are above threshold\n      if (this._bufferOffset > WRITE_BUFFER_LENGTH_THRESHOLD) {\n        this._writeBuffer = this._writeBuffer.slice(this._bufferOffset);\n        this._callbacks = this._callbacks.slice(this._bufferOffset);\n        this._bufferOffset = 0;\n      }\n      setTimeout(() => this._innerWrite());\n    } else {\n      this._writeBuffer.length = 0;\n      this._callbacks.length = 0;\n      this._pendingData = 0;\n      this._bufferOffset = 0;\n    }\n    this._onWriteParsed.fire();\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n\n// 'rgb:' rule - matching: r/g/b | rr/gg/bb | rrr/ggg/bbb | rrrr/gggg/bbbb (hex digits)\nconst RGB_REX = /^([\\da-f])\\/([\\da-f])\\/([\\da-f])$|^([\\da-f]{2})\\/([\\da-f]{2})\\/([\\da-f]{2})$|^([\\da-f]{3})\\/([\\da-f]{3})\\/([\\da-f]{3})$|^([\\da-f]{4})\\/([\\da-f]{4})\\/([\\da-f]{4})$/;\n// '#...' rule - matching any hex digits\nconst HASH_REX = /^[\\da-f]+$/;\n\n/**\n * Parse color spec to RGB values (8 bit per channel).\n * See `man xparsecolor` for details about certain format specifications.\n *\n * Supported formats:\n * - rgb:<red>/<green>/<blue> with <red>, <green>, <blue> in h | hh | hhh | hhhh\n * - #RGB, #RRGGBB, #RRRGGGBBB, #RRRRGGGGBBBB\n *\n * All other formats like rgbi: or device-independent string specifications\n * with float numbering are not supported.\n */\nexport function parseColor(data: string): [number, number, number] | undefined {\n  if (!data) return;\n  // also handle uppercases\n  let low = data.toLowerCase();\n  if (low.indexOf('rgb:') === 0) {\n    // 'rgb:' specifier\n    low = low.slice(4);\n    const m = RGB_REX.exec(low);\n    if (m) {\n      const base = m[1] ? 15 : m[4] ? 255 : m[7] ? 4095 : 65535;\n      return [\n        Math.round(parseInt(m[1] || m[4] || m[7] || m[10], 16) / base * 255),\n        Math.round(parseInt(m[2] || m[5] || m[8] || m[11], 16) / base * 255),\n        Math.round(parseInt(m[3] || m[6] || m[9] || m[12], 16) / base * 255)\n      ];\n    }\n  } else if (low.indexOf('#') === 0) {\n    // '#' specifier\n    low = low.slice(1);\n    if (HASH_REX.exec(low) && [3, 6, 9, 12].includes(low.length)) {\n      const adv = low.length / 3;\n      const result: [number, number, number] = [0, 0, 0];\n      for (let i = 0; i < 3; ++i) {\n        const c = parseInt(low.slice(adv * i, adv * i + adv), 16);\n        result[i] = adv === 1 ? c << 4 : adv === 2 ? c : adv === 3 ? c >> 4 : c >> 8;\n      }\n      return result;\n    }\n  }\n\n  // Named colors are currently not supported due to the large addition to the xterm.js bundle size\n  // they would add. In order to support named colors, we would need some way of optionally loading\n  // additional payloads so startup/download time is not bloated (see #3530).\n}\n\n// pad hex output to requested bit width\nfunction pad(n: number, bits: number): string {\n  const s = n.toString(16);\n  const s2 = s.length < 2 ? '0' + s : s;\n  switch (bits) {\n    case 4:\n      return s[0];\n    case 8:\n      return s2;\n    case 12:\n      return (s2 + s2).slice(0, 3);\n    default:\n      return s2 + s2;\n  }\n}\n\n/**\n * Convert a given color to rgb:../../.. string of `bits` depth.\n */\nexport function toRgbString(color: [number, number, number], bits: number = 16): string {\n  const [r, g, b] = color;\n  return `rgb:${pad(r, bits)}/${pad(g, bits)}/${pad(b, bits)}`;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Internal states of EscapeSequenceParser.\n */\nexport const enum ParserState {\n  GROUND = 0,\n  ESCAPE = 1,\n  ESCAPE_INTERMEDIATE = 2,\n  CSI_ENTRY = 3,\n  CSI_PARAM = 4,\n  CSI_INTERMEDIATE = 5,\n  CSI_IGNORE = 6,\n  SOS_PM_APC_STRING = 7,\n  OSC_STRING = 8,\n  DCS_ENTRY = 9,\n  DCS_PARAM = 10,\n  DCS_IGNORE = 11,\n  DCS_INTERMEDIATE = 12,\n  DCS_PASSTHROUGH = 13\n}\n\n/**\n * Internal actions of EscapeSequenceParser.\n */\nexport const enum ParserAction {\n  IGNORE = 0,\n  ERROR = 1,\n  PRINT = 2,\n  EXECUTE = 3,\n  OSC_START = 4,\n  OSC_PUT = 5,\n  OSC_END = 6,\n  CSI_DISPATCH = 7,\n  PARAM = 8,\n  COLLECT = 9,\n  ESC_DISPATCH = 10,\n  CLEAR = 11,\n  DCS_HOOK = 12,\n  DCS_PUT = 13,\n  DCS_UNHOOK = 14\n}\n\n/**\n * Internal states of OscParser.\n */\nexport const enum OscState {\n  START = 0,\n  ID = 1,\n  PAYLOAD = 2,\n  ABORT = 3\n}\n\n// payload limit for OSC and DCS\nexport const PAYLOAD_LIMIT = 10000000;\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { IDcsHandler, IParams, IHandlerCollection, IDcsParser, DcsFallbackHandlerType, ISubParserStackState } from 'common/parser/Types';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { Params } from 'common/parser/Params';\nimport { PAYLOAD_LIMIT } from 'common/parser/Constants';\n\nconst EMPTY_HANDLERS: IDcsHandler[] = [];\n\nexport class DcsParser implements IDcsParser {\n  private _handlers: IHandlerCollection<IDcsHandler> = Object.create(null);\n  private _active: IDcsHandler[] = EMPTY_HANDLERS;\n  private _ident: number = 0;\n  private _handlerFb: DcsFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public registerHandler(ident: number, handler: IDcsHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n\n  public setHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public reset(): void {\n    // force cleanup leftover handlers\n    if (this._active.length) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].unhook(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n\n  public hook(ident: number, params: IParams): void {\n    // always reset leftover handlers\n    this.reset();\n    this._ident = ident;\n    this._active = this._handlers[ident] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'HOOK', params);\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].hook(params);\n      }\n    }\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public unhook(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'UNHOOK', success);\n    } else {\n      let handlerResult: boolean | Promise<boolean> = false;\n      let j = this._active.length - 1;\n      let fallThrough = false;\n      if (this._stack.paused) {\n        j = this._stack.loopPosition - 1;\n        handlerResult = promiseResult;\n        fallThrough = this._stack.fallThrough;\n        this._stack.paused = false;\n      }\n      if (!fallThrough && handlerResult === false) {\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].unhook(success);\n          if (handlerResult === true) {\n            break;\n          } else if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = false;\n            return handlerResult;\n          }\n        }\n        j--;\n      }\n      // cleanup left over handlers (fallThrough for async)\n      for (; j >= 0; j--) {\n        handlerResult = this._active[j].unhook(false);\n        if (handlerResult instanceof Promise) {\n          this._stack.paused = true;\n          this._stack.loopPosition = j;\n          this._stack.fallThrough = true;\n          return handlerResult;\n        }\n      }\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n}\n\n// predefine empty params as [0] (ZDM)\nconst EMPTY_PARAMS = new Params();\nEMPTY_PARAMS.addParam(0);\n\n/**\n * Convenient class to create a DCS handler from a single callback function.\n * Note: The payload is currently limited to 50 MB (hardcoded).\n */\nexport class DcsHandler implements IDcsHandler {\n  private _data = '';\n  private _params: IParams = EMPTY_PARAMS;\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string, params: IParams) => boolean | Promise<boolean>) { }\n\n  public hook(params: IParams): void {\n    // since we need to preserve params until `unhook`, we have to clone it\n    // (only borrowed from parser and spans multiple parser states)\n    // perf optimization:\n    // clone only, if we have non empty params, otherwise stick with default\n    this._params = (params.length > 1 || params.params[0]) ? params.clone() : EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public unhook(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data, this._params);\n      if (ret instanceof Promise) {\n        // need to hold data and params until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._params = EMPTY_PARAMS;\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._params = EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IOscHandler, IHandlerCollection, CsiHandlerType, OscFallbackHandlerType, IOscParser, EscHandlerType, IDcsParser, DcsFallbackHandlerType, IFunctionIdentifier, ExecuteFallbackHandlerType, CsiFallbackHandlerType, EscFallbackHandlerType, PrintHandlerType, PrintFallbackHandlerType, ExecuteHandlerType, IParserStackState, ParserStackType, ResumableHandlersType } from 'common/parser/Types';\nimport { ParserState, ParserAction } from 'common/parser/Constants';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { Params } from 'common/parser/Params';\nimport { OscParser } from 'common/parser/OscParser';\nimport { DcsParser } from 'common/parser/DcsParser';\n\n/**\n * Table values are generated like this:\n *    index:  currentState << TableValue.INDEX_STATE_SHIFT | charCode\n *    value:  action << TableValue.TRANSITION_ACTION_SHIFT | nextState\n */\nconst enum TableAccess {\n  TRANSITION_ACTION_SHIFT = 4,\n  TRANSITION_STATE_MASK = 15,\n  INDEX_STATE_SHIFT = 8\n}\n\n/**\n * Transition table for EscapeSequenceParser.\n */\nexport class TransitionTable {\n  public table: Uint8Array;\n\n  constructor(length: number) {\n    this.table = new Uint8Array(length);\n  }\n\n  /**\n   * Set default transition.\n   * @param action default action\n   * @param next default next state\n   */\n  public setDefault(action: ParserAction, next: ParserState): void {\n    this.table.fill(action << TableAccess.TRANSITION_ACTION_SHIFT | next);\n  }\n\n  /**\n   * Add a transition to the transition table.\n   * @param code input character code\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public add(code: number, state: ParserState, action: ParserAction, next: ParserState): void {\n    this.table[state << TableAccess.INDEX_STATE_SHIFT | code] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n  }\n\n  /**\n   * Add transitions for multiple input character codes.\n   * @param codes input character code array\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public addMany(codes: number[], state: ParserState, action: ParserAction, next: ParserState): void {\n    for (let i = 0; i < codes.length; i++) {\n      this.table[state << TableAccess.INDEX_STATE_SHIFT | codes[i]] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n    }\n  }\n}\n\n\n// Pseudo-character placeholder for printable non-ascii characters (unicode).\nconst NON_ASCII_PRINTABLE = 0xA0;\n\n\n/**\n * VT500 compatible transition table.\n * Taken from https://vt100.net/emu/dec_ansi_parser.\n */\nexport const VT500_TRANSITION_TABLE = (function (): TransitionTable {\n  const table: TransitionTable = new TransitionTable(4095);\n\n  // range macro for byte\n  const BYTE_VALUES = 256;\n  const blueprint = Array.apply(null, Array(BYTE_VALUES)).map((unused: any, i: number) => i);\n  const r = (start: number, end: number): number[] => blueprint.slice(start, end);\n\n  // Default definitions.\n  const PRINTABLES = r(0x20, 0x7f); // 0x20 (SP) included, 0x7F (DEL) excluded\n  const EXECUTABLES = r(0x00, 0x18);\n  EXECUTABLES.push(0x19);\n  EXECUTABLES.push.apply(EXECUTABLES, r(0x1c, 0x20));\n\n  const states: number[] = r(ParserState.GROUND, ParserState.DCS_PASSTHROUGH + 1);\n  let state: any;\n\n  // set default transition\n  table.setDefault(ParserAction.ERROR, ParserState.GROUND);\n  // printables\n  table.addMany(PRINTABLES, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  // global anywhere rules\n  for (state in states) {\n    table.addMany([0x18, 0x1a, 0x99, 0x9a], state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x80, 0x90), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x90, 0x98), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.add(0x9c, state, ParserAction.IGNORE, ParserState.GROUND); // ST as terminator\n    table.add(0x1b, state, ParserAction.CLEAR, ParserState.ESCAPE);  // ESC\n    table.add(0x9d, state, ParserAction.OSC_START, ParserState.OSC_STRING);  // OSC\n    table.addMany([0x98, 0x9e, 0x9f], state, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n    table.add(0x9b, state, ParserAction.CLEAR, ParserState.CSI_ENTRY);  // CSI\n    table.add(0x90, state, ParserAction.CLEAR, ParserState.DCS_ENTRY);  // DCS\n  }\n  // rules for executables and 7f\n  table.addMany(EXECUTABLES, ParserState.GROUND, ParserAction.EXECUTE, ParserState.GROUND);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE, ParserAction.EXECUTE, ParserState.ESCAPE);\n  table.add(0x7f, ParserState.ESCAPE, ParserAction.IGNORE, ParserState.ESCAPE);\n  table.addMany(EXECUTABLES, ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  table.addMany(EXECUTABLES, ParserState.CSI_ENTRY, ParserAction.EXECUTE, ParserState.CSI_ENTRY);\n  table.add(0x7f, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.CSI_PARAM, ParserAction.EXECUTE, ParserState.CSI_PARAM);\n  table.add(0x7f, ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_PARAM);\n  table.addMany(EXECUTABLES, ParserState.CSI_IGNORE, ParserAction.EXECUTE, ParserState.CSI_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.CSI_INTERMEDIATE, ParserAction.EXECUTE, ParserState.CSI_INTERMEDIATE);\n  table.add(0x7f, ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE_INTERMEDIATE, ParserAction.EXECUTE, ParserState.ESCAPE_INTERMEDIATE);\n  table.add(0x7f, ParserState.ESCAPE_INTERMEDIATE, ParserAction.IGNORE, ParserState.ESCAPE_INTERMEDIATE);\n  // osc\n  table.add(0x5d, ParserState.ESCAPE, ParserAction.OSC_START, ParserState.OSC_STRING);\n  table.addMany(PRINTABLES, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(0x7f, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.addMany([0x9c, 0x1b, 0x18, 0x1a, 0x07], ParserState.OSC_STRING, ParserAction.OSC_END, ParserState.GROUND);\n  table.addMany(r(0x1c, 0x20), ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  // sos/pm/apc does nothing\n  table.addMany([0x58, 0x5e, 0x5f], ParserState.ESCAPE, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(PRINTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(EXECUTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.add(0x9c, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.GROUND);\n  table.add(0x7f, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  // csi entries\n  table.add(0x5b, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.CSI_ENTRY);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_ENTRY, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_PARAM, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x40), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(0x7f, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_INTERMEDIATE, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_INTERMEDIATE, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_PARAM, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  // esc_intermediate\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE_INTERMEDIATE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x30, 0x7f), ParserState.ESCAPE_INTERMEDIATE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x50), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x51, 0x58), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany([0x59, 0x5a, 0x5c], ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x60, 0x7f), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  // dcs entry\n  table.add(0x50, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.DCS_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.add(0x7f, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_PARAM);\n  table.addMany(EXECUTABLES, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x80), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.add(0x7f, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_PARAM, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.add(0x7f, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_INTERMEDIATE, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_INTERMEDIATE, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_PARAM, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_ENTRY, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(EXECUTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.addMany(PRINTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.add(0x7f, ParserState.DCS_PASSTHROUGH, ParserAction.IGNORE, ParserState.DCS_PASSTHROUGH);\n  table.addMany([0x1b, 0x9c, 0x18, 0x1a], ParserState.DCS_PASSTHROUGH, ParserAction.DCS_UNHOOK, ParserState.GROUND);\n  // special handling of unicode chars\n  table.add(NON_ASCII_PRINTABLE, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  table.add(NON_ASCII_PRINTABLE, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(NON_ASCII_PRINTABLE, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  return table;\n})();\n\n\n/**\n * EscapeSequenceParser.\n * This class implements the ANSI/DEC compatible parser described by\n * Paul Williams (https://vt100.net/emu/dec_ansi_parser).\n *\n * To implement custom ANSI compliant escape sequences it is not needed to\n * alter this parser, instead consider registering a custom handler.\n * For non ANSI compliant sequences change the transition table with\n * the optional `transitions` constructor argument and\n * reimplement the `parse` method.\n *\n * This parser is currently hardcoded to operate in ZDM (Zero Default Mode)\n * as suggested by the original parser, thus empty parameters are set to 0.\n * This this is not in line with the latest ECMA-48 specification\n * (ZDM was part of the early specs and got completely removed later on).\n *\n * Other than the original parser from vt100.net this parser supports\n * sub parameters in digital parameters separated by colons. Empty sub parameters\n * are set to -1 (no ZDM for sub parameters).\n *\n * About prefix and intermediate bytes:\n * This parser follows the assumptions of the vt100.net parser with these restrictions:\n * - only one prefix byte is allowed as first parameter byte, byte range 0x3c .. 0x3f\n * - max. two intermediates are respected, byte range 0x20 .. 0x2f\n * Note that this is not in line with ECMA-48 which does not limit either of those.\n * Furthermore ECMA-48 allows the prefix byte range at any param byte position. Currently\n * there are no known sequences that follow the broader definition of the specification.\n *\n * TODO: implement error recovery hook via error handler return values\n */\nexport class EscapeSequenceParser extends Disposable implements IEscapeSequenceParser {\n  public initialState: number;\n  public currentState: number;\n  public precedingCodepoint: number;\n\n  // buffers over several parse calls\n  protected _params: Params;\n  protected _collect: number;\n\n  // handler lookup containers\n  protected _printHandler: PrintHandlerType;\n  protected _executeHandlers: { [flag: number]: ExecuteHandlerType };\n  protected _csiHandlers: IHandlerCollection<CsiHandlerType>;\n  protected _escHandlers: IHandlerCollection<EscHandlerType>;\n  protected readonly _oscParser: IOscParser;\n  protected readonly _dcsParser: IDcsParser;\n  protected _errorHandler: (state: IParsingState) => IParsingState;\n\n  // fallback handlers\n  protected _printHandlerFb: PrintFallbackHandlerType;\n  protected _executeHandlerFb: ExecuteFallbackHandlerType;\n  protected _csiHandlerFb: CsiFallbackHandlerType;\n  protected _escHandlerFb: EscFallbackHandlerType;\n  protected _errorHandlerFb: (state: IParsingState) => IParsingState;\n\n  // parser stack save for async handler support\n  protected _parseStack: IParserStackState = {\n    state: ParserStackType.NONE,\n    handlers: [],\n    handlerPos: 0,\n    transition: 0,\n    chunkPos: 0\n  };\n\n  constructor(\n    protected readonly _transitions: TransitionTable = VT500_TRANSITION_TABLE\n  ) {\n    super();\n\n    this.initialState = ParserState.GROUND;\n    this.currentState = this.initialState;\n    this._params = new Params(); // defaults to 32 storable params/subparams\n    this._params.addParam(0);    // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n\n    // set default fallback handlers and handler lookup containers\n    this._printHandlerFb = (data, start, end): void => { };\n    this._executeHandlerFb = (code: number): void => { };\n    this._csiHandlerFb = (ident: number, params: IParams): void => { };\n    this._escHandlerFb = (ident: number): void => { };\n    this._errorHandlerFb = (state: IParsingState): IParsingState => state;\n    this._printHandler = this._printHandlerFb;\n    this._executeHandlers = Object.create(null);\n    this._csiHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this.register(toDisposable(() => {\n      this._csiHandlers = Object.create(null);\n      this._executeHandlers = Object.create(null);\n      this._escHandlers = Object.create(null);\n    }));\n    this._oscParser = this.register(new OscParser());\n    this._dcsParser = this.register(new DcsParser());\n    this._errorHandler = this._errorHandlerFb;\n\n    // swallow 7bit ST (ESC+\\)\n    this.registerEscHandler({ final: '\\\\' }, () => true);\n  }\n\n  protected _identifier(id: IFunctionIdentifier, finalRange: number[] = [0x40, 0x7e]): number {\n    let res = 0;\n    if (id.prefix) {\n      if (id.prefix.length > 1) {\n        throw new Error('only one byte as prefix supported');\n      }\n      res = id.prefix.charCodeAt(0);\n      if (res && 0x3c > res || res > 0x3f) {\n        throw new Error('prefix must be in range 0x3c .. 0x3f');\n      }\n    }\n    if (id.intermediates) {\n      if (id.intermediates.length > 2) {\n        throw new Error('only two bytes as intermediates are supported');\n      }\n      for (let i = 0; i < id.intermediates.length; ++i) {\n        const intermediate = id.intermediates.charCodeAt(i);\n        if (0x20 > intermediate || intermediate > 0x2f) {\n          throw new Error('intermediate must be in range 0x20 .. 0x2f');\n        }\n        res <<= 8;\n        res |= intermediate;\n      }\n    }\n    if (id.final.length !== 1) {\n      throw new Error('final must be a single byte');\n    }\n    const finalCode = id.final.charCodeAt(0);\n    if (finalRange[0] > finalCode || finalCode > finalRange[1]) {\n      throw new Error(`final must be in range ${finalRange[0]} .. ${finalRange[1]}`);\n    }\n    res <<= 8;\n    res |= finalCode;\n\n    return res;\n  }\n\n  public identToString(ident: number): string {\n    const res: string[] = [];\n    while (ident) {\n      res.push(String.fromCharCode(ident & 0xFF));\n      ident >>= 8;\n    }\n    return res.reverse().join('');\n  }\n\n  public setPrintHandler(handler: PrintHandlerType): void {\n    this._printHandler = handler;\n  }\n  public clearPrintHandler(): void {\n    this._printHandler = this._printHandlerFb;\n  }\n\n  public registerEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): IDisposable {\n    const ident = this._identifier(id, [0x30, 0x7e]);\n    if (this._escHandlers[ident] === undefined) {\n      this._escHandlers[ident] = [];\n    }\n    const handlerList = this._escHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearEscHandler(id: IFunctionIdentifier): void {\n    if (this._escHandlers[this._identifier(id, [0x30, 0x7e])]) delete this._escHandlers[this._identifier(id, [0x30, 0x7e])];\n  }\n  public setEscHandlerFallback(handler: EscFallbackHandlerType): void {\n    this._escHandlerFb = handler;\n  }\n\n  public setExecuteHandler(flag: string, handler: ExecuteHandlerType): void {\n    this._executeHandlers[flag.charCodeAt(0)] = handler;\n  }\n  public clearExecuteHandler(flag: string): void {\n    if (this._executeHandlers[flag.charCodeAt(0)]) delete this._executeHandlers[flag.charCodeAt(0)];\n  }\n  public setExecuteHandlerFallback(handler: ExecuteFallbackHandlerType): void {\n    this._executeHandlerFb = handler;\n  }\n\n  public registerCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): IDisposable {\n    const ident = this._identifier(id);\n    if (this._csiHandlers[ident] === undefined) {\n      this._csiHandlers[ident] = [];\n    }\n    const handlerList = this._csiHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearCsiHandler(id: IFunctionIdentifier): void {\n    if (this._csiHandlers[this._identifier(id)]) delete this._csiHandlers[this._identifier(id)];\n  }\n  public setCsiHandlerFallback(callback: (ident: number, params: IParams) => void): void {\n    this._csiHandlerFb = callback;\n  }\n\n  public registerDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): IDisposable {\n    return this._dcsParser.registerHandler(this._identifier(id), handler);\n  }\n  public clearDcsHandler(id: IFunctionIdentifier): void {\n    this._dcsParser.clearHandler(this._identifier(id));\n  }\n  public setDcsHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._dcsParser.setHandlerFallback(handler);\n  }\n\n  public registerOscHandler(ident: number, handler: IOscHandler): IDisposable {\n    return this._oscParser.registerHandler(ident, handler);\n  }\n  public clearOscHandler(ident: number): void {\n    this._oscParser.clearHandler(ident);\n  }\n  public setOscHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._oscParser.setHandlerFallback(handler);\n  }\n\n  public setErrorHandler(callback: (state: IParsingState) => IParsingState): void {\n    this._errorHandler = callback;\n  }\n  public clearErrorHandler(): void {\n    this._errorHandler = this._errorHandlerFb;\n  }\n\n  /**\n   * Reset parser to initial values.\n   *\n   * This can also be used to lift the improper continuation error condition\n   * when dealing with async handlers. Use this only as a last resort to silence\n   * that error when the terminal has no pending data to be processed. Note that\n   * the interrupted async handler might continue its work in the future messing\n   * up the terminal state even further.\n   */\n  public reset(): void {\n    this.currentState = this.initialState;\n    this._oscParser.reset();\n    this._dcsParser.reset();\n    this._params.reset();\n    this._params.addParam(0); // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n    // abort pending continuation from async handler\n    // Here the RESET type indicates, that the next parse call will\n    // ignore any saved stack, instead continues sync with next codepoint from GROUND\n    if (this._parseStack.state !== ParserStackType.NONE) {\n      this._parseStack.state = ParserStackType.RESET;\n      this._parseStack.handlers = []; // also release handlers ref\n    }\n  }\n\n  /**\n   * Async parse support.\n   */\n  protected _preserveStack(\n    state: ParserStackType,\n    handlers: ResumableHandlersType,\n    handlerPos: number,\n    transition: number,\n    chunkPos: number\n  ): void {\n    this._parseStack.state = state;\n    this._parseStack.handlers = handlers;\n    this._parseStack.handlerPos = handlerPos;\n    this._parseStack.transition = transition;\n    this._parseStack.chunkPos = chunkPos;\n  }\n\n  /**\n   * Parse UTF32 codepoints in `data` up to `length`.\n   *\n   * Note: For several actions with high data load the parsing is optimized\n   * by using local read ahead loops with hardcoded conditions to\n   * avoid costly table lookups. Make sure that any change of table values\n   * will be reflected in the loop conditions as well and vice versa.\n   * Affected states/actions:\n   * - GROUND:PRINT\n   * - CSI_PARAM:PARAM\n   * - DCS_PARAM:PARAM\n   * - OSC_STRING:OSC_PUT\n   * - DCS_PASSTHROUGH:DCS_PUT\n   *\n   * Note on asynchronous handler support:\n   * Any handler returning a promise will be treated as asynchronous.\n   * To keep the in-band blocking working for async handlers, `parse` pauses execution,\n   * creates a stack save and returns the promise to the caller.\n   * For proper continuation of the paused state it is important\n   * to await the promise resolving. On resolve the parse must be repeated\n   * with the same chunk of data and the resolved value in `promiseResult`\n   * until no promise is returned.\n   *\n   * Important: With only sync handlers defined, parsing is completely synchronous as well.\n   * As soon as an async handler is involved, synchronous parsing is not possible anymore.\n   *\n   * Boilerplate for proper parsing of multiple chunks with async handlers:\n   *\n   * ```typescript\n   * async function parseMultipleChunks(chunks: Uint32Array[]): Promise<void> {\n   *   for (const chunk of chunks) {\n   *     let result: void | Promise<boolean>;\n   *     let prev: boolean | undefined;\n   *     while (result = parser.parse(chunk, chunk.length, prev)) {\n   *       prev = await result;\n   *     }\n   *   }\n   *   // finished parsing all chunks...\n   * }\n   * ```\n   */\n  public parse(data: Uint32Array, length: number, promiseResult?: boolean): void | Promise<boolean> {\n    let code = 0;\n    let transition = 0;\n    let start = 0;\n    let handlerResult: void | boolean | Promise<boolean>;\n\n    // resume from async handler\n    if (this._parseStack.state) {\n      // allow sync parser reset even in continuation mode\n      // Note: can be used to recover parser from improper continuation error below\n      if (this._parseStack.state === ParserStackType.RESET) {\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1; // continue with next codepoint in GROUND\n      } else {\n        if (promiseResult === undefined || this._parseStack.state === ParserStackType.FAIL) {\n          /**\n           * Reject further parsing on improper continuation after pausing.\n           * This is a really bad condition with screwed up execution order and prolly messed up\n           * terminal state, therefore we exit hard with an exception and reject any further parsing.\n           *\n           * Note: With `Terminal.write` usage this exception should never occur, as the top level\n           * calls are guaranteed to handle async conditions properly. If you ever encounter this\n           * exception in your terminal integration it indicates, that you injected data chunks to\n           * `InputHandler.parse` or `EscapeSequenceParser.parse` synchronously without waiting for\n           * continuation of a running async handler.\n           *\n           * It is possible to get rid of this error by calling `reset`. But dont rely on that,\n           * as the pending async handler still might mess up the terminal later. Instead fix the faulty\n           * async handling, so this error will not be thrown anymore.\n           */\n          this._parseStack.state = ParserStackType.FAIL;\n          throw new Error('improper continuation due to previous async handler, giving up parsing');\n        }\n\n        // we have to resume the old handler loop if:\n        // - return value of the promise was `false`\n        // - handlers are not exhausted yet\n        const handlers = this._parseStack.handlers;\n        let handlerPos = this._parseStack.handlerPos - 1;\n        switch (this._parseStack.state) {\n          case ParserStackType.CSI:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as CsiHandlerType[])[handlerPos](this._params);\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.ESC:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as EscHandlerType[])[handlerPos]();\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.DCS:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n          case ParserStackType.OSC:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n        }\n        // cleanup before continuing with the main sync loop\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1;\n        this.precedingCodepoint = 0;\n        this.currentState = this._parseStack.transition & TableAccess.TRANSITION_STATE_MASK;\n      }\n    }\n\n    // continue with main sync loop\n\n    // process input string\n    for (let i = start; i < length; ++i) {\n      code = data[i];\n\n      // normal transition & action lookup\n      transition = this._transitions.table[this.currentState << TableAccess.INDEX_STATE_SHIFT | (code < 0xa0 ? code : NON_ASCII_PRINTABLE)];\n      switch (transition >> TableAccess.TRANSITION_ACTION_SHIFT) {\n        case ParserAction.PRINT:\n          // read ahead with loop unrolling\n          // Note: 0x20 (SP) is included, 0x7F (DEL) is excluded\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.EXECUTE:\n          if (this._executeHandlers[code]) this._executeHandlers[code]();\n          else this._executeHandlerFb(code);\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.IGNORE:\n          break;\n        case ParserAction.ERROR:\n          const inject: IParsingState = this._errorHandler(\n            {\n              position: i,\n              code,\n              currentState: this.currentState,\n              collect: this._collect,\n              params: this._params,\n              abort: false\n            });\n          if (inject.abort) return;\n          // inject values: currently not implemented\n          break;\n        case ParserAction.CSI_DISPATCH:\n          // Trigger CSI Handler\n          const handlers = this._csiHandlers[this._collect << 8 | code];\n          let j = handlers ? handlers.length - 1 : -1;\n          for (; j >= 0; j--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlers[j](this._params);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.CSI, handlers, j, transition, i);\n              return handlerResult;\n            }\n          }\n          if (j < 0) {\n            this._csiHandlerFb(this._collect << 8 | code, this._params);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.PARAM:\n          // inner loop: digits (0x30 - 0x39) and ; (0x3b) and : (0x3a)\n          do {\n            switch (code) {\n              case 0x3b:\n                this._params.addParam(0);  // ZDM\n                break;\n              case 0x3a:\n                this._params.addSubParam(-1);\n                break;\n              default:  // 0x30 - 0x39\n                this._params.addDigit(code - 48);\n            }\n          } while (++i < length && (code = data[i]) > 0x2f && code < 0x3c);\n          i--;\n          break;\n        case ParserAction.COLLECT:\n          this._collect <<= 8;\n          this._collect |= code;\n          break;\n        case ParserAction.ESC_DISPATCH:\n          const handlersEsc = this._escHandlers[this._collect << 8 | code];\n          let jj = handlersEsc ? handlersEsc.length - 1 : -1;\n          for (; jj >= 0; jj--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlersEsc[jj]();\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.ESC, handlersEsc, jj, transition, i);\n              return handlerResult;\n            }\n          }\n          if (jj < 0) {\n            this._escHandlerFb(this._collect << 8 | code);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.CLEAR:\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          break;\n        case ParserAction.DCS_HOOK:\n          this._dcsParser.hook(this._collect << 8 | code, this._params);\n          break;\n        case ParserAction.DCS_PUT:\n          // inner loop - exit DCS_PUT: 0x18, 0x1a, 0x1b, 0x7f, 0x80 - 0x9f\n          // unhook triggered by: 0x1b, 0x9c (success) and 0x18, 0x1a (abort)\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) === 0x18 || code === 0x1a || code === 0x1b || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._dcsParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.DCS_UNHOOK:\n          handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.DCS, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.OSC_START:\n          this._oscParser.start();\n          break;\n        case ParserAction.OSC_PUT:\n          // inner loop: 0x20 (SP) included, 0x7F (DEL) included\n          for (let j = i + 1; ; j++) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._oscParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.OSC_END:\n          handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.OSC, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n      }\n      this.currentState = transition & TableAccess.TRANSITION_STATE_MASK;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOscHandler, IHandlerCollection, OscFallbackHandlerType, IOscParser, ISubParserStackState } from 'common/parser/Types';\nimport { OscState, PAYLOAD_LIMIT } from 'common/parser/Constants';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { IDisposable } from 'common/Types';\n\nconst EMPTY_HANDLERS: IOscHandler[] = [];\n\nexport class OscParser implements IOscParser {\n  private _state = OscState.START;\n  private _active = EMPTY_HANDLERS;\n  private _id = -1;\n  private _handlers: IHandlerCollection<IOscHandler> = Object.create(null);\n  private _handlerFb: OscFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public registerHandler(ident: number, handler: IOscHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n  public setHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public reset(): void {\n    // force cleanup handlers if payload was already sent\n    if (this._state === OscState.PAYLOAD) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].end(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n\n  private _start(): void {\n    this._active = this._handlers[this._id] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'START');\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].start();\n      }\n    }\n  }\n\n  private _put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public start(): void {\n    // always reset leftover handlers\n    this.reset();\n    this._state = OscState.ID;\n  }\n\n  /**\n   * Put data to current OSC command.\n   * Expects the identifier of the OSC command in the form\n   * OSC id ; payload ST/BEL\n   * Payload chunks are not further processed and get\n   * directly passed to the handlers.\n   */\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._state === OscState.ABORT) {\n      return;\n    }\n    if (this._state === OscState.ID) {\n      while (start < end) {\n        const code = data[start++];\n        if (code === 0x3b) {\n          this._state = OscState.PAYLOAD;\n          this._start();\n          break;\n        }\n        if (code < 0x30 || 0x39 < code) {\n          this._state = OscState.ABORT;\n          return;\n        }\n        if (this._id === -1) {\n          this._id = 0;\n        }\n        this._id = this._id * 10 + code - 48;\n      }\n    }\n    if (this._state === OscState.PAYLOAD && end - start > 0) {\n      this._put(data, start, end);\n    }\n  }\n\n  /**\n   * Indicates end of an OSC command.\n   * Whether the OSC got aborted or finished normally\n   * is indicated by `success`.\n   */\n  public end(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (this._state === OscState.START) {\n      return;\n    }\n    // do nothing if command was faulty\n    if (this._state !== OscState.ABORT) {\n      // if we are still in ID state and get an early end\n      // means that the command has no payload thus we still have\n      // to announce START and send END right after\n      if (this._state === OscState.ID) {\n        this._start();\n      }\n\n      if (!this._active.length) {\n        this._handlerFb(this._id, 'END', success);\n      } else {\n        let handlerResult: boolean | Promise<boolean> = false;\n        let j = this._active.length - 1;\n        let fallThrough = false;\n        if (this._stack.paused) {\n          j = this._stack.loopPosition - 1;\n          handlerResult = promiseResult;\n          fallThrough = this._stack.fallThrough;\n          this._stack.paused = false;\n        }\n        if (!fallThrough && handlerResult === false) {\n          for (; j >= 0; j--) {\n            handlerResult = this._active[j].end(success);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._stack.paused = true;\n              this._stack.loopPosition = j;\n              this._stack.fallThrough = false;\n              return handlerResult;\n            }\n          }\n          j--;\n        }\n        // cleanup left over handlers\n        // we always have to call .end for proper cleanup,\n        // here we use `success` to indicate whether a handler should execute\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].end(false);\n          if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = true;\n            return handlerResult;\n          }\n        }\n      }\n\n    }\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n}\n\n/**\n * Convenient class to allow attaching string based handler functions\n * as OSC handlers.\n */\nexport class OscHandler implements IOscHandler {\n  private _data = '';\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string) => boolean | Promise<boolean>) { }\n\n  public start(): void {\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public end(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data);\n      if (ret instanceof Promise) {\n        // need to hold data until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IParams, ParamsArray } from 'common/parser/Types';\n\n// max value supported for a single param/subparam (clamped to positive int32 range)\nconst MAX_VALUE = 0x7FFFFFFF;\n// max allowed subparams for a single sequence (hardcoded limitation)\nconst MAX_SUBPARAMS = 256;\n\n/**\n * Params storage class.\n * This type is used by the parser to accumulate sequence parameters and sub parameters\n * and transmit them to the input handler actions.\n *\n * NOTES:\n *  - params object for action handlers is borrowed, use `.toArray` or `.clone` to get a copy\n *  - never read beyond `params.length - 1` (likely to contain arbitrary data)\n *  - `.getSubParams` returns a borrowed typed array, use `.getSubParamsAll` for cloned sub params\n *  - hardcoded limitations:\n *    - max. value for a single (sub) param is 2^31 - 1 (greater values are clamped to that)\n *    - max. 256 sub params possible\n *    - negative values are not allowed beside -1 (placeholder for default value)\n *\n * About ZDM (Zero Default Mode):\n * ZDM is not orchestrated by this class. If the parser is in ZDM,\n * it should add 0 for empty params, otherwise -1. This does not apply\n * to subparams, empty subparams should always be added with -1.\n */\nexport class Params implements IParams {\n  // params store and length\n  public params: Int32Array;\n  public length: number;\n\n  // sub params store and length\n  protected _subParams: Int32Array;\n  protected _subParamsLength: number;\n\n  // sub params offsets from param: param idx --> [start, end] offset\n  private _subParamsIdx: Uint16Array;\n  private _rejectDigits: boolean;\n  private _rejectSubDigits: boolean;\n  private _digitIsSub: boolean;\n\n  /**\n   * Create a `Params` type from JS array representation.\n   */\n  public static fromArray(values: ParamsArray): Params {\n    const params = new Params();\n    if (!values.length) {\n      return params;\n    }\n    // skip leading sub params\n    for (let i = (Array.isArray(values[0])) ? 1 : 0; i < values.length; ++i) {\n      const value = values[i];\n      if (Array.isArray(value)) {\n        for (let k = 0; k < value.length; ++k) {\n          params.addSubParam(value[k]);\n        }\n      } else {\n        params.addParam(value);\n      }\n    }\n    return params;\n  }\n\n  /**\n   * @param maxLength max length of storable parameters\n   * @param maxSubParamsLength max length of storable sub parameters\n   */\n  constructor(public maxLength: number = 32, public maxSubParamsLength: number = 32) {\n    if (maxSubParamsLength > MAX_SUBPARAMS) {\n      throw new Error('maxSubParamsLength must not be greater than 256');\n    }\n    this.params = new Int32Array(maxLength);\n    this.length = 0;\n    this._subParams = new Int32Array(maxSubParamsLength);\n    this._subParamsLength = 0;\n    this._subParamsIdx = new Uint16Array(maxLength);\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Clone object.\n   */\n  public clone(): Params {\n    const newParams = new Params(this.maxLength, this.maxSubParamsLength);\n    newParams.params.set(this.params);\n    newParams.length = this.length;\n    newParams._subParams.set(this._subParams);\n    newParams._subParamsLength = this._subParamsLength;\n    newParams._subParamsIdx.set(this._subParamsIdx);\n    newParams._rejectDigits = this._rejectDigits;\n    newParams._rejectSubDigits = this._rejectSubDigits;\n    newParams._digitIsSub = this._digitIsSub;\n    return newParams;\n  }\n\n  /**\n   * Get a JS array representation of the current parameters and sub parameters.\n   * The array is structured as follows:\n   *    sequence: \"1;2:3:4;5::6\"\n   *    array   : [1, 2, [3, 4], 5, [-1, 6]]\n   */\n  public toArray(): ParamsArray {\n    const res: ParamsArray = [];\n    for (let i = 0; i < this.length; ++i) {\n      res.push(this.params[i]);\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        res.push(Array.prototype.slice.call(this._subParams, start, end));\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Reset to initial empty state.\n   */\n  public reset(): void {\n    this.length = 0;\n    this._subParamsLength = 0;\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Add a parameter value.\n   * `Params` only stores up to `maxLength` parameters, any later\n   * parameter will be ignored.\n   * Note: VT devices only stored up to 16 values, xterm seems to\n   * store up to 30.\n   */\n  public addParam(value: number): void {\n    this._digitIsSub = false;\n    if (this.length >= this.maxLength) {\n      this._rejectDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParamsIdx[this.length] = this._subParamsLength << 8 | this._subParamsLength;\n    this.params[this.length++] = value > MAX_VALUE ? MAX_VALUE : value;\n  }\n\n  /**\n   * Add a sub parameter value.\n   * The sub parameter is automatically associated with the last parameter value.\n   * Thus it is not possible to add a subparameter without any parameter added yet.\n   * `Params` only stores up to `subParamsLength` sub parameters, any later\n   * sub parameter will be ignored.\n   */\n  public addSubParam(value: number): void {\n    this._digitIsSub = true;\n    if (!this.length) {\n      return;\n    }\n    if (this._rejectDigits || this._subParamsLength >= this.maxSubParamsLength) {\n      this._rejectSubDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParams[this._subParamsLength++] = value > MAX_VALUE ? MAX_VALUE : value;\n    this._subParamsIdx[this.length - 1]++;\n  }\n\n  /**\n   * Whether parameter at index `idx` has sub parameters.\n   */\n  public hasSubParams(idx: number): boolean {\n    return ((this._subParamsIdx[idx] & 0xFF) - (this._subParamsIdx[idx] >> 8) > 0);\n  }\n\n  /**\n   * Return sub parameters for parameter at index `idx`.\n   * Note: The values are borrowed, thus you need to copy\n   * the values if you need to hold them in nonlocal scope.\n   */\n  public getSubParams(idx: number): Int32Array | null {\n    const start = this._subParamsIdx[idx] >> 8;\n    const end = this._subParamsIdx[idx] & 0xFF;\n    if (end - start > 0) {\n      return this._subParams.subarray(start, end);\n    }\n    return null;\n  }\n\n  /**\n   * Return all sub parameters as {idx: subparams} mapping.\n   * Note: The values are not borrowed.\n   */\n  public getSubParamsAll(): {[idx: number]: Int32Array} {\n    const result: {[idx: number]: Int32Array} = {};\n    for (let i = 0; i < this.length; ++i) {\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        result[i] = this._subParams.slice(start, end);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Add a single digit value to current parameter.\n   * This is used by the parser to account digits on a char by char basis.\n   */\n  public addDigit(value: number): void {\n    let length;\n    if (this._rejectDigits\n      || !(length = this._digitIsSub ? this._subParamsLength : this.length)\n      || (this._digitIsSub && this._rejectSubDigits)\n    ) {\n      return;\n    }\n\n    const store = this._digitIsSub ? this._subParams : this.params;\n    const cur = store[length - 1];\n    store[length - 1] = ~cur ? Math.min(cur * 10 + value, MAX_VALUE) : value;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminalAddon, IDisposable, Terminal } from 'xterm';\n\nexport interface ILoadedAddon {\n  instance: ITerminalAddon;\n  dispose: () => void;\n  isDisposed: boolean;\n}\n\nexport class AddonManager implements IDisposable {\n  protected _addons: ILoadedAddon[] = [];\n\n  constructor() {\n  }\n\n  public dispose(): void {\n    for (let i = this._addons.length - 1; i >= 0; i--) {\n      this._addons[i].instance.dispose();\n    }\n  }\n\n  public loadAddon(terminal: Terminal, instance: ITerminalAddon): void {\n    const loadedAddon: ILoadedAddon = {\n      instance,\n      dispose: instance.dispose,\n      isDisposed: false\n    };\n    this._addons.push(loadedAddon);\n    instance.dispose = () => this._wrappedAddonDispose(loadedAddon);\n    instance.activate(terminal as any);\n  }\n\n  private _wrappedAddonDispose(loadedAddon: ILoadedAddon): void {\n    if (loadedAddon.isDisposed) {\n      // Do nothing if already disposed\n      return;\n    }\n    let index = -1;\n    for (let i = 0; i < this._addons.length; i++) {\n      if (this._addons[i] === loadedAddon) {\n        index = i;\n        break;\n      }\n    }\n    if (index === -1) {\n      throw new Error('Could not dispose an addon that has not been loaded');\n    }\n    loadedAddon.isDisposed = true;\n    loadedAddon.dispose.apply(loadedAddon.instance);\n    this._addons.splice(index, 1);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferLine as IBufferLineApi, IBufferCell as IBufferCellApi } from 'xterm';\nimport { IBuffer } from 'common/buffer/Types';\nimport { BufferLineApiView } from 'common/public/BufferLineApiView';\nimport { CellData } from 'common/buffer/CellData';\n\nexport class BufferApiView implements IBufferApi {\n  constructor(\n    private _buffer: IBuffer,\n    public readonly type: 'normal' | 'alternate'\n  ) { }\n\n  public init(buffer: IBuffer): BufferApiView {\n    this._buffer = buffer;\n    return this;\n  }\n\n  public get cursorY(): number { return this._buffer.y; }\n  public get cursorX(): number { return this._buffer.x; }\n  public get viewportY(): number { return this._buffer.ydisp; }\n  public get baseY(): number { return this._buffer.ybase; }\n  public get length(): number { return this._buffer.lines.length; }\n  public getLine(y: number): IBufferLineApi | undefined {\n    const line = this._buffer.lines.get(y);\n    if (!line) {\n      return undefined;\n    }\n    return new BufferLineApiView(line);\n  }\n  public getNullCell(): IBufferCellApi { return new CellData(); }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferLine, ICellData } from 'common/Types';\nimport { IBufferCell as IBufferCellApi, IBufferLine as IBufferLineApi } from 'xterm';\n\nexport class BufferLineApiView implements IBufferLineApi {\n  constructor(private _line: IBufferLine) { }\n\n  public get isWrapped(): boolean { return this._line.isWrapped; }\n  public get length(): number { return this._line.length; }\n  public getCell(x: number, cell?: IBufferCellApi): IBufferCellApi | undefined {\n    if (x < 0 || x >= this._line.length) {\n      return undefined;\n    }\n\n    if (cell) {\n      this._line.loadCell(x, cell as ICellData);\n      return cell;\n    }\n    return this._line.loadCell(x, new CellData());\n  }\n  public translateToString(trimRight?: boolean, startColumn?: number, endColumn?: number): string {\n    return this._line.translateToString(trimRight, startColumn, endColumn);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferNamespace as IBufferNamespaceApi } from 'xterm';\nimport { BufferApiView } from 'common/public/BufferApiView';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class BufferNamespaceApi implements IBufferNamespaceApi {\n  private _normal: BufferApiView;\n  private _alternate: BufferApiView;\n\n  private readonly _onBufferChange = new EventEmitter<IBufferApi>();\n  public readonly onBufferChange = this._onBufferChange.event;\n\n  constructor(private _core: ICoreTerminal) {\n    this._normal = new BufferApiView(this._core.buffers.normal, 'normal');\n    this._alternate = new BufferApiView(this._core.buffers.alt, 'alternate');\n    this._core.buffers.onBufferActivate(() => this._onBufferChange.fire(this.active));\n  }\n  public get active(): IBufferApi {\n    if (this._core.buffers.active === this._core.buffers.normal) { return this.normal; }\n    if (this._core.buffers.active === this._core.buffers.alt) { return this.alternate; }\n    throw new Error('Active buffer is neither normal nor alternate');\n  }\n  public get normal(): IBufferApi {\n    return this._normal.init(this._core.buffers.normal);\n  }\n  public get alternate(): IBufferApi {\n    return this._alternate.init(this._core.buffers.alt);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParams } from 'common/parser/Types';\nimport { IDisposable, IFunctionIdentifier, IParser } from 'xterm';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class ParserApi implements IParser {\n  constructor(private _core: ICoreTerminal) { }\n\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerCsiHandler(id, (params: IParams) => callback(params.toArray()));\n  }\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerCsiHandler(id, callback);\n  }\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerDcsHandler(id, (data: string, params: IParams) => callback(data, params.toArray()));\n  }\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerDcsHandler(id, callback);\n  }\n  public registerEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerEscHandler(id, handler);\n  }\n  public addEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this.registerEscHandler(id, handler);\n  }\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerOscHandler(ident, callback);\n  }\n  public addOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this.registerOscHandler(ident, callback);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreTerminal } from 'common/Types';\nimport { IUnicodeHandling, IUnicodeVersionProvider } from 'xterm';\n\nexport class UnicodeApi implements IUnicodeHandling {\n  constructor(private _core: ICoreTerminal) { }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._core.unicodeService.register(provider);\n  }\n\n  public get versions(): string[] {\n    return this._core.unicodeService.versions;\n  }\n\n  public get activeVersion(): string {\n    return this._core.unicodeService.activeVersion;\n  }\n\n  public set activeVersion(version: string) {\n    this._core.unicodeService.activeVersion = version;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { BufferSet } from 'common/buffer/BufferSet';\nimport { IBufferSet, IBuffer } from 'common/buffer/Types';\nimport { EventEmitter, IEventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData, IBufferLine, ScrollSource } from 'common/Types';\n\nexport const MINIMUM_COLS = 2; // Less than 2 can mess with wide chars\nexport const MINIMUM_ROWS = 1;\n\nexport class BufferService extends Disposable implements IBufferService {\n  public serviceBrand: any;\n\n  public cols: number;\n  public rows: number;\n  public buffers: IBufferSet;\n  /** Whether the user is scrolling (locks the scroll position) */\n  public isUserScrolling: boolean = false;\n\n  private readonly _onResize = this.register(new EventEmitter<{ cols: number, rows: number }>());\n  public readonly onResize = this._onResize.event;\n  private readonly _onScroll = this.register(new EventEmitter<number>());\n  public readonly onScroll = this._onScroll.event;\n\n  public get buffer(): IBuffer { return this.buffers.active; }\n\n  /** An IBufferline to clone/copy from for new blank lines */\n  private _cachedBlankLine: IBufferLine | undefined;\n\n  constructor(@IOptionsService optionsService: IOptionsService) {\n    super();\n    this.cols = Math.max(optionsService.rawOptions.cols || 0, MINIMUM_COLS);\n    this.rows = Math.max(optionsService.rawOptions.rows || 0, MINIMUM_ROWS);\n    this.buffers = this.register(new BufferSet(optionsService, this));\n  }\n\n  public resize(cols: number, rows: number): void {\n    this.cols = cols;\n    this.rows = rows;\n    this.buffers.resize(cols, rows);\n    // TODO: This doesn't fire when scrollback changes - add a resize event to BufferSet and forward event\n    this._onResize.fire({ cols, rows });\n  }\n\n  public reset(): void {\n    this.buffers.reset();\n    this.isUserScrolling = false;\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param eraseAttr The attribute data to use the for blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    const buffer = this.buffer;\n\n    let newLine: IBufferLine | undefined;\n    newLine = this._cachedBlankLine;\n    if (!newLine || newLine.length !== this.cols || newLine.getFg(0) !== eraseAttr.fg || newLine.getBg(0) !== eraseAttr.bg) {\n      newLine = buffer.getBlankLine(eraseAttr, isWrapped);\n      this._cachedBlankLine = newLine;\n    }\n    newLine.isWrapped = isWrapped;\n\n    const topRow = buffer.ybase + buffer.scrollTop;\n    const bottomRow = buffer.ybase + buffer.scrollBottom;\n\n    if (buffer.scrollTop === 0) {\n      // Determine whether the buffer is going to be trimmed after insertion.\n      const willBufferBeTrimmed = buffer.lines.isFull;\n\n      // Insert the line using the fastest method\n      if (bottomRow === buffer.lines.length - 1) {\n        if (willBufferBeTrimmed) {\n          buffer.lines.recycle().copyFrom(newLine);\n        } else {\n          buffer.lines.push(newLine.clone());\n        }\n      } else {\n        buffer.lines.splice(bottomRow + 1, 0, newLine.clone());\n      }\n\n      // Only adjust ybase and ydisp when the buffer is not trimmed\n      if (!willBufferBeTrimmed) {\n        buffer.ybase++;\n        // Only scroll the ydisp with ybase if the user has not scrolled up\n        if (!this.isUserScrolling) {\n          buffer.ydisp++;\n        }\n      } else {\n        // When the buffer is full and the user has scrolled up, keep the text\n        // stable unless ydisp is right at the top\n        if (this.isUserScrolling) {\n          buffer.ydisp = Math.max(buffer.ydisp - 1, 0);\n        }\n      }\n    } else {\n      // scrollTop is non-zero which means no line will be going to the\n      // scrollback, instead we can just shift them in-place.\n      const scrollRegionHeight = bottomRow - topRow + 1 /* as it's zero-based */;\n      buffer.lines.shiftElements(topRow + 1, scrollRegionHeight - 1, -1);\n      buffer.lines.set(bottomRow, newLine.clone());\n    }\n\n    // Move the viewport to the bottom of the buffer unless the user is\n    // scrolling.\n    if (!this.isUserScrolling) {\n      buffer.ydisp = buffer.ybase;\n    }\n\n    this._onScroll.fire(buffer.ydisp);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    const buffer = this.buffer;\n    if (disp < 0) {\n      if (buffer.ydisp === 0) {\n        return;\n      }\n      this.isUserScrolling = true;\n    } else if (disp + buffer.ydisp >= buffer.ybase) {\n      this.isUserScrolling = false;\n    }\n\n    const oldYdisp = buffer.ydisp;\n    buffer.ydisp = Math.max(Math.min(buffer.ydisp + disp, buffer.ybase), 0);\n\n    // No change occurred, don't trigger scroll/refresh\n    if (oldYdisp === buffer.ydisp) {\n      return;\n    }\n\n    if (!suppressScrollEvent) {\n      this._onScroll.fire(buffer.ydisp);\n    }\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this.scrollLines(pageCount * (this.rows - 1));\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this.scrollLines(-this.buffer.ydisp);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this.scrollLines(this.buffer.ybase - this.buffer.ydisp);\n  }\n\n  public scrollToLine(line: number): void {\n    const scrollAmount = line - this.buffer.ydisp;\n    if (scrollAmount !== 0) {\n      this.scrollLines(scrollAmount);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharsetService } from 'common/services/Services';\nimport { ICharset } from 'common/Types';\n\nexport class CharsetService implements ICharsetService {\n  public serviceBrand: any;\n\n  public charset: ICharset | undefined;\n  public glevel: number = 0;\n\n  private _charsets: (ICharset | undefined)[] = [];\n\n  public reset(): void {\n    this.charset = undefined;\n    this._charsets = [];\n    this.glevel = 0;\n  }\n\n  public setgLevel(g: number): void {\n    this.glevel = g;\n    this.charset = this._charsets[g];\n  }\n\n  public setgCharset(g: number, charset: ICharset | undefined): void {\n    this._charsets[g] = charset;\n    if (this.glevel === g) {\n      this.charset = charset;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, ICoreService, ICoreMouseService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ICoreMouseProtocol, ICoreMouseEvent, CoreMouseEncoding, CoreMouseEventType, CoreMouseButton, CoreMouseAction } from 'common/Types';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * Supported default protocols.\n */\nconst DEFAULT_PROTOCOLS: { [key: string]: ICoreMouseProtocol } = {\n  /**\n   * NONE\n   * Events: none\n   * Modifiers: none\n   */\n  NONE: {\n    events: CoreMouseEventType.NONE,\n    restrict: () => false\n  },\n  /**\n   * X10\n   * Events: mousedown\n   * Modifiers: none\n   */\n  X10: {\n    events: CoreMouseEventType.DOWN,\n    restrict: (e: ICoreMouseEvent) => {\n      // no wheel, no move, no up\n      if (e.button === CoreMouseButton.WHEEL || e.action !== CoreMouseAction.DOWN) {\n        return false;\n      }\n      // no modifiers\n      e.ctrl = false;\n      e.alt = false;\n      e.shift = false;\n      return true;\n    }\n  },\n  /**\n   * VT200\n   * Events: mousedown / mouseup / wheel\n   * Modifiers: all\n   */\n  VT200: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move\n      if (e.action === CoreMouseAction.MOVE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * DRAG\n   * Events: mousedown / mouseup / wheel / mousedrag\n   * Modifiers: all\n   */\n  DRAG: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL | CoreMouseEventType.DRAG,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move without button\n      if (e.action === CoreMouseAction.MOVE && e.button === CoreMouseButton.NONE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * ANY\n   * Events: all mouse related events\n   * Modifiers: all\n   */\n  ANY: {\n    events:\n      CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL\n      | CoreMouseEventType.DRAG | CoreMouseEventType.MOVE,\n    restrict: (e: ICoreMouseEvent) => true\n  }\n};\n\nconst enum Modifiers {\n  SHIFT = 4,\n  ALT = 8,\n  CTRL = 16\n}\n\n// helper for default encoders to generate the event code.\nfunction eventCode(e: ICoreMouseEvent, isSGR: boolean): number {\n  let code = (e.ctrl ? Modifiers.CTRL : 0) | (e.shift ? Modifiers.SHIFT : 0) | (e.alt ? Modifiers.ALT : 0);\n  if (e.button === CoreMouseButton.WHEEL) {\n    code |= 64;\n    code |= e.action;\n  } else {\n    code |= e.button & 3;\n    if (e.button & 4) {\n      code |= 64;\n    }\n    if (e.button & 8) {\n      code |= 128;\n    }\n    if (e.action === CoreMouseAction.MOVE) {\n      code |= CoreMouseAction.MOVE;\n    } else if (e.action === CoreMouseAction.UP && !isSGR) {\n      // special case - only SGR can report button on release\n      // all others have to go with NONE\n      code |= CoreMouseButton.NONE;\n    }\n  }\n  return code;\n}\n\nconst S = String.fromCharCode;\n\n/**\n * Supported default encodings.\n */\nconst DEFAULT_ENCODINGS: { [key: string]: CoreMouseEncoding } = {\n  /**\n   * DEFAULT - CSI M Pb Px Py\n   * Single byte encoding for coords and event code.\n   * Can encode values up to 223 (1-based).\n   */\n  DEFAULT: (e: ICoreMouseEvent) => {\n    const params = [eventCode(e, false) + 32, e.col + 32, e.row + 32];\n    // supress mouse report if we exceed addressible range\n    // Note this is handled differently by emulators\n    // - xterm:         sends 0;0 coords instead\n    // - vte, konsole:  no report\n    if (params[0] > 255 || params[1] > 255 || params[2] > 255) {\n      return '';\n    }\n    return `\\x1b[M${S(params[0])}${S(params[1])}${S(params[2])}`;\n  },\n  /**\n   * SGR - CSI < Pb ; Px ; Py M|m\n   * No encoding limitation.\n   * Can report button on release and works with a well formed sequence.\n   */\n  SGR: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.col};${e.row}${final}`;\n  },\n  SGR_PIXELS: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.x};${e.y}${final}`;\n  }\n};\n\n/**\n * CoreMouseService\n *\n * Provides mouse tracking reports with different protocols and encodings.\n *  - protocols: NONE (default), X10, VT200, DRAG, ANY\n *  - encodings: DEFAULT, SGR (UTF8, URXVT removed in #2507)\n *\n * Custom protocols/encodings can be added by `addProtocol` / `addEncoding`.\n * To activate a protocol/encoding, set `activeProtocol` / `activeEncoding`.\n * Switching a protocol will send a notification event `onProtocolChange`\n * with a list of needed events to track.\n *\n * The service handles the mouse tracking state and decides whether to send\n * a tracking report to the backend based on protocol and encoding limitations.\n * To send a mouse event call `triggerMouseEvent`.\n */\nexport class CoreMouseService extends Disposable implements ICoreMouseService {\n  private _protocols: { [name: string]: ICoreMouseProtocol } = {};\n  private _encodings: { [name: string]: CoreMouseEncoding } = {};\n  private _activeProtocol: string = '';\n  private _activeEncoding: string = '';\n  private _lastEvent: ICoreMouseEvent | null = null;\n\n  private readonly _onProtocolChange = this.register(new EventEmitter<CoreMouseEventType>());\n  public readonly onProtocolChange =  this._onProtocolChange.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    super();\n    // register default protocols and encodings\n    for (const name of Object.keys(DEFAULT_PROTOCOLS)) this.addProtocol(name, DEFAULT_PROTOCOLS[name]);\n    for (const name of Object.keys(DEFAULT_ENCODINGS)) this.addEncoding(name, DEFAULT_ENCODINGS[name]);\n    // call reset to set defaults\n    this.reset();\n  }\n\n  public addProtocol(name: string, protocol: ICoreMouseProtocol): void {\n    this._protocols[name] = protocol;\n  }\n\n  public addEncoding(name: string, encoding: CoreMouseEncoding): void {\n    this._encodings[name] = encoding;\n  }\n\n  public get activeProtocol(): string {\n    return this._activeProtocol;\n  }\n\n  public get areMouseEventsActive(): boolean {\n    return this._protocols[this._activeProtocol].events !== 0;\n  }\n\n  public set activeProtocol(name: string) {\n    if (!this._protocols[name]) {\n      throw new Error(`unknown protocol \"${name}\"`);\n    }\n    this._activeProtocol = name;\n    this._onProtocolChange.fire(this._protocols[name].events);\n  }\n\n  public get activeEncoding(): string {\n    return this._activeEncoding;\n  }\n\n  public set activeEncoding(name: string) {\n    if (!this._encodings[name]) {\n      throw new Error(`unknown encoding \"${name}\"`);\n    }\n    this._activeEncoding = name;\n  }\n\n  public reset(): void {\n    this.activeProtocol = 'NONE';\n    this.activeEncoding = 'DEFAULT';\n    this._lastEvent = null;\n  }\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  public triggerMouseEvent(e: ICoreMouseEvent): boolean {\n    // range check for col/row\n    if (e.col < 0 || e.col >= this._bufferService.cols\n      || e.row < 0 || e.row >= this._bufferService.rows) {\n      return false;\n    }\n\n    // filter nonsense combinations of button + action\n    if (e.button === CoreMouseButton.WHEEL && e.action === CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button === CoreMouseButton.NONE && e.action !== CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button !== CoreMouseButton.WHEEL && (e.action === CoreMouseAction.LEFT || e.action === CoreMouseAction.RIGHT)) {\n      return false;\n    }\n\n    // report 1-based coords\n    e.col++;\n    e.row++;\n\n    // debounce move events at grid or pixel level\n    if (e.action === CoreMouseAction.MOVE\n      && this._lastEvent\n      && this._equalEvents(this._lastEvent, e, this._activeEncoding === 'SGR_PIXELS')\n    ) {\n      return false;\n    }\n\n    // apply protocol restrictions\n    if (!this._protocols[this._activeProtocol].restrict(e)) {\n      return false;\n    }\n\n    // encode report and send\n    const report = this._encodings[this._activeEncoding](e);\n    if (report) {\n      // always send DEFAULT as binary data\n      if (this._activeEncoding === 'DEFAULT') {\n        this._coreService.triggerBinaryEvent(report);\n      } else {\n        this._coreService.triggerDataEvent(report, true);\n      }\n    }\n\n    this._lastEvent = e;\n\n    return true;\n  }\n\n  public explainEvents(events: CoreMouseEventType): { [event: string]: boolean } {\n    return {\n      down: !!(events & CoreMouseEventType.DOWN),\n      up: !!(events & CoreMouseEventType.UP),\n      drag: !!(events & CoreMouseEventType.DRAG),\n      move: !!(events & CoreMouseEventType.MOVE),\n      wheel: !!(events & CoreMouseEventType.WHEEL)\n    };\n  }\n\n  private _equalEvents(e1: ICoreMouseEvent, e2: ICoreMouseEvent, pixels: boolean): boolean {\n    if (pixels) {\n      if (e1.x !== e2.x) return false;\n      if (e1.y !== e2.y) return false;\n    } else {\n      if (e1.col !== e2.col) return false;\n      if (e1.row !== e2.row) return false;\n    }\n    if (e1.button !== e2.button) return false;\n    if (e1.action !== e2.action) return false;\n    if (e1.ctrl !== e2.ctrl) return false;\n    if (e1.alt !== e2.alt) return false;\n    if (e1.shift !== e2.shift) return false;\n    return true;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreService, ILogService, IOptionsService, IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IDecPrivateModes, IModes } from 'common/Types';\nimport { clone } from 'common/Clone';\nimport { Disposable } from 'common/Lifecycle';\n\nconst DEFAULT_MODES: IModes = Object.freeze({\n  insertMode: false\n});\n\nconst DEFAULT_DEC_PRIVATE_MODES: IDecPrivateModes = Object.freeze({\n  applicationCursorKeys: false,\n  applicationKeypad: false,\n  bracketedPasteMode: false,\n  origin: false,\n  reverseWraparound: false,\n  sendFocus: false,\n  wraparound: true // defaults: xterm - true, vt100 - false\n});\n\nexport class CoreService extends Disposable implements ICoreService {\n  public serviceBrand: any;\n\n  public isCursorInitialized: boolean = false;\n  public isCursorHidden: boolean = false;\n  public modes: IModes;\n  public decPrivateModes: IDecPrivateModes;\n\n  private readonly _onData = this.register(new EventEmitter<string>());\n  public readonly onData = this._onData.event;\n  private readonly _onUserInput = this.register(new EventEmitter<void>());\n  public readonly onUserInput = this._onUserInput.event;\n  private readonly _onBinary = this.register(new EventEmitter<string>());\n  public readonly onBinary = this._onBinary.event;\n  private readonly _onRequestScrollToBottom = this.register(new EventEmitter<void>());\n  public readonly onRequestScrollToBottom = this._onRequestScrollToBottom.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public reset(): void {\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public triggerDataEvent(data: string, wasUserInput: boolean = false): void {\n    // Prevents all events to pty process if stdin is disabled\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n\n    // Input is being sent to the terminal, the terminal should focus the prompt.\n    const buffer = this._bufferService.buffer;\n    if (wasUserInput && this._optionsService.rawOptions.scrollOnUserInput && buffer.ybase !== buffer.ydisp) {\n      this._onRequestScrollToBottom.fire();\n    }\n\n    // Fire onUserInput so listeners can react as well (eg. clear selection)\n    if (wasUserInput) {\n      this._onUserInput.fire();\n    }\n\n    // Fire onData API\n    this._logService.debug(`sending data \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onData.fire(data);\n  }\n\n  public triggerBinaryEvent(data: string): void {\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n    this._logService.debug(`sending binary \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onBinary.fire(data);\n  }\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { css } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDecorationService, IInternalDecoration } from 'common/services/Services';\nimport { SortedList } from 'common/SortedList';\nimport { IColor } from 'common/Types';\nimport { IDecorationOptions, IDecoration, IMarker, IEvent } from 'xterm';\n\n// Work variables to avoid garbage collection\nlet $xmin = 0;\nlet $xmax = 0;\n\nexport class DecorationService extends Disposable implements IDecorationService {\n  public serviceBrand: any;\n\n  /**\n   * A list of all decorations, sorted by the marker's line value. This relies on the fact that\n   * while marker line values do change, they should all change by the same amount so this should\n   * never become out of order.\n   */\n  private readonly _decorations: SortedList<IInternalDecoration> = new SortedList(e => e?.marker.line);\n\n  private readonly _onDecorationRegistered = this.register(new EventEmitter<IInternalDecoration>());\n  public readonly onDecorationRegistered = this._onDecorationRegistered.event;\n  private readonly _onDecorationRemoved = this.register(new EventEmitter<IInternalDecoration>());\n  public readonly onDecorationRemoved = this._onDecorationRemoved.event;\n\n  public get decorations(): IterableIterator<IInternalDecoration> { return this._decorations.values(); }\n\n  constructor() {\n    super();\n\n    this.register(toDisposable(() => {\n      for (const d of this._decorations.values()) {\n        this._onDecorationRemoved.fire(d);\n      }\n      this.reset();\n    }));\n  }\n\n  public registerDecoration(options: IDecorationOptions): IDecoration | undefined {\n    if (options.marker.isDisposed) {\n      return undefined;\n    }\n    const decoration = new Decoration(options);\n    if (decoration) {\n      const markerDispose = decoration.marker.onDispose(() => decoration.dispose());\n      decoration.onDispose(() => {\n        if (decoration) {\n          if (this._decorations.delete(decoration)) {\n            this._onDecorationRemoved.fire(decoration);\n          }\n          markerDispose.dispose();\n        }\n      });\n      this._decorations.insert(decoration);\n      this._onDecorationRegistered.fire(decoration);\n    }\n    return decoration;\n  }\n\n  public reset(): void {\n    for (const d of this._decorations.values()) {\n      d.dispose();\n    }\n    this._decorations.clear();\n  }\n\n  public *getDecorationsAtCell(x: number, line: number, layer?: 'bottom' | 'top'): IterableIterator<IInternalDecoration> {\n    let xmin = 0;\n    let xmax = 0;\n    for (const d of this._decorations.getKeyIterator(line)) {\n      xmin = d.options.x ?? 0;\n      xmax = xmin + (d.options.width ?? 1);\n      if (x >= xmin && x < xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        yield d;\n      }\n    }\n  }\n\n  public forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void {\n    this._decorations.forEachByKey(line, d => {\n      $xmin = d.options.x ?? 0;\n      $xmax = $xmin + (d.options.width ?? 1);\n      if (x >= $xmin && x < $xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        callback(d);\n      }\n    });\n  }\n\n  public dispose(): void {\n    for (const d of this._decorations.values()) {\n      this._onDecorationRemoved.fire(d);\n    }\n    this.reset();\n  }\n}\n\nclass Decoration extends Disposable implements IInternalDecoration {\n  public readonly marker: IMarker;\n  public element: HTMLElement | undefined;\n  public isDisposed: boolean = false;\n\n  public readonly onRenderEmitter = this.register(new EventEmitter<HTMLElement>());\n  public readonly onRender = this.onRenderEmitter.event;\n  private readonly _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  private _cachedBg: IColor | undefined | null = null;\n  public get backgroundColorRGB(): IColor | undefined {\n    if (this._cachedBg === null) {\n      if (this.options.backgroundColor) {\n        this._cachedBg = css.toColor(this.options.backgroundColor);\n      } else {\n        this._cachedBg = undefined;\n      }\n    }\n    return this._cachedBg;\n  }\n\n  private _cachedFg: IColor | undefined | null = null;\n  public get foregroundColorRGB(): IColor | undefined {\n    if (this._cachedFg === null) {\n      if (this.options.foregroundColor) {\n        this._cachedFg = css.toColor(this.options.foregroundColor);\n      } else {\n        this._cachedFg = undefined;\n      }\n    }\n    return this._cachedFg;\n  }\n\n  constructor(\n    public readonly options: IDecorationOptions\n  ) {\n    super();\n    this.marker = options.marker;\n    if (this.options.overviewRulerOptions && !this.options.overviewRulerOptions.position) {\n      this.options.overviewRulerOptions.position = 'full';\n    }\n  }\n\n  public override dispose(): void {\n    this._onDispose.fire();\n    super.dispose();\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInstantiationService, IServiceIdentifier } from 'common/services/Services';\nimport { getServiceDependencies } from 'common/services/ServiceRegistry';\n\nexport class ServiceCollection {\n\n  private _entries = new Map<IServiceIdentifier<any>, any>();\n\n  constructor(...entries: [IServiceIdentifier<any>, any][]) {\n    for (const [id, service] of entries) {\n      this.set(id, service);\n    }\n  }\n\n  public set<T>(id: IServiceIdentifier<T>, instance: T): T {\n    const result = this._entries.get(id);\n    this._entries.set(id, instance);\n    return result;\n  }\n\n  public forEach(callback: (id: IServiceIdentifier<any>, instance: any) => any): void {\n    for (const [key, value] of this._entries.entries()) {\n      callback(key, value);\n    }\n  }\n\n  public has(id: IServiceIdentifier<any>): boolean {\n    return this._entries.has(id);\n  }\n\n  public get<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._entries.get(id);\n  }\n}\n\nexport class InstantiationService implements IInstantiationService {\n  public serviceBrand: undefined;\n\n  private readonly _services: ServiceCollection = new ServiceCollection();\n\n  constructor() {\n    this._services.set(IInstantiationService, this);\n  }\n\n  public setService<T>(id: IServiceIdentifier<T>, instance: T): void {\n    this._services.set(id, instance);\n  }\n\n  public getService<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._services.get(id);\n  }\n\n  public createInstance<T>(ctor: any, ...args: any[]): T {\n    const serviceDependencies = getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\n    const serviceArgs: any[] = [];\n    for (const dependency of serviceDependencies) {\n      const service = this._services.get(dependency.id);\n      if (!service) {\n        throw new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n      }\n      serviceArgs.push(service);\n    }\n\n    const firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n    // check for argument mismatches, adjust static args if needed\n    if (args.length !== firstServiceArgPos) {\n      throw new Error(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n    }\n\n    // now create the instance\n    return new ctor(...[...args, ...serviceArgs]);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { ILogService, IOptionsService, LogLevelEnum } from 'common/services/Services';\n\ntype LogType = (message?: any, ...optionalParams: any[]) => void;\n\ninterface IConsole {\n  log: LogType;\n  error: LogType;\n  info: LogType;\n  trace: LogType;\n  warn: LogType;\n}\n\n// console is available on both node.js and browser contexts but the common\n// module doesn't depend on them so we need to explicitly declare it.\ndeclare const console: IConsole;\n\nconst optionsKeyToLogLevel: { [key: string]: LogLevelEnum } = {\n  debug: LogLevelEnum.DEBUG,\n  info: LogLevelEnum.INFO,\n  warn: LogLevelEnum.WARN,\n  error: LogLevelEnum.ERROR,\n  off: LogLevelEnum.OFF\n};\n\nconst LOG_PREFIX = 'xterm.js: ';\n\nexport class LogService extends Disposable implements ILogService {\n  public serviceBrand: any;\n\n  public logLevel: LogLevelEnum = LogLevelEnum.OFF;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._updateLogLevel();\n    this.register(this._optionsService.onSpecificOptionChange('logLevel', () => this._updateLogLevel()));\n  }\n\n  private _updateLogLevel(): void {\n    this.logLevel = optionsKeyToLogLevel[this._optionsService.rawOptions.logLevel];\n  }\n\n  private _evalLazyOptionalParams(optionalParams: any[]): void {\n    for (let i = 0; i < optionalParams.length; i++) {\n      if (typeof optionalParams[i] === 'function') {\n        optionalParams[i] = optionalParams[i]();\n      }\n    }\n  }\n\n  private _log(type: LogType, message: string, optionalParams: any[]): void {\n    this._evalLazyOptionalParams(optionalParams);\n    type.call(console, LOG_PREFIX + message, ...optionalParams);\n  }\n\n  public debug(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.DEBUG) {\n      this._log(console.log, message, optionalParams);\n    }\n  }\n\n  public info(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.INFO) {\n      this._log(console.info, message, optionalParams);\n    }\n  }\n\n  public warn(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.WARN) {\n      this._log(console.warn, message, optionalParams);\n    }\n  }\n\n  public error(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.ERROR) {\n      this._log(console.error, message, optionalParams);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService, ITerminalOptions, FontWeight } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { isMac } from 'common/Platform';\nimport { CursorStyle, IDisposable } from 'common/Types';\nimport { Disposable } from 'common/Lifecycle';\n\nexport const DEFAULT_OPTIONS: Readonly<Required<ITerminalOptions>> = {\n  cols: 80,\n  rows: 24,\n  cursorBlink: false,\n  cursorStyle: 'block',\n  cursorWidth: 1,\n  customGlyphs: true,\n  drawBoldTextInBrightColors: true,\n  fastScrollModifier: 'alt',\n  fastScrollSensitivity: 5,\n  fontFamily: 'courier-new, courier, monospace',\n  fontSize: 15,\n  fontWeight: 'normal',\n  fontWeightBold: 'bold',\n  lineHeight: 1.0,\n  letterSpacing: 0,\n  linkHandler: null,\n  logLevel: 'info',\n  scrollback: 1000,\n  scrollOnUserInput: true,\n  scrollSensitivity: 1,\n  screenReaderMode: false,\n  smoothScrollDuration: 0,\n  macOptionIsMeta: false,\n  macOptionClickForcesSelection: false,\n  minimumContrastRatio: 1,\n  disableStdin: false,\n  allowProposedApi: false,\n  allowTransparency: false,\n  tabStopWidth: 8,\n  theme: {},\n  rightClickSelectsWord: isMac,\n  windowOptions: {},\n  windowsMode: false,\n  wordSeparator: ' ()[]{}\\',\"`',\n  altClickMovesCursor: true,\n  convertEol: false,\n  termName: 'xterm',\n  cancelEvents: false,\n  overviewRulerWidth: 0\n};\n\nconst FONT_WEIGHT_OPTIONS: Extract<FontWeight, string>[] = ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'];\n\nexport class OptionsService extends Disposable implements IOptionsService {\n  public serviceBrand: any;\n\n  public readonly rawOptions: Required<ITerminalOptions>;\n  public options: Required<ITerminalOptions>;\n\n  private readonly _onOptionChange = this.register(new EventEmitter<keyof ITerminalOptions>());\n  public readonly onOptionChange = this._onOptionChange.event;\n\n  constructor(options: Partial<ITerminalOptions>) {\n    super();\n    // set the default value of each option\n    const defaultOptions = { ...DEFAULT_OPTIONS };\n    for (const key in options) {\n      if (key in defaultOptions) {\n        try {\n          const newValue = options[key];\n          defaultOptions[key] = this._sanitizeAndValidateOption(key, newValue);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n\n    // set up getters and setters for each option\n    this.rawOptions = defaultOptions;\n    this.options = { ... defaultOptions };\n    this._setupOptions();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  public onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (value: ITerminalOptions[T]) => any): IDisposable {\n    return this.onOptionChange(eventKey => {\n      if (eventKey === key) {\n        listener(this.rawOptions[key]);\n      }\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  public onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable {\n    return this.onOptionChange(eventKey => {\n      if (keys.indexOf(eventKey) !== -1) {\n        listener();\n      }\n    });\n  }\n\n  private _setupOptions(): void {\n    const getter = (propName: string): any => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n      return this.rawOptions[propName];\n    };\n\n    const setter = (propName: string, value: any): void => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n\n      value = this._sanitizeAndValidateOption(propName, value);\n      // Don't fire an option change event if they didn't change\n      if (this.rawOptions[propName] !== value) {\n        this.rawOptions[propName] = value;\n        this._onOptionChange.fire(propName);\n      }\n    };\n\n    for (const propName in this.rawOptions) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this.options, propName, desc);\n    }\n  }\n\n  private _sanitizeAndValidateOption(key: string, value: any): any {\n    switch (key) {\n      case 'cursorStyle':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        if (!isCursorStyle(value)) {\n          throw new Error(`\"${value}\" is not a valid value for ${key}`);\n        }\n        break;\n      case 'wordSeparator':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        break;\n      case 'fontWeight':\n      case 'fontWeightBold':\n        if (typeof value === 'number' && 1 <= value && value <= 1000) {\n          // already valid numeric value\n          break;\n        }\n        value = FONT_WEIGHT_OPTIONS.includes(value) ? value : DEFAULT_OPTIONS[key];\n        break;\n      case 'cursorWidth':\n        value = Math.floor(value);\n        // Fall through for bounds check\n      case 'lineHeight':\n      case 'tabStopWidth':\n        if (value < 1) {\n          throw new Error(`${key} cannot be less than 1, value: ${value}`);\n        }\n        break;\n      case 'minimumContrastRatio':\n        value = Math.max(1, Math.min(21, Math.round(value * 10) / 10));\n        break;\n      case 'scrollback':\n        value = Math.min(value, 4294967295);\n        if (value < 0) {\n          throw new Error(`${key} cannot be less than 0, value: ${value}`);\n        }\n        break;\n      case 'fastScrollSensitivity':\n      case 'scrollSensitivity':\n        if (value <= 0) {\n          throw new Error(`${key} cannot be less than or equal to 0, value: ${value}`);\n        }\n      case 'rows':\n      case 'cols':\n        if (!value && value !== 0) {\n          throw new Error(`${key} must be numeric, value: ${value}`);\n        }\n        break;\n    }\n    return value;\n  }\n}\n\nfunction isCursorStyle(value: unknown): value is CursorStyle {\n  return value === 'block' || value === 'underline' || value === 'bar';\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, IOscLinkService } from 'common/services/Services';\nimport { IMarker, IOscLinkData } from 'common/Types';\n\nexport class OscLinkService implements IOscLinkService {\n  public serviceBrand: any;\n\n  private _nextId = 1;\n\n  /**\n   * A map of the link key to link entry. This is used to add additional lines to links with ids.\n   */\n  private _entriesWithId: Map<string, IOscLinkEntryWithId> = new Map();\n\n  /**\n   * A map of the link id to the link entry. The \"link id\" (number) which is the numberic\n   * representation of a unique link should not be confused with \"id\" (string) which comes in with\n   * `id=` in the OSC link's properties.\n   */\n  private _dataByLinkId: Map<number, IOscLinkEntryNoId | IOscLinkEntryWithId> = new Map();\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n  }\n\n  public registerLink(data: IOscLinkData): number {\n    const buffer = this._bufferService.buffer;\n\n    // Links with no id will only ever be registered a single time\n    if (data.id === undefined) {\n      const marker = buffer.addMarker(buffer.ybase + buffer.y);\n      const entry: IOscLinkEntryNoId = {\n        data,\n        id: this._nextId++,\n        lines: [marker]\n      };\n      marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n      this._dataByLinkId.set(entry.id, entry);\n      return entry.id;\n    }\n\n    // Add the line to the link if it already exists\n    const castData = data as Required<IOscLinkData>;\n    const key = this._getEntryIdKey(castData);\n    const match = this._entriesWithId.get(key);\n    if (match) {\n      this.addLineToLink(match.id, buffer.ybase + buffer.y);\n      return match.id;\n    }\n\n    // Create the link\n    const marker = buffer.addMarker(buffer.ybase + buffer.y);\n    const entry: IOscLinkEntryWithId = {\n      id: this._nextId++,\n      key: this._getEntryIdKey(castData),\n      data: castData,\n      lines: [marker]\n    };\n    marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n    this._entriesWithId.set(entry.key, entry);\n    this._dataByLinkId.set(entry.id, entry);\n    return entry.id;\n  }\n\n  public addLineToLink(linkId: number, y: number): void {\n    const entry = this._dataByLinkId.get(linkId);\n    if (!entry) {\n      return;\n    }\n    if (entry.lines.every(e => e.line !== y)) {\n      const marker = this._bufferService.buffer.addMarker(y);\n      entry.lines.push(marker);\n      marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n    }\n  }\n\n  public getLinkData(linkId: number): IOscLinkData | undefined {\n    return this._dataByLinkId.get(linkId)?.data;\n  }\n\n  private _getEntryIdKey(linkData: Required<IOscLinkData>): string {\n    return `${linkData.id};;${linkData.uri}`;\n  }\n\n  private _removeMarkerFromLink(entry: IOscLinkEntryNoId | IOscLinkEntryWithId, marker: IMarker): void {\n    const index = entry.lines.indexOf(marker);\n    if (index === -1) {\n      return;\n    }\n    entry.lines.splice(index, 1);\n    if (entry.lines.length === 0) {\n      if (entry.data.id !== undefined) {\n        this._entriesWithId.delete((entry as IOscLinkEntryWithId).key);\n      }\n      this._dataByLinkId.delete(entry.id);\n    }\n  }\n}\n\ninterface IOscLinkEntry<T extends IOscLinkData> {\n  data: T;\n  id: number;\n  lines: IMarker[];\n}\n\ninterface IOscLinkEntryNoId extends IOscLinkEntry<IOscLinkData> {\n}\n\ninterface IOscLinkEntryWithId extends IOscLinkEntry<Required<IOscLinkData>> {\n  key: string;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServiceIdentifier } from 'common/services/Services';\n\nconst DI_TARGET = 'di$target';\nconst DI_DEPENDENCIES = 'di$dependencies';\n\nexport const serviceRegistry: Map<string, IServiceIdentifier<any>> = new Map();\n\nexport function getServiceDependencies(ctor: any): { id: IServiceIdentifier<any>, index: number, optional: boolean }[] {\n  return ctor[DI_DEPENDENCIES] || [];\n}\n\nexport function createDecorator<T>(id: string): IServiceIdentifier<T> {\n  if (serviceRegistry.has(id)) {\n    return serviceRegistry.get(id)!;\n  }\n\n  const decorator: any = function (target: Function, key: string, index: number): any {\n    if (arguments.length !== 3) {\n      throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n    }\n\n    storeServiceDependency(decorator, target, index);\n  };\n\n  decorator.toString = () => id;\n\n  serviceRegistry.set(id, decorator);\n  return decorator;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n  if ((target as any)[DI_TARGET] === target) {\n    (target as any)[DI_DEPENDENCIES].push({ id, index });\n  } else {\n    (target as any)[DI_DEPENDENCIES] = [{ id, index }];\n    (target as any)[DI_TARGET] = target;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent, IEventEmitter } from 'common/EventEmitter';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IDecPrivateModes, ICoreMouseEvent, CoreMouseEncoding, ICoreMouseProtocol, CoreMouseEventType, ICharset, IWindowOptions, IModes, IAttributeData, ScrollSource, IDisposable, IColor, CursorStyle, IOscLinkData } from 'common/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDecorationOptions, IDecoration, ILinkHandler } from 'xterm';\n\nexport const IBufferService = createDecorator<IBufferService>('BufferService');\nexport interface IBufferService {\n  serviceBrand: undefined;\n\n  readonly cols: number;\n  readonly rows: number;\n  readonly buffer: IBuffer;\n  readonly buffers: IBufferSet;\n  isUserScrolling: boolean;\n  onResize: IEvent<{ cols: number, rows: number }>;\n  onScroll: IEvent<number>;\n  scroll(eraseAttr: IAttributeData, isWrapped?: boolean): void;\n  scrollToBottom(): void;\n  scrollToTop(): void;\n  scrollToLine(line: number): void;\n  scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void;\n  scrollPages(pageCount: number): void;\n  resize(cols: number, rows: number): void;\n  reset(): void;\n}\n\nexport const ICoreMouseService = createDecorator<ICoreMouseService>('CoreMouseService');\nexport interface ICoreMouseService {\n  activeProtocol: string;\n  activeEncoding: string;\n  areMouseEventsActive: boolean;\n  addProtocol(name: string, protocol: ICoreMouseProtocol): void;\n  addEncoding(name: string, encoding: CoreMouseEncoding): void;\n  reset(): void;\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  triggerMouseEvent(event: ICoreMouseEvent): boolean;\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  onProtocolChange: IEvent<CoreMouseEventType>;\n\n  /**\n   * Human readable version of mouse events.\n   */\n  explainEvents(events: CoreMouseEventType): { [event: string]: boolean };\n}\n\nexport const ICoreService = createDecorator<ICoreService>('CoreService');\nexport interface ICoreService {\n  serviceBrand: undefined;\n\n  /**\n   * Initially the cursor will not be visible until the first time the terminal\n   * is focused.\n   */\n  isCursorInitialized: boolean;\n  isCursorHidden: boolean;\n\n  readonly modes: IModes;\n  readonly decPrivateModes: IDecPrivateModes;\n\n  readonly onData: IEvent<string>;\n  readonly onUserInput: IEvent<void>;\n  readonly onBinary: IEvent<string>;\n  readonly onRequestScrollToBottom: IEvent<void>;\n\n  reset(): void;\n\n  /**\n   * Triggers the onData event in the public API.\n   * @param data The data that is being emitted.\n   * @param wasUserInput Whether the data originated from the user (as opposed to\n   * resulting from parsing incoming data). When true this will also:\n   * - Scroll to the bottom of the buffer if option scrollOnUserInput is true.\n   * - Fire the `onUserInput` event (so selection can be cleared).\n   */\n  triggerDataEvent(data: string, wasUserInput?: boolean): void;\n\n  /**\n   * Triggers the onBinary event in the public API.\n   * @param data The data that is being emitted.\n   */\n  triggerBinaryEvent(data: string): void;\n}\n\nexport const ICharsetService = createDecorator<ICharsetService>('CharsetService');\nexport interface ICharsetService {\n  serviceBrand: undefined;\n\n  charset: ICharset | undefined;\n  readonly glevel: number;\n\n  reset(): void;\n\n  /**\n   * Set the G level of the terminal.\n   * @param g\n   */\n  setgLevel(g: number): void;\n\n  /**\n   * Set the charset for the given G level of the terminal.\n   * @param g\n   * @param charset\n   */\n  setgCharset(g: number, charset: ICharset | undefined): void;\n}\n\nexport interface IServiceIdentifier<T> {\n  (...args: any[]): void;\n  type: T;\n}\n\nexport interface IBrandedService {\n  serviceBrand: undefined;\n}\n\ntype GetLeadingNonServiceArgs<Args> =\n  Args extends [...IBrandedService[]] ? []\n    : Args extends [infer A1, ...IBrandedService[]] ? [A1]\n      : Args extends [infer A1, infer A2, ...IBrandedService[]] ? [A1, A2]\n        : Args extends [infer A1, infer A2, infer A3, ...IBrandedService[]] ? [A1, A2, A3]\n          : Args extends [infer A1, infer A2, infer A3, infer A4, ...IBrandedService[]] ? [A1, A2, A3, A4]\n            : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, ...IBrandedService[]] ? [A1, A2, A3, A4, A5]\n              : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6]\n                : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7]\n                  : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, infer A8, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7, A8]\n                    : never;\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('InstantiationService');\nexport interface IInstantiationService {\n  serviceBrand: undefined;\n\n  setService<T>(id: IServiceIdentifier<T>, instance: T): void;\n  getService<T>(id: IServiceIdentifier<T>): T | undefined;\n  createInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n}\n\nexport enum LogLevelEnum {\n  DEBUG = 0,\n  INFO = 1,\n  WARN = 2,\n  ERROR = 3,\n  OFF = 4\n}\n\nexport const ILogService = createDecorator<ILogService>('LogService');\nexport interface ILogService {\n  serviceBrand: undefined;\n\n  logLevel: LogLevelEnum;\n\n  debug(message: any, ...optionalParams: any[]): void;\n  info(message: any, ...optionalParams: any[]): void;\n  warn(message: any, ...optionalParams: any[]): void;\n  error(message: any, ...optionalParams: any[]): void;\n}\n\nexport const IOptionsService = createDecorator<IOptionsService>('OptionsService');\nexport interface IOptionsService {\n  serviceBrand: undefined;\n\n  /**\n   * Read only access to the raw options object, this is an internal-only fast path for accessing\n   * single options without any validation as we trust TypeScript to enforce correct usage\n   * internally.\n   */\n  readonly rawOptions: Required<ITerminalOptions>;\n\n  /**\n   * Options as exposed through the public API, this property uses getters and setters with\n   * validation which makes it safer but slower. {@link rawOptions} should be used for pretty much\n   * all internal usage for performance reasons.\n   */\n  readonly options: Required<ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when any option changes.\n   */\n  readonly onOptionChange: IEvent<keyof ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when a specific option changes, this is a convenience method that is\n   * preferred over {@link onOptionChange} when only a single option is being listened to.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (arg1: Required<ITerminalOptions>[T]) => any): IDisposable;\n\n  /**\n   * Adds an event listener for when a set of specific options change, this is a convenience method\n   * that is preferred over {@link onOptionChange} when multiple options are being listened to and\n   * handled the same way.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable;\n}\n\nexport type FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number;\nexport type LogLevel = 'debug' | 'info' | 'warn' | 'error' | 'off';\n\nexport interface ITerminalOptions {\n  allowProposedApi?: boolean;\n  allowTransparency?: boolean;\n  altClickMovesCursor?: boolean;\n  cols?: number;\n  convertEol?: boolean;\n  cursorBlink?: boolean;\n  cursorStyle?: CursorStyle;\n  cursorWidth?: number;\n  customGlyphs?: boolean;\n  disableStdin?: boolean;\n  drawBoldTextInBrightColors?: boolean;\n  fastScrollModifier?: 'none' | 'alt' | 'ctrl' | 'shift';\n  fastScrollSensitivity?: number;\n  fontSize?: number;\n  fontFamily?: string;\n  fontWeight?: FontWeight;\n  fontWeightBold?: FontWeight;\n  letterSpacing?: number;\n  lineHeight?: number;\n  linkHandler?: ILinkHandler | null;\n  logLevel?: LogLevel;\n  macOptionIsMeta?: boolean;\n  macOptionClickForcesSelection?: boolean;\n  minimumContrastRatio?: number;\n  rightClickSelectsWord?: boolean;\n  rows?: number;\n  screenReaderMode?: boolean;\n  scrollback?: number;\n  scrollOnUserInput?: boolean;\n  scrollSensitivity?: number;\n  smoothScrollDuration?: number;\n  tabStopWidth?: number;\n  theme?: ITheme;\n  windowsMode?: boolean;\n  windowOptions?: IWindowOptions;\n  wordSeparator?: string;\n  overviewRulerWidth?: number;\n\n  [key: string]: any;\n  cancelEvents: boolean;\n  termName: string;\n}\n\nexport interface ITheme {\n  foreground?: string;\n  background?: string;\n  cursor?: string;\n  cursorAccent?: string;\n  selectionForeground?: string;\n  selectionBackground?: string;\n  selectionInactiveBackground?: string;\n  black?: string;\n  red?: string;\n  green?: string;\n  yellow?: string;\n  blue?: string;\n  magenta?: string;\n  cyan?: string;\n  white?: string;\n  brightBlack?: string;\n  brightRed?: string;\n  brightGreen?: string;\n  brightYellow?: string;\n  brightBlue?: string;\n  brightMagenta?: string;\n  brightCyan?: string;\n  brightWhite?: string;\n  extendedAnsi?: string[];\n}\n\nexport const IOscLinkService = createDecorator<IOscLinkService>('OscLinkService');\nexport interface IOscLinkService {\n  serviceBrand: undefined;\n  /**\n   * Registers a link to the service, returning the link ID. The link data is managed by this\n   * service and will be freed when this current cursor position is trimmed off the buffer.\n   */\n  registerLink(linkData: IOscLinkData): number;\n  /**\n   * Adds a line to a link if needed.\n   */\n  addLineToLink(linkId: number, y: number): void;\n  /** Get the link data associated with a link ID. */\n  getLinkData(linkId: number): IOscLinkData | undefined;\n}\n\nexport const IUnicodeService = createDecorator<IUnicodeService>('UnicodeService');\nexport interface IUnicodeService {\n  serviceBrand: undefined;\n  /** Register an Unicode version provider. */\n  register(provider: IUnicodeVersionProvider): void;\n  /** Registered Unicode versions. */\n  readonly versions: string[];\n  /** Currently active version. */\n  activeVersion: string;\n  /** Event triggered, when activate version changed. */\n  readonly onChange: IEvent<string>;\n\n  /**\n   * Unicode version dependent\n   */\n  wcwidth(codepoint: number): number;\n  getStringCellWidth(s: string): number;\n}\n\nexport interface IUnicodeVersionProvider {\n  readonly version: string;\n  wcwidth(ucs: number): 0 | 1 | 2;\n}\n\nexport const IDecorationService = createDecorator<IDecorationService>('DecorationService');\nexport interface IDecorationService extends IDisposable {\n  serviceBrand: undefined;\n  readonly decorations: IterableIterator<IInternalDecoration>;\n  readonly onDecorationRegistered: IEvent<IInternalDecoration>;\n  readonly onDecorationRemoved: IEvent<IInternalDecoration>;\n  registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined;\n  reset(): void;\n  /**\n   * Trigger a callback over the decoration at a cell (in no particular order). This uses a callback\n   * instead of an iterator as it's typically used in hot code paths.\n   */\n  forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void;\n}\nexport interface IInternalDecoration extends IDecoration {\n  readonly options: IDecorationOptions;\n  readonly backgroundColorRGB: IColor | undefined;\n  readonly foregroundColorRGB: IColor | undefined;\n  readonly onRenderEmitter: IEventEmitter<HTMLElement>;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeService, IUnicodeVersionProvider } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { UnicodeV6 } from 'common/input/UnicodeV6';\n\nexport class UnicodeService implements IUnicodeService {\n  public serviceBrand: any;\n\n  private _providers: {[key: string]: IUnicodeVersionProvider} = Object.create(null);\n  private _active: string = '';\n  private _activeProvider: IUnicodeVersionProvider;\n\n  private readonly _onChange = new EventEmitter<string>();\n  public readonly onChange = this._onChange.event;\n\n  constructor() {\n    const defaultProvider = new UnicodeV6();\n    this.register(defaultProvider);\n    this._active = defaultProvider.version;\n    this._activeProvider = defaultProvider;\n  }\n\n  public dispose(): void {\n    this._onChange.dispose();\n  }\n\n  public get versions(): string[] {\n    return Object.keys(this._providers);\n  }\n\n  public get activeVersion(): string {\n    return this._active;\n  }\n\n  public set activeVersion(version: string) {\n    if (!this._providers[version]) {\n      throw new Error(`unknown Unicode version \"${version}\"`);\n    }\n    this._active = version;\n    this._activeProvider = this._providers[version];\n    this._onChange.fire(version);\n  }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._providers[provider.version] = provider;\n  }\n\n  /**\n   * Unicode version dependent interface.\n   */\n  public wcwidth(num: number): number {\n    return this._activeProvider.wcwidth(num);\n  }\n\n  public getStringCellWidth(s: string): number {\n    let result = 0;\n    const length = s.length;\n    for (let i = 0; i < length; ++i) {\n      let code = s.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          // this should not happen with strings retrieved from\n          // Buffer.translateToString as it converts from UTF-32\n          // and therefore always should contain the second part\n          // for any other string we still have to handle it somehow:\n          // simply treat the lonely surrogate first as a single char (UCS-2 behavior)\n          return result + this.wcwidth(code);\n        }\n        const second = s.charCodeAt(i);\n        // convert surrogate pair to high codepoint only for valid second part (UTF-16)\n        // otherwise treat them independently (UCS-2 behavior)\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          code = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          result += this.wcwidth(second);\n        }\n      }\n      result += this.wcwidth(code);\n    }\n    return result;\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal as ITerminalApi, IMarker, IDisposable, ILocalizableStrings, ITerminalAddon, IBufferNamespace as IBufferNamespaceApi, IParser, ILinkProvider, IUnicodeHandling, IModes, IDecorationOptions, IDecoration } from 'xterm';\nimport { IBufferRange, ITerminal } from 'browser/Types';\nimport { Terminal as TerminalCore } from 'browser/Terminal';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { IEvent } from 'common/EventEmitter';\nimport { ParserApi } from 'common/public/ParserApi';\nimport { UnicodeApi } from 'common/public/UnicodeApi';\nimport { AddonManager } from 'common/public/AddonManager';\nimport { BufferNamespaceApi } from 'common/public/BufferNamespaceApi';\nimport { ITerminalOptions } from 'common/Types';\n\n/**\n * The set of options that only have an effect when set in the Terminal constructor.\n */\nconst CONSTRUCTOR_ONLY_OPTIONS = ['cols', 'rows'];\n\nexport class Terminal implements ITerminalApi {\n  private _core: ITerminal;\n  private _addonManager: AddonManager;\n  private _parser: IParser | undefined;\n  private _buffer: BufferNamespaceApi | undefined;\n  private _publicOptions: Required<ITerminalOptions>;\n\n  constructor(options?: ITerminalOptions) {\n    this._core = new TerminalCore(options);\n    this._addonManager = new AddonManager();\n\n    this._publicOptions = { ... this._core.options };\n    const getter = (propName: string): any => {\n      return this._core.options[propName];\n    };\n    const setter = (propName: string, value: any): void => {\n      this._checkReadonlyOptions(propName);\n      this._core.options[propName] = value;\n    };\n\n    for (const propName in this._core.options) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this._publicOptions, propName, desc);\n    }\n  }\n\n  private _checkReadonlyOptions(propName: string): void {\n    // Throw an error if any constructor only option is modified\n    // from terminal.options\n    // Modifications from anywhere else are allowed\n    if (CONSTRUCTOR_ONLY_OPTIONS.includes(propName)) {\n      throw new Error(`Option \"${propName}\" can only be set in the constructor`);\n    }\n  }\n\n  private _checkProposedApi(): void {\n    if (!this._core.optionsService.rawOptions.allowProposedApi) {\n      throw new Error('You must set the allowProposedApi option to true to use proposed API');\n    }\n  }\n\n  public get onBell(): IEvent<void> { return this._core.onBell; }\n  public get onBinary(): IEvent<string> { return this._core.onBinary; }\n  public get onCursorMove(): IEvent<void> { return this._core.onCursorMove; }\n  public get onData(): IEvent<string> { return this._core.onData; }\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._core.onKey; }\n  public get onLineFeed(): IEvent<void> { return this._core.onLineFeed; }\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._core.onRender; }\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._core.onResize; }\n  public get onScroll(): IEvent<number> { return this._core.onScroll; }\n  public get onSelectionChange(): IEvent<void> { return this._core.onSelectionChange; }\n  public get onTitleChange(): IEvent<string> { return this._core.onTitleChange; }\n  public get onWriteParsed(): IEvent<void> { return this._core.onWriteParsed; }\n\n  public get element(): HTMLElement | undefined { return this._core.element; }\n  public get parser(): IParser {\n    if (!this._parser) {\n      this._parser = new ParserApi(this._core);\n    }\n    return this._parser;\n  }\n  public get unicode(): IUnicodeHandling {\n    this._checkProposedApi();\n    return new UnicodeApi(this._core);\n  }\n  public get textarea(): HTMLTextAreaElement | undefined { return this._core.textarea; }\n  public get rows(): number { return this._core.rows; }\n  public get cols(): number { return this._core.cols; }\n  public get buffer(): IBufferNamespaceApi {\n    if (!this._buffer) {\n      this._buffer = new BufferNamespaceApi(this._core);\n    }\n    return this._buffer;\n  }\n  public get markers(): ReadonlyArray<IMarker> {\n    this._checkProposedApi();\n    return this._core.markers;\n  }\n  public get modes(): IModes {\n    const m = this._core.coreService.decPrivateModes;\n    let mouseTrackingMode: 'none' | 'x10' | 'vt200' | 'drag' | 'any' = 'none';\n    switch (this._core.coreMouseService.activeProtocol) {\n      case 'X10': mouseTrackingMode = 'x10'; break;\n      case 'VT200': mouseTrackingMode = 'vt200'; break;\n      case 'DRAG': mouseTrackingMode = 'drag'; break;\n      case 'ANY': mouseTrackingMode = 'any'; break;\n    }\n    return {\n      applicationCursorKeysMode: m.applicationCursorKeys,\n      applicationKeypadMode: m.applicationKeypad,\n      bracketedPasteMode: m.bracketedPasteMode,\n      insertMode: this._core.coreService.modes.insertMode,\n      mouseTrackingMode: mouseTrackingMode,\n      originMode: m.origin,\n      reverseWraparoundMode: m.reverseWraparound,\n      sendFocusMode: m.sendFocus,\n      wraparoundMode: m.wraparound\n    };\n  }\n  public get options(): Required<ITerminalOptions> {\n    return this._publicOptions;\n  }\n  public set options(options: ITerminalOptions) {\n    for (const propName in options) {\n      this._publicOptions[propName] = options[propName];\n    }\n  }\n  public blur(): void {\n    this._core.blur();\n  }\n  public focus(): void {\n    this._core.focus();\n  }\n  public resize(columns: number, rows: number): void {\n    this._verifyIntegers(columns, rows);\n    this._core.resize(columns, rows);\n  }\n  public open(parent: HTMLElement): void {\n    this._core.open(parent);\n  }\n  public attachCustomKeyEventHandler(customKeyEventHandler: (event: KeyboardEvent) => boolean): void {\n    this._core.attachCustomKeyEventHandler(customKeyEventHandler);\n  }\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this._core.registerLinkProvider(linkProvider);\n  }\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    this._checkProposedApi();\n    return this._core.registerCharacterJoiner(handler);\n  }\n  public deregisterCharacterJoiner(joinerId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterCharacterJoiner(joinerId);\n  }\n  public registerMarker(cursorYOffset: number = 0): IMarker | undefined {\n    this._verifyIntegers(cursorYOffset);\n    return this._core.addMarker(cursorYOffset);\n  }\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    this._checkProposedApi();\n    this._verifyPositiveIntegers(decorationOptions.x ?? 0, decorationOptions.width ?? 0, decorationOptions.height ?? 0);\n    return this._core.registerDecoration(decorationOptions);\n  }\n  public hasSelection(): boolean {\n    return this._core.hasSelection();\n  }\n  public select(column: number, row: number, length: number): void {\n    this._verifyIntegers(column, row, length);\n    this._core.select(column, row, length);\n  }\n  public getSelection(): string {\n    return this._core.getSelection();\n  }\n  public getSelectionPosition(): IBufferRange | undefined {\n    return this._core.getSelectionPosition();\n  }\n  public clearSelection(): void {\n    this._core.clearSelection();\n  }\n  public selectAll(): void {\n    this._core.selectAll();\n  }\n  public selectLines(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.selectLines(start, end);\n  }\n  public dispose(): void {\n    this._addonManager.dispose();\n    this._core.dispose();\n  }\n  public scrollLines(amount: number): void {\n    this._verifyIntegers(amount);\n    this._core.scrollLines(amount);\n  }\n  public scrollPages(pageCount: number): void {\n    this._verifyIntegers(pageCount);\n    this._core.scrollPages(pageCount);\n  }\n  public scrollToTop(): void {\n    this._core.scrollToTop();\n  }\n  public scrollToBottom(): void {\n    this._core.scrollToBottom();\n  }\n  public scrollToLine(line: number): void {\n    this._verifyIntegers(line);\n    this._core.scrollToLine(line);\n  }\n  public clear(): void {\n    this._core.clear();\n  }\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeln(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data);\n    this._core.write('\\r\\n', callback);\n  }\n  public paste(data: string): void {\n    this._core.paste(data);\n  }\n  public refresh(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.refresh(start, end);\n  }\n  public reset(): void {\n    this._core.reset();\n  }\n  public clearTextureAtlas(): void {\n    this._core.clearTextureAtlas();\n  }\n  public loadAddon(addon: ITerminalAddon): void {\n    return this._addonManager.loadAddon(this, addon);\n  }\n  public static get strings(): ILocalizableStrings {\n    return Strings;\n  }\n\n  private _verifyIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value === Infinity || isNaN(value) || value % 1 !== 0) {\n        throw new Error('This API only accepts integers');\n      }\n    }\n  }\n\n  private _verifyPositiveIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value && (value === Infinity || isNaN(value) || value % 1 !== 0 || value < 0)) {\n        throw new Error('This API only accepts positive integers');\n      }\n    }\n  }\n}\n"],"names":["self","module","exports","e","t","i","Object","defineProperty","value","AccessibilityManager","s","r","n","o","a","h","c","Disposable","constructor","_terminal","_renderService","super","_liveRegionLineCount","_charsToConsume","_charsToAnnounce","this","_accessibilityTreeRoot","document","createElement","classList","add","tabIndex","_rowContainer","setAttribute","_rowElements","rows","_createAccessibilityTreeNode","appendChild","_topBoundaryFocusListener","_handleBoundaryFocus","_bottomBoundaryFocusListener","addEventListener","length","_refreshRowsDimensions","_renderRowsDebouncer","TimeBasedDebouncer","_renderRows","bind","_refreshRows","_liveRegion","element","insertAdjacentElement","register","onResize","_handleResize","onRender","start","end","onScroll","onA11yChar","char","_handleChar","onLineFeed","onA11yTab","spaceCount","_handleTab","onKey","_handleKey","key","onBlur","_clearLiveRegion","onDimensionsChange","_screenDprMonitor","ScreenDprMonitor","window","setListener","addDisposableDomListener","toDisposable","removeElementFromParent","position","topBoundaryElement","bottomBoundaryElement","boundaryElement","target","beforeBoundaryElement","getAttribute","buffer","lines","relatedTarget","pop","removeChild","shift","removeEventListener","newElement","unshift","push","scrollLines","focus","preventDefault","stopImmediatePropagation","children","_refreshRowDimensions","MAX_ROWS_TO_READ","textContent","Strings","tooMuchOutput","isMac","parentNode","setTimeout","keyChar","test","refresh","setSize","toString","lineData","translateBufferLineToString","ydisp","posInSet","innerText","_announceCharacters","dimensions","css","cell","height","style","width","canvas","l","prepareTextForTerminal","text","replace","bracketTextForPaste","bracketedPasteMode","paste","textarea","coreService","decPrivateModes","triggerDataEvent","moveTextAreaUnderMouseCursor","ev","screenElement","pos","getBoundingClientRect","left","clientX","top","clientY","zIndex","rightClickHandler","handlePasteEvent","copyHandler","selectionService","clipboardData","setData","selectionText","stopPropagation","getData","shouldSelectWord","rightClickSelect","select","ColorContrastCache","_color","TwoKeyMap","_css","setCss","bg","fg","set","getCss","get","setColor","getColor","clear","elements","parentElement","node","type","handler","options","disposed","dispose","__decorate","arguments","getOwnPropertyDescriptor","Reflect","decorate","__param","Linkifier2","_bufferService","_linkProviders","_linkCacheDisposables","_isMouseOut","_activeLine","_onShowLinkUnderline","EventEmitter","onShowLinkUnderline","event","_onHideLinkUnderline","onHideLinkUnderline","getDisposeArrayDisposable","_lastMouseEvent","undefined","currentLink","_currentLink","registerLinkProvider","linkProvider","providerIndex","indexOf","splice","attachToDom","mouseService","renderService","_element","_mouseService","_clearCurrentLink","_handleMouseMove","_handleMouseDown","_handleMouseUp","_positionFromMouseEvent","composedPath","contains","_lastBufferCell","x","y","_handleHover","_askForLink","_linkAtPosition","link","useLineCache","_activeProviderReplies","forEach","reply","linkWithState","Map","linkProvided","entries","_checkLinkProviderResult","provideLinks","links","linksWithState","map","size","_removeIntersectingLinks","replies","occupiedCells","Set","providerReply","startX","range","endX","cols","has","index","hasLinkBefore","j","linkAtPosition","find","_handleNewLink","_mouseDownLink","activate","startRow","endRow","_linkLeave","disposeArray","state","decorations","underline","pointerCursor","isHovered","_linkHover","defineProperties","v","toggle","_fireUnderlineEvent","onRenderedViewportChange","oldEvent","hover","showEvent","scrollOffset","_createLinkUnderlineEvent","fire","remove","leave","lower","upper","current","coords","getCoords","x1","y1","x2","y2","IBufferService","promptLabel","OscLinkProvider","_optionsService","_oscLinkService","callback","line","result","linkHandler","rawOptions","CellData","lineLength","getTrimmedLength","currentLinkId","currentStart","finishLink","hasContent","loadCell","hasExtendedAttrs","extended","urlId","getLinkData","uri","ignoreLink","allowNonHttpProtocols","parsed","URL","includes","protocol","defaultActivate","confirm","newWindow","open","opener","location","href","console","warn","call","IOptionsService","IOscLinkService","RenderDebouncer","_parentWindow","_renderCallback","_refreshCallbacks","_animationFrame","cancelAnimationFrame","addRefreshCallback","requestAnimationFrame","_innerRefresh","rowStart","rowEnd","rowCount","_rowCount","_rowStart","Math","min","_rowEnd","max","_runRefreshCallbacks","_currentDevicePixelRatio","devicePixelRatio","clearListener","listener","_listener","_outerListener","_updateDpr","_resolutionMediaMatchList","removeListener","matchMedia","addListener","Terminal","d","_","u","f","g","p","S","m","C","b","w","E","L","k","R","D","A","B","T","M","CoreTerminal","browser","Browser","_keyDownHandled","_keyDownSeen","_keyPressHandled","_unprocessedDeadKey","_onCursorMove","onCursorMove","_onKey","_onRender","_onSelectionChange","onSelectionChange","_onTitleChange","onTitleChange","_onBell","onBell","_onFocus","_onBlur","_onA11yCharEmitter","_onA11yTabEmitter","_onWillOpen","_setup","linkifier2","_instantiationService","createInstance","_decorationService","DecorationService","setService","IDecorationService","_inputHandler","onRequestBell","onRequestRefreshRows","onRequestSendFocus","_reportFocus","onRequestReset","reset","onRequestWindowsOptionsReport","_reportWindowsOptions","onColor","_handleColorEvent","forwardEvent","_afterResize","_customKeyEventHandler","onFocus","onWillOpen","_themeService","req","acc","ident","channels","color","toColorRGB","colors","ansi","C0","ESC","toRgbString","C1_ESCAPED","ST","modifyColors","rgba","toColor","narrowedAcc","restoreColor","buffers","active","preventScroll","_handleScreenReaderModeOptionChange","_accessibilityManager","_handleTextAreaFocus","sendFocus","updateCursorStyle","_showCursor","blur","_handleTextAreaBlur","_syncTextArea","isCursorInViewport","_compositionHelper","isComposing","cursorY","ybase","bufferLine","cursorX","cellHeight","getWidth","cellWidth","cursorTop","cursorLeft","lineHeight","_initGlobal","_bindKeys","hasSelection","_selectionService","pasteHandlerWrapper","isFirefox","button","rightClickSelectsWord","isLinux","_keyUp","_keyDown","_keyPress","compositionstart","compositionupdate","compositionend","_inputEvent","updateCompositionElements","parent","isConnected","_logService","debug","_document","ownerDocument","dir","fragment","createDocumentFragment","_viewportElement","_viewportScrollArea","_helperContainer","isChromeOS","_coreBrowserService","CoreBrowserService","defaultView","ICoreBrowserService","_charSizeService","CharSizeService","ICharSizeService","ThemeService","IThemeService","_characterJoinerService","CharacterJoinerService","ICharacterJoinerService","RenderService","IRenderService","resize","_compositionView","CompositionHelper","hasRenderer","setRenderer","_createRenderer","MouseService","IMouseService","viewport","Viewport","amount","onRequestSyncScrollBar","syncScrollArea","handleCursorMove","handleResize","handleBlur","handleFocus","SelectionService","ISelectionService","onRequestScrollLines","suppressScrollEvent","onRequestRedraw","handleSelectionChanged","columnSelectMode","onLinuxMouseSelection","_onScroll","BufferDecorationRenderer","handleMouseDown","coreMouseService","areMouseEventsActive","disable","enable","screenReaderMode","optionsService","onSpecificOptionChange","overviewRulerWidth","_overviewRulerRenderer","OverviewRulerRenderer","measure","bindMouse","DomRenderer","el","sendEvent","but","action","getMouseReportCoords","overrideType","buttons","getLinesScrolled","deltaY","triggerMouseEvent","col","row","ctrl","ctrlKey","alt","altKey","shiftKey","requestedEvents","mouseup","wheel","mousedrag","mousemove","eventListeners","cancel","onProtocolChange","events","logLevel","explainEvents","passive","activeProtocol","shouldForceSelection","hasScrollback","sequence","applicationCursorKeys","data","abs","handleWheel","handleTouchStart","handleTouchMove","refreshRows","shouldColumnSelect","isCursorInitialized","disp","source","attachCustomKeyEventHandler","customKeyEventHandler","registerCharacterJoiner","joinerId","deregisterCharacterJoiner","deregister","markers","addMarker","cursorYOffset","registerDecoration","decorationOptions","column","setSelection","getSelection","getSelectionPosition","selectionStart","selectionEnd","clearSelection","selectAll","selectLines","shouldIgnoreComposition","macOptionIsMeta","keydown","scrollOnUserInput","scrollToBottom","evaluateKeyboardEvent","scrollCount","_isThirdLevelShift","metaKey","charCodeAt","ETX","CR","domEvent","thirdLevelKey","isWindows","getModifierState","keyCode","charCode","which","String","fromCharCode","inputType","composed","hasValidSize","clearAllMarkers","getBlankLine","DEFAULT_ATTR_DATA","clearTextureAtlas","WindowsOptionsReportType","GET_WIN_SIZE_PIXELS","canvasWidth","toFixed","canvasHeight","GET_CELL_SIZE_PIXELS","force","cancelEvents","I","_debounceThresholdMS","_lastRefreshMs","_additionalRefreshRequested","_refreshTimeoutID","clearTimeout","refreshRequestTime","Date","now","elapsed","waitPeriodBeforeTrailingRefresh","_scrollLines","_scrollArea","themeService","scrollBarWidth","_currentRowHeight","_currentDeviceCellHeight","_lastRecordedBufferLength","_lastRecordedViewportHeight","_lastRecordedBufferHeight","_lastTouchY","_lastScrollTop","_wheelPartialScroll","_refreshAnimationFrame","_ignoreNextScrollEvent","_smoothScrollState","startTime","origin","offsetWidth","_handleScroll","_activeBuffer","onBufferActivate","activeBuffer","_renderDimensions","_handleThemeChange","onChangeColors","backgroundColor","background","_refresh","immediate","device","dpr","offsetHeight","newBufferHeight","round","scrollTop","offsetParent","diff","_smoothScroll","_isDisposed","percent","_smoothScrollPercent","_clearSmoothScrollState","smoothScrollDuration","_bubbleScroll","scrollPosFromTop","cancelable","_getPixelsScrolled","scrollHeight","_applyScrollModifier","deltaMode","WheelEvent","DOM_DELTA_LINE","DOM_DELTA_PAGE","DOM_DELTA_PIXEL","floor","modifier","fastScrollModifier","fastScrollSensitivity","scrollSensitivity","touches","pageY","_screenElement","_decorationElements","_altBufferIsActive","_dimensionsChanged","_container","_doRefreshDecorations","_queueRefresh","onDecorationRegistered","onDecorationRemoved","decoration","_removeDecoration","_renderDecoration","_refreshStyle","_refreshXPosition","_createElement","marker","display","onRenderEmitter","anchor","right","delete","ColorZoneStore","_zones","_zonePool","_zonePoolIndex","_linePadding","full","center","zones","addDecoration","overviewRulerOptions","z","_lineIntersectsZone","_lineAdjacentToZone","_addLineToZone","startBufferLine","endBufferLine","setPadding","padding","zone","drawHeight","drawWidth","drawX","_coreBrowseService","_colorZoneStore","_shouldUpdateDimensions","_shouldUpdateAnchor","_lastKnownBufferLength","_canvas","_refreshCanvasDimensions","insertBefore","ctx","getContext","_ctx","_registerDecorationListeners","_registerBufferChangeListeners","_registerDimensionChangeListeners","_width","normal","_refreshDrawHeightConstants","_refreshColorZonePadding","_containerHeight","clientHeight","_refreshDrawConstants","outerWidth","innerWidth","ceil","pixelsPerLine","nonFullHeight","_refreshDecorations","clearRect","lineWidth","_renderColorZone","fillStyle","fillRect","updateCanvasDimensions","updateAnchor","_textarea","_coreService","_isComposing","_isSendingComposition","_compositionPosition","_dataAlreadySent","_finalizeComposition","_handleAnyTextareaChanges","waitForPropagation","currentCompositionPosition","input","substring","oldValue","newValue","DEL","dontRecurse","fontFamily","fontSize","compositionViewBounds","ICoreService","getCoordsRelativeToElement","rect","elementStyle","getComputedStyle","leftPadding","parseInt","getPropertyValue","topPadding","colCount","hasValidCharSize","cssCellWidth","cssCellHeight","isSelection","moveToCellSequence","moveToRequestedRow","startY","targetY","bufferService","applicationCursor","wrappedRowsForRow","rowsToMove","wrappedRows","direction","isWrapped","repeat","currentRow","lineWraps","startCol","endCol","forward","currentCol","bufferStr","count","str","rpt","targetX","rowDifference","TERMINAL_CLASS_PREFIX","FOCUS_CLASS","nextTerminalId","_linkifier2","instantiationService","_terminalClass","_cellToRowElements","_refreshRowElements","_selectionContainer","createRenderDimensions","_updateDimensions","onOptionChange","_handleOptionsChanged","_injectCss","_rowFactory","DomRendererRowFactory","_handleLinkHover","_handleLinkLeave","_themeStyleElement","_dimensionsStyleElement","letterSpacing","overflow","styles","_terminalSelector","foreground","BOLD_CLASS","fontWeight","fontWeightBold","ITALIC_CLASS","cursor","cursorAccent","CURSOR_CLASS","CURSOR_STYLE_BLOCK_CLASS","CURSOR_BLINK_CLASS","CURSOR_STYLE_BAR_CLASS","cursorWidth","CURSOR_STYLE_UNDERLINE_CLASS","selectionBackgroundOpaque","selectionInactiveBackgroundOpaque","INVERTED_DEFAULT_COLOR","opaque","handleDevicePixelRatioChange","handleCharSizeChanged","renderRows","viewportStartRow","viewportEndRow","viewportCappedStartRow","viewportCappedEndRow","documentFragment","isXFlipped","_createSelectionElement","colStart","colEnd","replaceChildren","cursorAbsoluteY","cursorBlink","rowElement","cursorStyle","Int16Array","createRow","_setCellUnderline","enabled","span","textDecoration","IInstantiationService","DIM_CLASS","UNDERLINE_CLASS","STRIKETHROUGH_CLASS","_workCell","_columnSelectMode","_selectionStart","_selectionEnd","isCursorRow","cellMap","joinedRanges","getJoinedCharacters","getCode","NULL_CELL_CODE","elemIndex","resolvedBg","isJoined","lastCharX","JoinedCellData","translateToString","charElement","isCursorHidden","isBold","isItalic","isDim","isInvisible","WHITESPACE_CELL_CHAR","getChars","isUnderline","underlineStyle","isUnderlineColorDefault","isUnderlineColorRGB","textDecorationColor","AttributeData","getUnderlineColor","join","drawBoldTextInBrightColors","isStrikethrough","getFgColor","fgColorMode","getFgColorMode","getBgColor","bgColorMode","getBgColorMode","isInverse","temp","temp2","bgOverride","fgOverride","isTop","forEachDecorationAtCell","layer","backgroundColorRGB","foregroundColorRGB","isInSelection","_isCellInSelection","selectionForeground","isFocused","_addStyle","padStart","multiplyOpacity","_applyMinimumContrast","subarray","fill","adjustedColor","minimumContrastRatio","excludeFromContrastRatioDemands","contrastCache","ensureContrastRatio","padChar","DIM_OPACITY","TEXT_BASELINE","isLegacyEdge","isPowerlineGlyph","codepoint","isRestrictedPowerlineGlyph","throwIfFalsy","SelectionModel","isSelectAllActive","selectionStartLength","finalSelectionStart","areSelectionValuesReversed","finalSelectionEnd","startPlusLength","handleTrim","_onCharSizeChange","onCharSizeChange","_measureStrategy","DomMeasureStrategy","onMultipleOptionChange","_parentElement","_result","_measureElement","geometry","firstCell","chars","content","combinedData","isCombined","setFromCharData","getAsCharData","_characterJoiners","_nextCharacterJoinerId","joiner","id","ranges","lineStr","rangeStartColumn","currentStringIndex","rangeStartStringIndex","rangeAttrFG","getFg","rangeAttrBG","getBg","_getJoinedRanges","startIndex","endIndex","allJoinedRanges","error","joinerRanges","_mergeRanges","_stringRangesToCellRanges","currentRangeIndex","currentRangeStarted","currentRange","getString","static","newRange","inRange","_isFocused","_cachedIsFocused","hasFocus","queueMicrotask","decorationService","coreBrowserService","_pausedResizeTask","DebouncedIdleTask","_isPaused","_needsFullRefresh","_isNextRenderRedrawOnly","_needsSelectionRefresh","_canvasWidth","_canvasHeight","_selectionState","_onDimensionsChange","_onRenderedViewportChange","_onRefreshRequest","onRefreshRequest","_renderer","_renderDebouncer","_fullRefresh","observer","IntersectionObserver","_handleIntersectionChange","threshold","observe","disconnect","entry","isIntersecting","intersectionRatio","flush","isRedrawOnly","_fireOnCanvasResize","renderer","NON_BREAKING_SPACE_CHAR","ALL_NON_BREAKING_SPACE_REGEX","_linkifier","_dragScrollAmount","_enabled","_mouseDownTimeStamp","_oldHasSelection","_oldSelectionStart","_oldSelectionEnd","_onLinuxMouseSelection","_onRedrawRequest","_onRequestScrollLines","_mouseMoveListener","_mouseUpListener","onUserInput","_trimListener","onTrim","_handleTrim","_handleBufferActivate","_model","_activeSelectionMode","_removeMouseDownListeners","lineText","startRowEndCol","isLinuxMouseSelection","_isClickInSelection","_getMouseBufferCoords","_areCoordsInSelection","isCellInSelection","_selectWordAtCursor","allowWhitespaceOnlySelection","getRangeLength","_selectWordAt","_getMouseEventScrollAmount","offset","terminalHeight","macOptionClickForcesSelection","timeStamp","_handleIncrementalClick","detail","_handleSingleClick","_handleDoubleClick","_handleTripleClick","_addMouseDownListeners","_dragScrollIntervalTimer","setInterval","_dragScroll","clearInterval","hasWidth","_selectLineAt","previousSelectionEnd","_selectToWordAt","timeElapsed","altClickMovesCursor","coordinates","_fireEventIfSelectionChanged","_fireOnSelectionChange","_convertViewportColToCharacterIndex","charIndex","_getWordAt","followWrappedLinesAbove","followWrappedLinesBelow","charOffset","leftWideCharCount","rightWideCharCount","leftLongCharOffset","rightLongCharOffset","charAt","_isCharWordSeparator","slice","trim","getCodePoint","previousBufferLine","previousLineWordPosition","nextBufferLine","nextLineWordPosition","wordPosition","wordSeparator","wrappedRange","getWrappedRangeForLine","first","last","createDecorator","DEFAULT_ANSI_COLORS","DEFAULT_FOREGROUND","DEFAULT_BACKGROUND","DEFAULT_CURSOR","DEFAULT_CURSOR_ACCENT","DEFAULT_SELECTION","freeze","toCss","toRgba","_onChangeColors","_contrastCache","_colors","selectionBackgroundTransparent","blend","selectionInactiveBackgroundTransparent","_updateRestoreColors","_setTheme","theme","parseColor","selectionBackground","selectionInactiveBackground","NULL_COLOR","isOpaque","opacity","black","red","green","yellow","blue","magenta","cyan","white","brightBlack","brightRed","brightGreen","brightYellow","brightBlue","brightMagenta","brightCyan","brightWhite","extendedAnsi","colorCount","slot","_restoreColor","_restoreColors","cssString","fallback","CircularList","_maxLength","onDeleteEmitter","onDelete","onInsertEmitter","onInsert","onTrimEmitter","_array","_startIndex","_length","maxLength","newMaxLength","newArray","_getCyclicIndex","newLength","recycle","isFull","deleteCount","items","countToTrim","trimStart","shiftElements","expandListBy","clone","val","depth","clonedObject","Array","isArray","rgb","contrastRatio","toPaddedHex","$r","$g","$b","$a","l1","l2","toChannels","fgR","fgG","fgB","bgR","bgG","bgB","ratio","rgbaColor","factor","$ctx","$litmusColor","isNode","willReadFrequently","globalCompositeOperation","createLinearGradient","match","rgbaMatch","parseFloat","getImageData","relativeLuminance2","rs","gs","bs","pow","relativeLuminance","reduceLuminance","bgRgba","fgRgba","cr","increaseLuminance","bgL","fgL","resultA","resultARatio","resultB","hasWriteSyncWarnHappened","_onBinary","onBinary","_onData","onData","_onLineFeed","_onResize","_onWriteParsed","onWriteParsed","InstantiationService","OptionsService","BufferService","LogService","ILogService","CoreService","CoreMouseService","ICoreMouseService","unicodeService","UnicodeService","IUnicodeService","_charsetService","CharsetService","ICharsetService","OscLinkService","InputHandler","onRequestScrollToBottom","_writeBuffer","handleUserInput","_handleWindowsModeOptionChange","markRangeDirty","scrollBottom","WriteBuffer","promiseResult","parse","_windowsMode","_onScrollApi","write","writeSync","maxSubsequentCalls","LogLevelEnum","WARN","isNaN","MINIMUM_COLS","MINIMUM_ROWS","scroll","eraseAttr","scrollPages","pageCount","scrollToTop","scrollToLine","registerEscHandler","registerDcsHandler","registerCsiHandler","registerOscHandler","windowsMode","_enableWindowsMode","disposables","updateWindowsModeWrappedState","final","_listeners","_disposed","_event","arg1","arg2","queue","from","to","GLEVEL","paramToWindowOption","opts","setWinLines","restoreWin","minimizeWin","setWinPosition","setWinSizePixels","raiseWin","lowerWin","refreshWin","setWinSizeChars","maximizeWin","fullscreenWin","getWinState","getWinPosition","getWinSizePixels","getScreenSizePixels","getCellSizePixels","getWinSizeChars","getScreenSizeChars","getIconTitle","getWinTitle","pushTitle","popTitle","$temp","_coreMouseService","_unicodeService","_parser","EscapeSequenceParser","flag","_parseBuffer","Uint32Array","_stringDecoder","StringToUtf32","_utf8Decoder","Utf8ToUtf32","_windowTitle","_iconName","_windowTitleStack","_iconNameStack","_curAttrData","_eraseAttrDataInternal","_onRequestBell","_onRequestRefreshRows","_onRequestReset","_onRequestSendFocus","_onRequestSyncScrollBar","_onRequestWindowsOptionsReport","_onA11yChar","_onA11yTab","_onColor","_parseStack","paused","cursorStartX","cursorStartY","decodedLength","_specialColors","_dirtyRowTracker","DirtyRowTracker","setCsiHandlerFallback","params","identifier","identToString","toArray","setEscHandlerFallback","setExecuteHandlerFallback","code","setOscHandlerFallback","setDcsHandlerFallback","payload","setPrintHandler","print","insertChars","intermediates","scrollLeft","cursorUp","scrollRight","cursorDown","cursorForward","cursorBackward","cursorNextLine","cursorPrecedingLine","cursorCharAbsolute","cursorPosition","cursorForwardTab","eraseInDisplay","prefix","eraseInLine","insertLines","deleteLines","deleteChars","scrollUp","scrollDown","eraseChars","cursorBackwardTab","charPosAbsolute","hPositionRelative","repeatPrecedingCharacter","sendDeviceAttributesPrimary","sendDeviceAttributesSecondary","linePosAbsolute","vPositionRelative","hVPosition","tabClear","setMode","setModePrivate","resetMode","resetModePrivate","charAttributes","deviceStatus","deviceStatusPrivate","softReset","setCursorStyle","setScrollRegion","saveCursor","windowOptions","restoreCursor","insertColumns","deleteColumns","selectProtected","requestMode","setExecuteHandler","BEL","bell","LF","lineFeed","VT","FF","carriageReturn","BS","backspace","HT","tab","SO","shiftOut","SI","shiftIn","C1","IND","NEL","nextLine","HTS","tabSet","OscHandler","setTitle","setIconName","setOrReportIndexedColor","setHyperlink","setOrReportFgColor","setOrReportBgColor","setOrReportCursorColor","restoreIndexedColor","restoreFgColor","restoreBgColor","restoreCursorColor","reverseIndex","keypadApplicationMode","keypadNumericMode","fullReset","setgLevel","selectDefaultCharset","CHARSETS","selectCharset","screenAlignmentPattern","setErrorHandler","DcsHandler","requestStatusString","getAttrData","_preserveStack","_logSlowResolvingAsync","Promise","race","res","rej","catch","err","_getCurrentLinkId","wasPaused","MAX_PARSEBUFFER_LENGTH","DEBUG","prototype","split","clearRange","len","decode","chWidth","charset","wraparoundMode","wraparound","insertMode","modes","curAttr","bufferRow","markDirty","setCellFromCodePoint","wcwidth","ch","stringFromCodePoint","addLineToLink","_eraseAttrData","insertCells","getNullCell","NULL_CELL_WIDTH","addCodepointToCell","precedingCodepoint","convertEol","reverseWraparound","_restrictCursor","originalX","nextStop","maxCol","_setCursor","_moveCursor","diffToTop","diffToBottom","param","tabs","prevStop","_eraseInBufferLine","clearWrap","respectProtect","replaceCells","_resetBufferLine","clearMarkers","scrollBackSize","scrollBottomRowsOffset","scrollBottomAbsolute","deleteCells","_is","term","termName","setgCharset","DEFAULT_CHARSET","applicationKeypad","activeEncoding","activateAltBuffer","activateNormalBuffer","dm","mouseProtocol","mouseEncoding","cs","b2v","_updateAttrColor","mode","c1","c2","c3","fromColorRGB","_extractColor","attr","accu","cSpace","advance","hasSubParams","subparams","getSubParams","underlineColor","_processUnderline","updateExtended","_processSGR0","savedX","savedY","savedCurAttrData","savedCharset","isBlinking","bottom","second","_savedCharset","slots","idx","spec","exec","args","_createHyperlink","_finishHyperlink","parsedParams","idParamIndex","findIndex","startsWith","registerLink","_setOrReportSpecialColor","collectAndFlag","scrollRegionHeight","level","yOffset","markAllDirty","isProtected","block","bar","_disposables","unregister","array","FourKeyMap","_data","third","fourth","isIphone","isIpad","getSafariVersion","isSafari","navigator","userAgent","platform","majorVersion","SortedList","_getKey","insert","_search","getKeyIterator","forEachByKey","values","mid","midKey","IdleTaskQueue","PriorityTaskQueue","TaskQueue","_tasks","_i","enqueue","task","_start","_idleCallback","_cancelCallback","_requestCallback","_process","deadline","taskDuration","longestTask","lastDeadlineRemaining","timeRemaining","deadlineRemaining","_createDeadline","duration","requestIdleCallback","cancelIdleCallback","_queue","lastChar","CHAR_DATA_CODE_INDEX","WHITESPACE_CELL_CODE","ExtendedAttrs","newObj","isBlink","isFgRGB","isBgRGB","isFgPalette","isBgPalette","isFgDefault","isBgDefault","isAttributeDefault","isEmpty","getUnderlineColorMode","isUnderlineColorPalette","getUnderlineStyle","ext","_ext","_urlId","BufferStringIterator","Buffer","MAX_BUFFER_SIZE","_hasScrollback","_nullCell","fromCharData","NULL_CELL_CHAR","_whitespaceCell","WHITESPACE_CELL_WIDTH","_isClearing","_memoryCleanupQueue","_memoryCleanupPosition","_cols","_rows","_getCorrectBufferLength","setupTabStops","getWhitespaceCell","BufferLine","relativeY","correctBufferLength","scrollback","fillViewportRows","fillAttr","newCols","newRows","nullCell","dirtyMemoryLines","addToY","amountToTrim","_isReflowEnabled","_reflow","_batchedMemoryCleanup","normalRun","counted","cleanupMemory","_reflowLarger","_reflowSmaller","toRemove","reflowLargerGetLinesToRemove","newLayoutResult","reflowLargerCreateNewLayout","reflowLargerApplyNewLayout","layout","_reflowLargerAdjustViewport","countRemoved","viewportAdjustments","toInsert","countToInsert","trimmedLines","wrappedLines","absoluteY","lastLineLength","destLineLengths","reflowSmallerGetNewLineLengths","linesToAdd","newLines","newLine","destLineIndex","destCol","srcLineIndex","srcCol","cellsToCopy","copyCellsFrom","wrappedLinesIndex","getWrappedLineTrimmedLength","setCell","insertEvents","originalLines","originalLinesLength","originalLineIndex","nextToInsertIndex","nextToInsert","countInsertedSoFar","nextI","insertCountEmitted","stringIndexToBufferIndex","lineIndex","stringIndex","trimRight","CHAR_DATA_WIDTH_INDEX","CHAR_DATA_CHAR_INDEX","tabStopWidth","Marker","onDispose","_removeMarker","iterator","startOverscan","endOverscan","_buffer","_trimRight","_endIndex","_startOverscan","_endOverscan","_current","hasNext","next","$startIndex","fillCellData","_combined","_extendedAttrs","cp","CHAR_DATA_ATTR_INDEX","codePoint","eAttrs","byteLength","uint32Cells","keys","extKeys","copyFrom","src","applyInReverse","srcData","srcCombinedKeys","bufferCols","endsInNull","followingLineStartsWithWide","oldCols","bufferAbsoluteY","srcTrimmedTineLength","srcRemainingCells","destRemainingCells","countToRemove","nextToRemoveIndex","nextToRemoveStart","countRemovedSoFar","newLayout","newLayoutLines","newLineLengths","cellsNeeded","reduce","srcLine","cellsAvailable","oldTrimmedLength","endsWithWide","BufferSet","_onBufferActivate","_normal","_alt","inactiveBuffer","obj","combined","DEFAULT_EXT","DEFAULT_ATTR","DEFAULT_COLOR","isDisposed","_id","_nextId","_onDispose","disposable","q","Q","K","Y","Z","H","NUL","SOH","STX","EOT","ENQ","ACK","DLE","DC1","DC2","DC3","DC4","NAK","SYN","ETB","CAN","EM","SUB","FS","GS","RS","US","SP","PAD","HOP","BPH","NBH","SSA","ESA","HTJ","VTS","PLD","PLU","RI","SS2","SS3","DCS","PU1","PU2","STS","CCH","MW","SPA","EPA","SOS","SGCI","SCI","CSI","OSC","PM","APC","KEYCODE_KEY_MAPPINGS","applicationCursorMode","modifiers","keyMapping","keyString","toUpperCase","toLowerCase","utf32ToString","_interim","startPos","interim","Uint8Array","byte1","byte2","byte3","byte4","discardInterim","tmp","missing","fourStop","table","UnicodeV6","BMP_COMBINING","HIGH_COMBINING","version","num","ucs","_action","_callbacks","_pendingData","_bufferOffset","_isSyncWriting","_syncCalls","_didUserInput","chunk","cb","_innerWrite","lastTime","continuation","resolve","then","RGB_REX","HASH_REX","pad","bits","s2","low","base","adv","PAYLOAD_LIMIT","DcsParser","EMPTY_HANDLERS","_handlers","create","_active","_ident","_handlerFb","_stack","loopPosition","fallThrough","registerHandler","handlerList","handlerIndex","clearHandler","setHandlerFallback","unhook","hook","put","success","handlerResult","EMPTY_PARAMS","Params","addParam","_handler","_params","_hitLimit","ret","VT500_TRANSITION_TABLE","TransitionTable","setDefault","addMany","codes","blueprint","apply","unused","PRINTABLES","EXECUTABLES","states","_transitions","handlers","handlerPos","transition","chunkPos","initialState","currentState","_collect","_printHandlerFb","_executeHandlerFb","_csiHandlerFb","_escHandlerFb","_errorHandlerFb","_printHandler","_executeHandlers","_csiHandlers","_escHandlers","_oscParser","OscParser","_dcsParser","_errorHandler","_identifier","finalRange","intermediate","finalCode","reverse","clearPrintHandler","clearEscHandler","clearExecuteHandler","clearCsiHandler","clearDcsHandler","clearOscHandler","clearErrorHandler","NON_ASCII_PRINTABLE","collect","abort","addSubParam","addDigit","handlersEsc","jj","_state","_put","maxSubParamsLength","Int32Array","_subParams","_subParamsLength","_subParamsIdx","Uint16Array","_rejectDigits","_rejectSubDigits","_digitIsSub","newParams","getSubParamsAll","store","cur","AddonManager","_addons","instance","loadAddon","terminal","loadedAddon","_wrappedAddonDispose","BufferApiView","init","viewportY","baseY","getLine","BufferLineApiView","_line","getCell","startColumn","endColumn","BufferNamespaceApi","_core","_onBufferChange","onBufferChange","_alternate","alternate","ParserApi","addCsiHandler","addDcsHandler","addEscHandler","addOscHandler","UnicodeApi","provider","versions","activeVersion","isUserScrolling","_cachedBlankLine","topRow","bottomRow","willBufferBeTrimmed","oldYdisp","scrollAmount","glevel","_charsets","DEFAULT_PROTOCOLS","NONE","restrict","X10","VT200","DRAG","ANY","eventCode","isSGR","DEFAULT_ENCODINGS","DEFAULT","SGR","SGR_PIXELS","name","_protocols","_encodings","_activeProtocol","_activeEncoding","_lastEvent","_onProtocolChange","addProtocol","addEncoding","encoding","_equalEvents","report","triggerBinaryEvent","down","up","drag","move","e1","e2","pixels","DEFAULT_MODES","DEFAULT_DEC_PRIVATE_MODES","_onUserInput","_onRequestScrollToBottom","wasUserInput","disableStdin","$xmin","$xmax","_decorations","_onDecorationRegistered","_onDecorationRemoved","Decoration","markerDispose","getDecorationsAtCell","xmin","xmax","_cachedBg","_cachedFg","foregroundColor","ServiceCollection","service","_entries","_services","getService","ctor","serviceDependencies","getServiceDependencies","sort","serviceArgs","dependency","firstServiceArgPos","optionsKeyToLogLevel","info","INFO","ERROR","off","OFF","_updateLogLevel","_evalLazyOptionalParams","optionalParams","_log","message","log","DEFAULT_OPTIONS","customGlyphs","allowProposedApi","allowTransparency","FONT_WEIGHT_OPTIONS","_onOptionChange","defaultOptions","assign","_sanitizeAndValidateOption","_setupOptions","eventKey","getter","propName","setter","desc","_entriesWithId","_dataByLinkId","_removeMarkerFromLink","_getEntryIdKey","linkId","every","linkData","serviceRegistry","di$dependencies","decorator","storeServiceDependency","di$target","_providers","_onChange","onChange","defaultProvider","_activeProvider","getStringCellWidth","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","CONSTRUCTOR_ONLY_OPTIONS","_addonManager","_publicOptions","_checkReadonlyOptions","_checkProposedApi","parser","unicode","mouseTrackingMode","applicationCursorKeysMode","applicationKeypadMode","originMode","reverseWraparoundMode","sendFocusMode","columns","_verifyIntegers","registerMarker","_verifyPositiveIntegers","writeln","addon","strings","Infinity"],"sourceRoot":""}